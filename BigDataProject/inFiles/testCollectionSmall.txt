<collection>
<page>
<id>16</id>
<title>10G-EPON</title>
<text>The term '''10G-EPON''' refers to '''10 Gbit/s Ethernet Passive Optical Network''' standard, [[IEEE]] 802.3av<ref>[http://www.ieee802.org/3/av/ IEEE P802.3av Task Force]</ref>. The standard supports two configurations: ''symmetric'', operating at 10 Gbit/s data rate in both upstream and downstream directions, and ''asymmetric'', operating at 10 Gbit/s in the downstream direction and 1 Gbit/s in the upstream direction.

== Standardization Timeline ==
In March 2006, IEEE 802.3 working group held call for interest (CFI) for 10 Gbit/s EPON study group. According to the CFI materials, representatives from the following companies supported the formation of the study group<ref>[http://www.ieee802.org/3/cfi/0306_1/cfi_0306_1.pdf "10Gb/s PHY for EPON - Call For Interest Presentation]</ref>:
[[Advance/Newhouse Communications]], [[Aeluros]], [[Agilent]], [[Allied Telesyn]], [[Alloptic]], [[Ample Communications]], [[Astar-ODSM]], [[Broadcom]], [[Centillium Communications]], [[China Netcom]], [[China Telecom]], [[Chunghwa Telecom]], [[Cisco Systems]], [[ClariPhy Communications]], [[Conexant Systems]], [[Corecess]], [[Corning Incorporated|Corning]], [[Delta Electronics]], [[ETRI]], [[Fiberxon]], [[FOTEK Optoelectronics]], [[ImmenStar]], [[Infinera]], [[ITRI]], [[KDDI R&D Labs.]], [[K-Opticom]], [[Korea Telecom]], [[NEC]], [[OpNext]], [[Picolight]], [[Quake Technologies]], [[Salira Systems]], [[Samsung Electronics]], [[Softbank BB]], [[Teknovus]], [[Teranetics]], [[Texas Instruments]], [[Telecom Malaysia]], [[TranSwitch]], [[UNH IOL]], [[UTStarcom]], [[Vitesse]]. 

By September 2006, the study group has completed its charter and IEEE 802.3 formed the 802.3av task force to produce the draft standard for 10 Gbit/s EPON. In September 2009, the IEEE 802 Plenary ratified the amendment to 802.3 to make 802.3av a standard.

The following are the major milestones in 10 Gbit/s EPON study group:
{| class="wikitable" border="1"
|-
! Date
! Milestone
|-
| September 2006
| IEEE 802.3av task force is formed. First task force meeting in Knoxville, TN.
|-
| December 2007
| Draft D1.0 is produced
|-
| July 2008
| Draft D2.0 is produced. Working Group balloting begins.
|-
| November 2008
| Cut-off date for last technical change 
|-
| January 2009
| Draft D3.0 is produced. Sponsor balloting begins.
|-
| September 2009
| Standard approval
|}

== Architecture ==
=== Symmetric 10 Gb/s EPON (10/10G-EPON) ===
Symmetric-rate 10/10G-EPON supports transmit and receive data paths operating at 10 Gbit/s.  The main driver for 10/10G-EPON is the necessity to provide adequate downstream and upstream bandwidth to support the [[Multi-Dwelling Unit|MDU]] environment. When deployed in the [[Multi-Dwelling Unit|MDU]] configuration, one EPON ONU may be connected to up to a thousand subscribers. 

The 10/10G-EPON employs a number of functions that are common to other point-to-point Ethernet standards.  For example, such functions as 64B/66B line coding, self-synchronizing scrambler, or gearbox are also used in 10GBASE-SR, 10GBASE-LR, 10GBASE-ER, 10GBASE-LRM, and 10GBASE-KR types of Ethernet links.

=== Asymmetric 10 Gb/s EPON (10/1G-EPON) ===

The asymmetric 10/1G-EPON appear less challenging than the symmetric option, as this specification relies on fairly mature technologies.  The upstream transmission is identical to that of the existing 1G-EPON (as specified in IEEE Std. 802.3ah), and will rely on field-proven and mass deployed burst-mode optical transceivers. The downstream transmission, which uses continuous-mode optics, will rely on the maturity of 10 Gbit/s point-to-point Ethernet devices.

=== Power budgets ===
The 802.3av defines several power budgets, denoted either PR or PRX.  PRX power budget describes asymmetric–rate PHY for PON operating at 10 Gbit/s downstream and 1 Gbit/s upstream.  PR power budget describes symmetric–rate PHY for PON operating at 10 Gbit/s downstream and 10 Gbit/s upstream.  Each power budget is further identified with a numeric representation of its class, where value of 10 represents low power budget, value of 20 represents medium power budget, and value of 30 represents high power budget.  The 802.3av draft standard defines the following power budgets:

{| class="wikitable" border="1"
|-
! Power Budget
! Downstream Line Rate (Gb/s)
! Upstream Line Rate (Gb/s)
! Channel Insertion Loss (dB)
! Notes
|-
! PRX10
| 10.3125
| 1.25
| 20
| compatible with PX10 power budget defined for 1G-EPON
|-
! PRX20
| 10.3125
| 1.25
| 24
| compatible with PX20 power budget defined for 1G-EPON
|-
! PRX30
| 10.3125
| 1.25
| 29
|
|- 
! PR10
| 10.3125
| 10.3125
| 20
| compatible with PX10 power budget defined for 1G-EPON
|-
! PR20
| 10.3125
| 10.3125
| 24
| compatible with PX20 power budget defined for 1G-EPON
|-
! PR30
| 10.3125
| 10.3125
| 29
|
|}

=== Forward error correction ===

The 10G-EPON employs a ''stream-based'' forward error correction (FEC) mechanism based on Reed Solomon(255, 223). The FEC is mandatory for all channels operating at 10 Gbit/s rate, i.e., both downstream and upstream channels in symmetric 10 Gbit/s EPON and the downstream channel in the 10/1 Gbit/s asymmetric EPON. (Upstream channel in the asymmetric EPON is the same as in 1 Gbit/s EPON, i.e., optional frame-based FEC using RS(255, 239).)

== Backward compatibility ==

The 10G-EPON standard defines a new physical layer, keeping the MAC, MAC Control and all the layers above unchanged to the greatest extent possible.  This means that users of 10G-EPON can expect backward compatibility of network management system (NMS), PON-layer operations, administrations, and maintenance (OAM) system, DBA and scheduling, and so on.

=== Coexistence with 1G-EPON ===

The 802.3av standard places significant emphasis on enabling simultaneous operation of 1 Gbit/s and 10 Gbit/s EPON systems on the same outside plant. In the downstream direction, the 1 Gbit/s and 10 Gbit/s channels are separated in the wavelength domain, with 1 Gbit/s transmission limited to 1480-1500 nm band and 10 Gbit/s transmission using 1575-1580 nm band. 

In the upstream direction, the 1 Gbit/s and 10 Gbit/s bands overlap. 1 Gbit/s band spreads from 1260 to {{convert|1360|nmi|km|abbr=on}}; 10 Gbit/s band uses 1260 to {{convert|1280|nmi|km|abbr=on}} band.  This allows both upstream channels to share spectrum region characterized by low chromatic disperson, but requires the 1 Gbit/s and 10 Gbit/s channels to be separated in time domain. Since burst transmissions from different ONUs now may have different line rates, this method is termed ''dual-rate TDMA''.

Various OLT implementations may support 1 Gbit/s and 10 Gbit/s transmissions only downstream direction, only upstream direction, or in both downstream and upstream directions. The following table illustrates which ONU types are simultaneously supported by various OLT implementations:

{| class="wikitable" border="1"
|-
! OLT Implementation
! Supported ONU types
|-
| Downstream: two wavelengths<BR>Upstream: single rate
| (1) 1G-EPON ONU<BR>(2) 10/1G-EPON ONU
|-
| Downstream: single wavelength<BR>Upstream: dual rate
| (1) 10/10G-EPON ONU<BR>(2) 10/1G-EPON ONU
|-
| Downstream: two wavelengths<BR>Upstream: dual rate
| (1) 1G-EPON ONU<BR>(2) 10/1G-EPON ONU<BR>(3) 10/10G-EPON ONU
|}
==10GPON==
[[G.987]] [[10GPON]] has 10Gbps downstream and 2.5Gps upstream – framing is ”G-PON like” and so intended to coexist with [[GPON]] instead of EPON. [http://conference.vde.com/ecoc-2009/programs/documents/sp_stefandahlfort_ng%20access.pdf]

== References ==
{{reflist}}

== External links ==
*[http://www.ieee802.org/3/av/ IEEE 802.3av website]
*[http://www.ethernetalliance.org/images/10GEPON_whitepaper_EA_Final%202.pdf Ethernet Alliance 10G-EPON white paper]
*[http://www.teknovus.com/News-Events/Press-Releases/2009/10G-EPON-Standard-Ratified]
*[http://www.vitesse.com/fttx Next-gen FTTX ecosystem]

{{DEFAULTSORT:10g-Epon}}
[[Category:Broadband]]
[[Category:Network architecture]]
[[Category:Fiber-optic communications]]</text>
</page>
<page>
<id>19</id>
<title>10PASS-TS</title>
<text>{{external links|date=January 2011}}

'''10PASS-TS''' is an [[IEEE 802.3-2008]] Physical Layer ([[PHY]]) specification for a [[full-duplex]] short reach [[Point-to-point communication (telecommunications)|point-to-point]] [[Ethernet]] link over [[voice-grade copper]] wiring. 2BASE-TL is used in [[Ethernet in the first mile]] applications.

10PASS-TS PHYs deliver a minimum of 10 [[Mbit/s]] over distances of up to {{convert|750|m|ft}}, using [[ITU-T]] [[G.993.1]] ([[VDSL]]) technology over a single copper pair. These PHYs may also support an optional aggregation or bonding of multiple copper pairs, called [[PME Aggregation Function]] (PAF).

Unlike [[10BASE-T]], [[100BASE-T]] and [[1000BASE-T]] PHYs, providing a single rate of 10, 100 or 1000 Mbit/s respectively, 10PASS-TS link rate can vary, depending on the copper channel characteristics, such as length, wire diameter ([[American wire gauge|gauge]]), number of pairs if the link is aggregated etc.

== 10PASS-TS Equipment Manufacturers ==
*Extreme Copper, Inc. (http://www.extremecopper.com)

==10PASS-TS Chip Vendors==
* Broadcom (http://www.broadcom.com)
* Lantiq (http://www.lantiq.com)
* Ikanos (http://www.ikanos.com)

==See also==
* [[Ethernet in the First Mile]]
* [[PME Aggregation Function]]
* [[2BASE-TL]]

==External links==
*[http://standards.ieee.org/getieee802/802.3.html Get IEEE 802.3] - "IEEE Standard for Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 3: Carrier Sense Multiple Access with Collision Detection (CSMA/CD) Access Method and Physical Layer Specifications", IEEE Std 802.3-2008, November 2008.
*[http://www.ieee802.org/3/ah/ IEEE 802.3ah] - Ethernet in the First Mile Task Force archive


{{compu-network-stub}}

[[Category:Ethernet]]
[[Category:Bonding protocols]]
[[Category:Network protocols]]
[[Category:Physical layer protocols]]

[[fr:10PASS-TS]]</text>
</page>
<page>
<id>26</id>
<title>12th Computer Olympiad</title>
<text>The '''12th [[Computer Olympiad]]'''  was held in [[Amsterdam]], [[The Netherlands]] in conjunction with the 15th [[World Computer Chess Championship]] and Computer Games Workshop 2007 (CGW2007).

[[IBM]], SARA Computing and Networking Services and NCF (Foundation of National Computing Facilities) are enabling the organization of the Computer Games Workshop 2007 (CGW2007) (15-17 June 2007), the 15th World Computer-Chess Championship (WCCC) (11-18 June) and the 12th Computer Olympiad (CO) (11-18 June) was held in Amsterdam, The Netherlands.

Location: CGW2007 (The Turing hall - Z011), WCCC (Eulerzaal – Z009) and Computer Olympiad (Newtonzaal – Z010) , Science Park Amsterdam, Kruislaan 413, 1098 SJ Amsterdam.

==Medals Awarded==

[[Game of the Amazons|Amazons]] (2 participants)
# 8 Queens Problem (Johann de Koning) (NL)
# Campya (Julien Kloetzer) (FRA)

[[Backgammon]] (3 participants)
# Bgblitz (Frank Berger) (DEU)
# [http://www.gnu.org/software/gnubg/ GNU Backgammon]
# MCgammon (Guillaume Chaslot, François van Lieshout) (BEL)

[[Chinese Chess]] (5 participants)
# NeuChess (Jiao Wang) (CHN)
# Shiga (Ming-Cheng Cheng, Shi-Jim Yen) (TWN)
# XieXie (Pascal Tang, Eugenio Castillo, Jih Tung Pai) (FRA)

[[Connect6]] (4 participants)
# X6 (alsdkfjiwen-Liou, Shi-Jim Yen) (TWN)
# MeinStein (Theo van der Storm) (NL)
# Kavalan (Shi-Jim Yen) (TWN)

[[International draughts]] (7 participants)
# Dam 2.2 (Harm Jetten) (NL)
# TDKing (Ton Tillemans) (CHE)
# Sjende Blyn (Jelle Wiersma) (NL)

[[Go (board game)|Go]] 19×19 (8 participants)
# [http://www.lri.fr/~gelly/MoGo.htm MoGo] (Sylvain Gelly, Yizao Wang) (FRA)
# [http://remi.coulom.free.fr/CrazyStone Crazy Stone] (Rémi Coulom) (FRA)
# [[GNU Go]]

[[Go (board game)|Go]] 9×9 (10 participants)
# Steenvreter (Erik van der Werf) (NL)
# [http://www.lri.fr/~gelly/MoGo.htm MoGo] (Sylvain Gelly) (FRA)
# [http://remi.coulom.free.fr/CrazyStone Crazy Stone] (Rémi Coulom) (FRA)

[[Shogi]] (3 participants)
# Tacos (Jun Nagashima, Hiroyuki Iida, Hashimoto Tsuyoshi) (JPN)
# Reiki (Satoshi Todoroki) (JPN)
# HIT+SS (Shohei Seike, Takeshi Ito, Ryosuke Ohguchi) (JPN)

[[Go variants#Shadow Go|Phantom Go]] (2 participants)
# GoLois (Tristan Cazenave) (FRA)
# InTheDark (Joris Bosboom) (NL)

[[Surakarta (game)|Surakarta]] (2 participants)
# SIA (Mark Winands) (NL)
# Incognito (Irmin Auwerda) (NL)

==External links==
* [http://www.grappa.univ-lille3.fr/icga/event.php?id=40 Official home page]
* [http://www.cs.unimaas.nl/CGW2007/ Computer Games Workshop]

[[Category:Computer olympiads]]</text>
</page>
<page>
<id>33</id>
<title>18-bit</title>
<text>{{nofootnotes|date=October 2009}}
{{N-bit|18|(2.25 [[octets]])}}

18 binary digits have {{val|262144}} (1000000 [[octal]], 40000 [[hexadecimal]]) unique combinations.

==Example 18-bit computer architectures==
* Possibly the most well-known 18-bit computer architectures are the [[PDP-1]], [[PDP-4]], [[PDP-7]], [[PDP-9]] and [[PDP-15]] [[minicomputer]]s produced by [[Digital Equipment Corporation]] from 1960 to 1975.
* [[UNIVAC]] produced a number of 18-bit computers, including the [[UNIVAC 418]] and several military systems.
* The [[IBM 7700 Data Acquisition System]] was an 18-bit computer.
* The [[BCL Molecular]]

==References==
* [http://research.microsoft.com/Users/gbell/Digital/timeline/18-bit.htm DIGITAL Computing Timelime: 18-bit architecture]
* [http://simh.trailing-edge.com/docs/architecture18b.pdf ''Architectural Evolution in DEC’s 18b Computers''], Bob Supnik, 2006.

[[Category:Computer data]]

{{CPU technologies}}

[[ms:18-bit]]
[[ja:18???]]
[[pl:Architektura 18-bitowa]]
[[pt:18 bits]]</text>
</page>
<page>
<id>53</id>
<title>2-XL</title>
<text>{{for|the Estonian band formerly known as 2XL|Soul Militia}}
'''2-XL''' was an educational toy in the shape of a [[robot]] that was introduced in [[1978]]. 2-XL was the  brainchild of  Dr. [[Michael J. Freeman]], who felt that toys should be both fun and educational. The toy was interactive, playing various tracks from a magnetic audio tape depending on the user's actions.

The toy was released in two different time periods. The 1978 release was produced by a toy company called [[Mego Corporation]], and used [[Stereo 8|8-track]] tapes. It was brought back in [[1992]] by [[Tiger Electronics]] in a version that used [[Compact audio cassette|cassette tapes]] rather than 8-Track.

==Mego Corporation version==
===Description===
[[Image:2-XL.jpg|thumb|right|250px|Mego Corporation's 2-XL circa 1978]]
The original 2-XL (see image to right) was made of hard brown plastic, with white plastic on the front. 

The toy had two yellow light bulbs for eyes that flashed at various moments while the 8-track program tapes played, and he had four red push buttons on his stomach:
*"Question" 
*"A or Yes Or True"
*"B or More Info" 
*"C or No or False"

There was also a volume and power on knob found on the lower right portion of the unit. At the bottom was a large slot where an 8-Track tape would be inserted.

The toy was essentially a regular 8-Track player, with each button operating a different track.  It was powered by a common 9-volt AC adapter with a 3.5 mm mini-plug tip. 

===Development===
Michael J. Freeman had a hard time convincing companies of the benefits that his toy would provide. Many companies turned down the idea, saying it was just too expensive and not practical to invest so much into an educational toy when kids are typically reluctant to buy educational items. Finally, Mego Corporation decided that it fit in well with their company. They were makers of action figures based on popular TV shows, many of which were [[sci-fi]] related. 

Freeman was involved with all phases of the toy's development, including how the internal mechanism worked. The Mego version of 2-XL was produced for four years, 1978–1981.  

The mold and look got a minor change in [[1980]]:
*The eye lights became red
*The louder the volume was turned, the brighter the lights would flash
*The speaker in the back of the unit was changed from a hexagon shape to a more traditional round speaker shape. 
*The plastic was shiner and glossier looking

All told there were about 50 program tapes made for the Mego 2-XL.  It was highly popular in its first years, but it faded into obscurity after the turn of the decade. The toy will often show up on auction sites and in used toy stores. They aren't rare by any means, but aren't in mass quantities either. Some of the tapes can be harder to find; the last year tapes are rarer due to the decreased popularity of the toy in its last year on the market.

===Programs===
The 8-Track tapes focused around a robot with a [[New York]] accent, (voiced by creator Dr. Michael J. Freeman Ph.D. himself) who would speak as if the listener was right there with him wherever he happened to be in the storyline. He would ask multiple-choice questions based on the subject of the tape, and the user would answer the question he asked by pushing the corresponding button.  A right answer resulted in 2-XL congratulating the user on his knowledge, while a wrong answer would result in a razzing as 2-XL explained what the proper answer was. In between questions, there would sometimes be a story going on that the user was involved with, with the answers to the questions corresponding to the storyline. Other times 2-XL would crack a bad joke and laugh at his own humor with a crazy-sounding laugh that was one of the many running gags that would be found on almost every tape in the series.

Originally the programs were very basic. There was just one general story line.  Each track flowed through the same time length, differing only by telling the user if he was right or wrong.  Eventually, Dr. Freeman started to take advantage of the four tracks found on a tape to have up to three different programs on one tape. 

There were some general themes to each tape. The first was 2-XL's bleeping and buzzing sound effects as it turned on, as if the user was activating a huge robot (although he would often refer to its size as only a foot or so tall). He would always introduce himself in the same way, saying, "Thank you for turning me on. I am 2-XL..." . The voice did not sound robotic, and was pretty much Michael's voice only a bit slower speaking and more sophisticated sounding. There would always be a moment where the user had to push the Question button, as that went back to track one, which is where the main talking took place. There was always music or beeping sounds while the user would think, or while the new questions were loading, to make the program space out properly. Towards the end of the tape 2-XL would give the user a warning that he was getting tired and that it was time to wrap things up with one last question.  He was always very friendly and acted very human, as if he was a new buddy that wanted to help the user learn in the most enjoyable way possible.  His humor was silly as were his wisecracks, but the same themes were found throughout the various tapes, getting more and more creative as the future tapes were introduced. He would often say "Please turn me off now" and often relate the reason he had to go somehow to the topic of the tape. 

<!-- Deleted image removed: [[Image:2-XLtapes.JPG|thumb|right|250px|Eight of Mego Corporation's 2-XL 8-Track Tapes]] -->
2-XL came with one tape, titled "General Information", which touched on various topics such as sports, movies, and pop culture. Each of the various other program tapes was sold separately and most came with a separate activity book that could be used as well while doing the activity with 2-XL. Some also came with faceplate cards that could be placed over the various buttons that had different words on them that were specifically to be used for that certain program tape. Not all of the tapes were educational, some told stories that the user would just listen to able to answer a few questions about them afterwards. Not all tapes were focused around 2-XL either. Other voices would appear on them depending on what the focus of each tape was. But somewhere 2-XL's voice would show up to keep everything in the same universe. There were also two-tape sets that would continue on with the theme of the first tape after the user finished it.

==Tiger Electronics version==
[[Image:2-xltiger.JPG|thumb|right|250px|Tiger Electronic's version of 2-XL along with some program cassette tapes circa 1992]]

In 1992, Tiger Electronics re-introduced 2-XL. Instead of 8-track tapes, the new version used cassette tapes that were twice the length of the 8-tracks and had better sound quality. Freeman again provided the toy's voice. In addition to eyes that would light up, the toy now sported a circle for a mouth that could light up as he talked. The toy could now run on batteries and had a headphone jack.

Instead of the buttons simply switching tracks on the 8-track tape as in the old version, the cassette version took advantage of the fact that a cassette has a total of four tracks - one for the left and right channel on each side. The tape head in the player could play any of the four parallel tracks, based on which button was pressed. Playing a 2-XL tape in a standard tape player would result in different audio on the left and right channels, and if the reverse side was played (which was typically marked with the words "Wrong Side"), one would hear the other two tracks played in reverse.

As with the previous version, the cassette version could play any standard cassette tape, but the user needed to first push the "Question" button (or the "2/A/No" button would work as well, playing the right channel). Pressing the 3 or 4 button would play one of the channels on the reverse side of the tape backwards.

[[Image:2-XLx-men casette.jpg|thumb|right|125px|Tiger Electronic's X-Men Cassette Adventure tape for the 2-XL toy.]]
Newly released tapes were branded with comic book and cartoon characters, including [[Spider-Man]], [[Star Trek: The Next Generation]], [[Mighty Morphin Power Rangers]], [[X-Men]] and [[Batman]]. 2-XL games would allow the user to go on an adventure with various superheroes, deciding their fate by pushing one of the buttons.

The second version was on the market from 1992 through 1994, and about 45 tapes were released in total. The final inventory was sold in 1995 bundled with the Power Rangers tape. It was one of the most popular toys, in terms or market revenue, sold up through 1995. 

This version of 2-XL got even more exposure due to it being used on a kids TV Game Show at the time named "[[Pick Your Brain]]". A 10-foot replica of the Tiger Electronics 2-XL was used on the set to ask questions and offer extra information on the topic being talked about. Freeman was asked to do the voice of 2-XL but declined. The show was hosted by [[Marc Summers]] and 2-XL on this show was voiced by [[Greg Berg]]. This show had a high success in its first year, but was ended when the production of 2-XL ceased.

==Tri-Lex==

One of the last tapes released for the Mego Corporation version of 2XL was "Tri-Lex", a complete board game designed to be played by 2XL.  The tape came with a board which fitted over the front of the 2XL unit itself, with the board in front of the tape slot.  The game board consisted of an inverted pyramid shape, 4 squares wide at the top to 1 square at the bottom, with each row coloured in a different colour (Blue, Yellow, Green, and Tan), and 4 slots through which pieces (which 2XL called "checkers") could be dropped into the pyramid.  The slots aligned with 2XL's 4 buttons, with the intention that dropping the checker would also press the appropriate track button on 2XL.  The objective of the game was to create either a line or a triangle of 3 checkers of your own colour.  The game and tape design are interesting because they enabled the 4-track tape player to provide a passable simulation of a game-playing AI.

Several "tricks" had to be used: an additional set of "front" slots that did not interact with the buttons were provided, and 2XL occasionally told the player to "make a move in the front" so that the track would not change.  2XL would also ask the player to "remember a codeword" at certain points in the game, and to repeat it back later.  Often the game would end before the tape did, meaning that 2XL would prompt the player with "please turn my volume down to zero", after which the player would have to wait for the remainder of the current game's recording to wind through before a track-changing "click" signalled they should turn the volume back up.  (For this reason, Tri-lex was the only 2XL tape that did not say "thank you for turning me on" at the start, since the player was expected to play several games in a single session.)  Finally, although the tape appears to loop after one game, it in fact has four games recorded on it.  

The game itself is easily solved, and correctly played always ends in a win for the starting player.  The tape was thus more valuable for teaching pattern recognition than as a genuine board game.  On the tape, the player can in fact beat 2XL, but only on two of the recorded games (those where the human player goes first).  The player can defeat 2XL by using the guaranteed win, or - on occasion - by using other strategies where 2XL "makes a mistake".  2XL does not use the guaranteed win strategy against human players.  

The guaranteed win is as follows: first player plays Tan (forced, only space available), second player plays Green 1/2 (forced, only spaces available - which one does not matter, as the ensuing positions are mirror images of each other; continue following the moves on the appropriate side of the /), first player plays Green 2/1, second player plays Yellow 3/1 (forced, else first player plays it and wins with a line), first player plays Yellow 2, second player plays Blue (3 or 4)/(1 or 2), first player plays Blue (4 or 3)/(2 or 1) (forced, else second player plays it and wins with a triangle), second player plays Yellow 1/3 (forced, only space available), first player plays Blue 2/3 and wins with a line of three.

==Similar Toys==
===Kasey the Kinderbot===
Kasey the Kinderbot was a toy designed by Dr. Freeman which was targeted at kids aged 3–7.  Instead of tapes as with the previous versions, this toy used small cartridges that were not linear - the user was able to jump around to various sections at will. It was purely an educational toy with cartridges focusing on such subjects as Math, Science and languages. The cartridges were also color coded to let kids know what group of subject it belonged to. The toy was first released in 2002 by [[Fisher-Price]]. It produced a total profit of over $70 million. Spin-off characters included ''Toby the Totbot'', which focused specifically on teaching letters and numbers, and ''Fetch the Phonicsbot'' which was a dog-shaped robot holding a letter board which was aimed at the toddler age group.

==See also==
*[[Talk 'n Play]], a children's cassette player that also used the four audio tracks for "interactivity" with cassette/book sets

==External links==
*[http://www.2xlrobot.com/ World of 2-XL] An extensive source on anything regarding 2-XL and its inventor, Dr. Michael J. Freeman.
*http://www.pickletreats.com/2XL/  Unofficial 2-XL Page
*[http://www.donationcoder.com/Software/Mouser/2XL/index.html 2-XL Simulator] An online web simulator with dozens of the original cartridges.
*[http://www.google.com/patents/about?id=JzUvAAAAEBAJ&dq=michael+freeman} The original patent, retrieved from Google patents.


[[Category:Educational toys]]
[[Category:1978 introductions]]
[[Category:Toy robots]]

[[bg:2-XL]]
[[it:2-XL]]</text>
</page>
<page>
<id>54</id>
<title>2-choice hashing</title>
<text>{{orphan|date=December 2008}}
'''2-choice hashing''', also known as '''2-choice chaining''', is a variant of a [[hash table]] in which keys are added by hashing with two [[hash function]]s. The key is put in the array position with the fewer (colliding) keys. Some [[collision resolution scheme]] is needed, unless keys are kept in buckets. The [[average-case cost]] of a successful search is [[Big O notation|O(2 + (m-1)/n)]], where m is the number of keys and n is the size of the array. The most collisions is <math>\log_2 \ln n + \theta(m/n)</math> with high probability.

==See also==
*[[2-left hashing]]

{{DADS|2-choice hashing|twoChoiceHashing}}

[[Category:Hashing]]</text>
</page>
<page>
<id>59</id>
<title>20-GATE</title>
<text>'''20-Gate''' is an [[algebra]]ic [[programming language]] developed at [[Carnegie Mellon University]] around 1965, for the [[Bendix G-20]] computer.

==External links==
*[http://hopl.murdoch.edu.au/showlanguage.prx?exp=216 HOPL entry]

{{Computer algebra systems}}

{{FOLDOC}}

[[Category:Computer algebra systems]]


{{compu-lang-stub}}

[[hr:20-GATE]]
[[ms:20-GATE]]
[[sr:20-GATE]]</text>
</page>
<page>
<id>71</id>
<title>24-bit</title>
<text>{{for|24-bit color model in digital images|Truecolor}}
{{Unreferenced|date=October 2009}}
{{N-bit|24|(3 octets)}}

The IBM [[System/360]], announced in 1964, was a popular computer system with 24-bit addressing and [[32-bit]] general registers and arithmetic.  The early 1980s saw the first popular personal computers, including the IBM [[PC/AT]] with an Intel [[80286]] processor using 24-bit addressing and 16-bit general registers and arithmetic, and the [[Apple Inc.|Apple]] [[Macintosh 128k]] with a Motorola [[68000]] processor featuring 24-bit addressing and 32-bit registers. The [[eZ80]] is a microprocessor and microcontroller with 24-bit registers and addressing that is binary compatible with the 8/16-bit [[Z80]].

{{CPU technologies}}

{{DEFAULTSORT:24-Bit}}

[[es:24 bits]]
[[ko:24??]]
[[ms:24-bit]]
[[ja:24???]]
[[pl:Architektura 24-bitowa]]
[[pt:24 bits]]</text>
</page>
<page>
<id>75</id>
<title>26-bit</title>
<text>{{N-bit|26|}}

In the [[ARM Limited|ARM]] [[ARM_architecture|processor architecture]], '''26-bit''' refers to the design used in the original ARM processors, where the [[Program Counter]] ('''PC''') and [[Status_register|Processor Status Register]] ('''PSR''') were combined into one 32-bit [[Processor_registers|register]] (R15), the status flags filling the high 6 bits and the Program Counter taking up the lower 26 bits.

In fact, because the program counter is always word-aligned the lowest two bits are always zero which allowed the designers to reuse these two bits to hold the processor's mode bits too. The four modes allowed were USR26, SVC26, IRQ26, FIQ26; contrast this with the 32 possible modes available when the program status was separated from the program counter in more recent [[ARM Architecture|ARM architectures]].

This design enabled more efficient [[Computer_program|program]] execution, as the Program Counter and status flags could be saved and restored with a single operation. This resulted in faster [[subroutine]] calls and [[interrupt]] response than traditional designs, which would have to do two register loads or saves when calling or returning from a subroutine.

==History==

Despite being [[32-bit]] internally, processors prior to the ARM6 had only a 26-bit PC and [[address bus]], and were consequently limited to 64 MB of addressable [[Random_Access_Memory|memory]]. This was still a vast amount of memory at the time, but because of this limitation, architectures since have included various steps away from the original 26-bit design.

The ARM6 introduced a 32-bit PC and separate PSR, as well as a 32-bit address bus, allowing 4 GB of memory to be addressed. The change in the PC/PSR layout caused incompatibility with code written for previous architectures, so the processor also included a 26-bit compatibility mode which used the old PC/PSR combination. The processor could still address 4 GB in this mode, but could not [[Execution_(computers)|execute]] anything above address 3FFFFFC (64 MB). This mode was used by [[RISC OS]] running on the [[Risc_PC|Acorn Risc PC]] to utilise the new processors while retaining compatibility with existing software.

More recent ARM architectures such as [[Intel]]'s [[XScale]] have dropped the 26-bit mode altogether.

==External links==
*[http://web.archive.org/web/20070809230809/http://www.arm.com/pdfs/Apps11vC.html Differences Between ARM6 and Earlier ARM Processors]
*[http://www.iyonix.com/32bit/download/32bit_dev.pdf "Using the Acorn C/C++ Development Environment to write 32-bit RISC OS software"] - Details on the architectural changes and converting code between 26-bit and 32-bit.
* http://www.heyrick.co.uk/assembler/32bit.html - Information on converting assembler to 32-bit

[[Category:ARM architecture]]</text>
</page>
<page>
<id>101</id>
<title>360voice</title>
<text>{{Infobox Website
| name           = 360voice.com
| logo           = 
| screenshot     = 
| caption        = 
| url            = http://360voice.gamerdna.com/
| alexa          = 18,503
| commercial     = No
| type           = [[Blog publishing system|Blog host]]
| language       = English
| registration   = Optional (free) to view blogs / required (free) to obtain a blog
| owner          = [[GamerDNA|GamerDNA Inc.]]
| author         = Trapper Markelz and Steve Sopp
| launch date    = April 17, 2006
| current status = active
| revenue        = 
| slogan         = Give your [[Xbox 360|Xbox]] its own blog
}}

'''360voice''' is a website where gamers can read or subscribe via [[RSS]] to a [[blog]] about what their friends are doing every day on [[Xbox Live]], including tracking gameplay and issuing [[gamerscore]] challenges.  It is the major product of It Can Talk Systems Inc., a company founded by Trapper Markelz and Steve Sopp in 2006.<ref>{{cite web |url=http://thexboxdomain.com/2006/05/25/360voicecom-interview/ |title=Xbox Domain Interview |author= |date=May 2006 |work= |publisher= |accessdate= }}</ref><ref>{{cite web |url=http://kotaku.com/gaming/xbox-360/give-your-xbox-360-its-own-blog-170510.php |title=Kotaku |author=Brian Crecente |date=April 27, 2006 |work= |publisher= |accessdate= }}</ref>  For example, one may view all the games played by Xbox Live director [[Larry Hryb]] (better known as "Major Nelson") on his 360voice blog.<ref>{{cite web |url=http://360voice.gamerdna.com/tag/Major%20Nelson |title=Major Nelson's Xbox Blog |author= |date= |work= |publisher= |accessdate=14 September 2010}}</ref> It has been recognized as part of a new trend in technology where inanimate objects acquire the ability to blog about their owners' activities.<ref>{{cite web |url=http://www.washingtonpost.com/wp-dyn/content/article/2006/08/30/AR2006083003009.html |title=When the Machines Talk, They Talk About You |author=Mike Musgrove |date=August 31, 2006 |work= |publisher=[[Washington Post]] |accessdate= }}</ref>

== Experience Challenge ==

360voice has been the home to advertising programs such as the [[Old Spice]] Experience Challenge, and has been recognized as part of a trend within [[advertising]] to depart from standard media buys and focus on associating brands with online activities that an audience are participating in.<ref>{{cite web |url=http://www.adweek.com/aw/search/article_display.jsp?vnu_content_id=1003683965 |title=Old Spice Seeks Gaming Experience |author=Brian Morrissey |date=December 11, 2007 |work= |publisher=[[Adweek]] |accessdate= }}</ref>

== Acquisition by GamerDNA ==

In April 2008, the company was acquired by [[GamerDNA]] under undisclosed terms.<ref>{{cite web |url=http://www.masshightech.com/stories/2008/04/28/daily8-GamerDNA-buys-360voice.com-parent.html |title=Mass High Tech |author= |date=April 28, 2008 |work= |publisher= |accessdate= }}</ref><ref>{{cite web |url=http://www.bizjournals.com/boston/stories/2008/04/28/daily5.html |title=GamerDNA makes acquisition |author= |date=April 28, 2008 |work= |publisher=[[Boston Business Journal]] |accessdate= }}</ref><ref>{{cite web |url=http://www.xconomy.com/2008/04/28/gamerdna-targets-xbox-community/ |title=GamerDNA Targets Xbox Community |author=Wade Roush |date= |work= |publisher=Xconomy |accessdate= }}</ref> In December 2008, the domain name of 360voice.com<ref>{{cite web |url=http://www.360voice.com/ |title=The latest from the Dev Blog |author= |date= |work= |publisher= |accessdate=14 September 2010}}</ref> was moved to 360voice.gamerdna.com.<ref>{{cite web |url=http://360voice.gamerdna.com/ |title=The latest from the Dev Blog |author= |date= |work= |publisher= |accessdate=14 September 2010}}</ref> Any links pointing to the old domain (www.360voice.com) still work and will redirect to 360voice.gamerdna.com.<ref>{{cite web | url = http://blog.360voice.com/2008/12/domain-name-change-360voicegamerdnacom.html | title = Domain name change: 360voice.gamerdna.com | first = Trapper | last = Markelz | date = 2008-12-03 | accessdate = 2008-12-11 }}</ref>

==References==
{{Reflist}}

==External links==
* [http://360voice.gamerdna.com/ 360voice.gamerdna.com]
* [http://blog.360voice.com/ Development blog]
[[Category:Companies established in 2006]]
[[Category:Social network services]]
[[Category:Virtual communities]]
[[Category:Video game companies of the United States]]
[[Category:Internet properties established in 2006]]
[[Category:Companies based in Massachusetts]]</text>
</page>
<page>
<id>104</id>
<title>386BSD</title>
<text>{{Distinguish2|[[BSD/386]], the commercial Unix sold by BSDi}}
{{Infobox OS
| name                   = 386BSD
| logo                   =
| screenshot             = [[File:386BSD installer screenshot.png|250px]]
| caption                = 386BSD Release 0.1 installer ("Tiny 386BSD")
| website                = http://www.386bsd.org/
| developer              = [[William Jolitz]]<br />[[Lynne Jolitz]]
| family                 = [[Unix-like]]
| source_model           = [[Open source]]
| latest_release_version = 1.0
| latest_release_date    = November 1994
| latest_test_version    =
| latest_test_date       =
| marketing_target       =
| language               =
| kernel_type            =
| ui                     =
| license                = [[BSD license]]
| working_state          = Historical
| supported_platforms    = [[x86 architecture|x86]]
}}
'''386BSD''', sometimes called "'''Jolix'''"<ref name="foldoc">{{cite web|url=http://foldoc.org/jolix|title=386BSD|date=2006-06-08|work=[[Free Online Dictionary of Computing]]|accessdate=2009-11-17}}</ref>, was a [[Free software|free]] [[Unix-like]] [[operating system]] based on [[Berkeley Software Distribution|BSD]], first released in 1992. It ran on [[PC compatible]] computer systems based on the [[Intel 80386]] [[microprocessor]]. 386BSD innovations include [[role-based security]], [[ring buffer]]s, self-ordered configuration and [[Loadable kernel module|modular kernel]] design.

== History ==

386BSD was written mainly by Berkeley alumni [[Lynne Jolitz]] and [[William Jolitz]]. William Jolitz had considerable experience with prior BSD releases while at the University of California at Berkeley (2.8 and 2.9BSD) and both contributed code to Berkeley developed at [[Symmetric Computer Systems]] during the 1980s. Work on porting 4.3BSD-Reno and later 4.3BSD Net/2 to the Intel 80386 was done for the University of California by William Jolitz at Berkeley. 4.3BSD Net/2 was an incomplete non-operational release, with portions withheld by the University of California as ''encumbered'' (i.e. subject to an [[AT&T UNIX]] [[source code]] license). The 386BSD releases made to the public beginning in 1992 were based on portions of the 4.3BSD Net/2 release coupled with additional code (see ''Missing Pieces I and II'', [[Dr. Dobb's Journal]], May–June 1992) written by William and Lynne Jolitz to make a complete operational release.

The port began in 1989 and the first, incomplete traces of the port can be found in 4.3BSD Net/2 of 1991. It was first released in March 1992 (version 0.0) and in a much more usable version on July 14, 1992 (version 0.1). The porting process with code was extensively documented in an 18-part series written by Lynne Jolitz and William Jolitz in [[Dr. Dobbs Journal]] beginning in January 1991.

===FreeBSD and NetBSD===
After the release of 386BSD 0.1, a group of users began collecting bug fixes and enhancements, releasing them as an unofficial ''[[patch (computing)|patchkit]]''. Due to differences of opinion between the Jolitzes and the patchkit maintainers over the future direction and release schedule of 386BSD, the maintainers of the patchkit founded the [[FreeBSD]] project in 1993 to continue their work<ref>[http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/history.html About the FreeBSD Project<!-- Bot generated title -->]</ref>. Around the same time, the [[NetBSD]] project was founded by a different group of 386BSD users, with the aim of unifying 386BSD with other strands of BSD development into one multi-platform system. Both projects continue to this day.

===Lawsuit===
Due to a lawsuit ([[Unix System Laboratories|USL]] v. Regents of the University of California), some potentially so-called ''encumbered'' source was agreed to have been distributed within the [[Berkeley Software Distribution]] from the University of California, and a subsequent release (1993, 4.4BSD-Lite) was made by the University to correct this issue. However, 386BSD, Dr. Dobbs Journal, and William Jolitz and Lynne Jolitz were never parties to these or subsequent lawsuits or settlements arising from this dispute with the University of California, and continued to publish and work on the 386BSD code base before, during, and after these lawsuits without limitation. There has never been any legal filings or claims from the University, USL, or other responsible parties with respect to 386BSD. Finally, no code developed for 386BSD done by William Jolitz and Lynne Jolitz was at issue in any of these lawsuits.

==Release 1.0==
In late 1994, a finished version 386BSD Release 1.0 was distributed by Dr. Dobb's Journal on CDROM only due to the immense size (600 [[megabyte|MB]]) of the release (the ''"386BSD Reference CD-ROM"'') and was a best-selling CDROM for three years (1994–1997). 386BSD Release 1.0 contained a completely new kernel design and implementation, and began the process to incorporate recommendations made by earlier Berkeley designers that had never been attempted in BSD.

==Relationship with BSD/386==
386BSD is often confused with [[BSD/386]] which was developed by [[Berkeley Software Design|BSDi]], a Berkeley spinout, starting in 1991. BSD/386 used the same 386BSD code contributed to the University of California on ''4.3BSD NET/2''. Although Jolitz worked briefly for [[UUNET]] (which later spun out BSDi) in 1991, the work he did for them diverged from that contributed to the University of California and did not appear in 386BSD. Instead, William Jolitz gave regular code updates to Donn Seeley of BSDi for packaging and testing, and returned all materials when William Jolitz left that company following fundamental disagreements on company direction and goals.

==Copyright and use of the code==
All rights with respect to 386BSD and JOLIX are now held exclusively by William Jolitz and Lynne Jolitz. 386BSD public releases ended in 1997 since code is now available from the many 386BSD-derived [[operating system]]s today, along with several derivatives thereof (such as [[Apple Computer|Apple]]'s [[Darwin (operating system)|Darwin]] and  [[OpenBSD]]). Portions of 386BSD may be found in other open systems such as [[OpenSolaris]]. 386BSD is available for research (non-commercial) purposes.

==References==
{{No footnotes|date=July 2009}}
{{Portal|Free software}}
<references/>

==Further reading==
* Jolitz, William F. and Jolitz, Lynne Greer: Porting UNIX to the 386: A Practical Approach, 18-part series in Dr. Dobbs Journal, January 1991 - July 1992.
* Jolitz, William F. and Jolitz, Lynne Greer: Operating System Source Code Secrets Vol 1 The Basic Kernel, 1996, ISBN 1-57398-026-9
* Jolitz, William F. and Jolitz, Lynne Greer: Operating System Source Code Secrets Vol 2 Virtual Memory, 2000, ISBN 1-57398-027-7

==External links==
* [http://www.386bsd.org www.386bsd.org : Information by William and Lynne Jolitz]
* [http://porting-unix-to-the-386.jolix.com/ Porting UNIX to the 386: A Practical Approach]
* [http://porting-unix-to-the-386.jolix.com/designing-the-software-specification Designing the Software Specification]
* [http://porting-unix-to-the-386.jolix.com/three-initial-pc-utilities Three Initial PC Utilities]
* [http://william.telemuse.net William Jolitz]
* [http://lynne.telemuse.net Lynne Jolitz]
* [http://jolitz.telemuse.net/2lgj/on386bsd Memories of 386BSD releases by Lynne Jolitz]
* [http://archive.salon.com/tech/feature/2000/05/17/386bsd/index.html The unknown hackers - Salon.com]
* [http://minutepitch.valux.com/386bsddesign 386BSD Design Notes Professional Video Series]
* [http://www.386bsd.org/faq Frequently asked questions of 386BSD - active Q/A by authors]
* [http://www.jolix.com www.jolix.com]
* [http://cm.bell-labs.com/cm/cs/who/dmr/bsdi/bsdisuit.html Remarks and papers on USL v UC Berkeley by Dennis M. Ritchie.]
* [http://www.theage.com.au/technology/itnews/yoursay/2003/05/22/#386bsd Remarks on the history of 386BSD by Lynne Jolitz]
* [http://mail-index.netbsd.org/netbsd-advocacy/2001/01/18/0017.html Remarks on the history of 386BSD by Greg Lehey]

{{DEFAULTSORT:386bsd}}
[[Category:BSD]]
[[Category:Free software operating systems]]
[[Category:Discontinued operating systems]]

[[bs:386BSD]]
[[de:386BSD]]
[[fr:386BSD]]
[[ja:386BSD]]
[[pl:386BSD]]
[[ro:386BSD]]
[[ru:386BSD]]
[[th:386BSD]]
[[uk:386BSD]]</text>
</page>
<page>
<id>110</id>
<title>3Com Audrey</title>
<text>{{Information appliance
|title = 3Com Ergo Audrey
|logo = <!-- Missing image removed: [[Image:3Com logo.png|60px]] -->
|image = [[Image:Ergo Audrey Original and Custom.JPG|250px|3Com Ergo Audrey]]
|manufacturer = [[3Com]]
|type = [[Internet appliance]]
|connectivity = [[modem]], [[Universal serial bus|USB]]
|lifespan = October 17, 2000
|media = 
|operatingsystem = [[QNX]]-based
|camera = 
|input = [[touchscreen]], [[computer keyboard|keyboard]]
|power = [[Alternating current|AC]] adapter
|cpu = 200 [[Megahertz|MHz]] [[Geode (processor)|Geode]] GX 1
|display = 640 &times; 480 resolution
|touchpad = 
}}
The '''3Com Ergo Audrey''' is a discontinued [[internet appliance]] from [[3Com]]. It was released to the public on October 17, 2000 for [[United States dollar|USD]]499 as the first (and only) device in the company's "Ergo" initiative to hit the market.<ref>{{cite web | title=3Com lets Audrey out the door | work=News.com | url= | accessdate=2010-01-15}}</ref> Once connected to an appropriate provider, users could access the [[internet]], send and receive [[e-mail]], play audio and video, and synchronize with up to two [[Palm OS]]-based devices.  

''Audrey'' was the brainchild of Don Fotsch (formerly of Apple Computer and U.S. Robotics) and Ray Winninger. Don and Ray had a vision for a family of appliances, each designed for a specific room in the house. The brand ''Ergo'' was meant to convey that intent, as in "it's in the kitchen, ''[[ergo]]'' it's designed that way"<ref name="ReferenceA">Direct Knowledge - I was there at the time that it was said. - Rob Hudson</ref>. There were plans to serve other rooms in the house as well. They considered the kitchen to be the heart of the home and the control room for the home manager. Don coined the phrase "Internet Snacking" to describe the lightweight web browsing done in this environment<ref name="ReferenceA"/>. 

The name ''Audrey'' was given to this first product to honor [[Audrey Hepburn]]. It was meant to deliver the elegance that she exuded. The project codename was "[[Kojak]]", named after the [[Telly Savalas]] character. The follow-on product targeted for the family room was code named "[[Mannix]]".

3Com discontinued the product on June 1, 2001, in the wake of the [[Dot-com bubble|dot.com crash]], after only seven and a half months on the market. 3Com customers received full refunds for the product and accessories.  The remaining Audrey hardware was liquidated and embraced by the [[hardware hacker]] community.<ref>{{cite web|title=Audrey's life cut short|work=News.com|url=http://news.com.com/2100-1040-254497.html|accessdate=2010-01-15}}</ref>

==Hardware==
The Audrey is a [[touchscreen]], passive matrix LCD device and came equipped with a [[Stylus (computing)|stylus]].  All applications were touch-enabled.  Since the standard [[infrared]] keyboard was only needed for typing tasks, it could be hung out of the way on the rear of the unit.  The stylus was to be placed in a receptacle on the top of the screen with an [[light-emitting diode|LED]] that flashed when email arrived.  Buttons on the right side of the screen were used to access the web browser, email application, and calendar, and a wheel knob at the bottom selected different "channels" of [[push technology|push]] content.

The 3Com Audrey is powered by a 200 [[Megahertz|MHz]] [[Geode (processor)|Geode]] GX 1 [[Central Processing Unit|CPU]], with 16 [[Megabyte|MB]] of [[flash ROM]] and 32 MB of [[Random access memory|RAM]]. It measures 9 x 11.8 x 3.0 inches (22.86 x 29.97 x 7.62 cm), and weighs 4.1 pounds (1.86 kg). It is powered by the [[QNX]] [[operating system]].  The Audrey is equipped with a [[modem]], two [[Universal Serial Bus|USB]] ports, and a [[CompactFlash]] socket.  A USB [[Ethernet]] adapter was commonly used for [[broadband]] subscribers.

The Audrey was also available in such shades as "linen" (off-white), "meadow" (green), "ocean" (blue), "slate" (grey), and "sunshine" (light yellow).

==Hacking==
After the demise of official support, the Audrey drew the attention of computer enthusiasts.  They quickly discovered an [[exploit (computer security)|exploit]] to launch a [[pterm]] session.  Using [[privilege escalation]] techniques, the [[superuser|root]] password in the [[Passwd (file)|passwd]] file could be edited, opening the box to further experimentation.

Many of the tools for the [[QNX]] operating system development platform were quickly adapted for use in the Audrey, including an updated web browser ([[Voyager (web browser)|Voyager]]), an MP3 player, digital rotating photoframe, and other applications.<ref>{{cite web|title=3Com Ergo Audrey|work=PC Magazine|url=http://www.pcmag.com/article2/0,1895,34321,00.asp|accessdate=2010-01-15}}</ref>

The CompactFlash slot was also investigated.  Although it could not be used for storage expansion, the Audrey was set to flash its operating system from the slot.  Soon, a variety of replacement OS images were distributed among enthusiasts.  As the device could utilize an optional Ethernet connection, it was an easy task to mount a remote disk drive served up by a neighboring desktop system, thus allowing for virtually unlimited storage capability.

==Similar devices==
Devices similar to the Audrey included the [[i-Opener]] and [[Virgin Webplayer]].

==References==
{{reflist}}

{{DEFAULTSORT:3com Audrey}}
[[Category:Information appliances]]
[[Category:Internet tablets]]
[[Category:2000 introductions]]</text>
</page>
<page>
<id>125</id>
<title>3D Pose Estimation</title>
<text>{{merge|Pose (computer vision)#Pose Estimation|discuss=Talk:3D Pose Estimation#Merger proposal|date=March 2010}}
'''3D pose estimation''' is the problem of determining the transformation of an object in a 2D image which gives the 3D object.  The need for 3D pose estimation arises from the limitations of feature based pose estimation.  There exist environments  where it is difficult to extract corners or edges from an image.  To circumvent these issues, the object is dealt with as a whole  through the use of free-form contours.<ref>{{cite web | author = Bodo Rosenhahn | url = http://www.ks.informatik.uni-kiel.de/modules.php/name+Publikationen | title = Pose Estimation of 3D Free-form Contours in Conformal Geometry | publisher = Institut fur Informatik und Praktische Mathematik, Christian-Albrechts-Universitat zu Kiel  | language = English / German | accessdate = 2008-06-09 }}</ref>

==3D Pose Estimation from an Uncalibrated 2D Camera==
It is possible to estimate the 3D rotation and translation of a 3D object from a single 2D photo, if an approximate 3D model of the object is known and the corresponding points in the 2D image are known. A common technique for solving this has recently{{When}} been "POSIT", where the 3D pose is estimated directly from the 3D model points and the 2D image points, and corrects the errors iteratively until a good estimate is found from a single image.<ref>{{cite web | author = Dementhon and Davis, 1995 | url = http://portal.acm.org/citation.cfm?id=204015 | title = Model-based object pose in 25 lines of code | publisher = Kluwer Academic Publishers | accessdate = 2010-05-29 }}</ref> Most implementations of POSIT only work on non-coplanar points (in other words, it wont work with flat objects or planes).<ref>{{cite web | author = Javier Barandiaran | url = http://opencv.willowgarage.com/wiki/Posit | title = POSIT tutorial with OpenCV and OpenGL | accessdate = 2010-05-29 }}</ref>

==3D Pose Estimation from a Calibrated 2D Camera==
Given a 2D image of an object, and a the camera that is calibrated with respect to a world coordinate system, it is also possible to find the pose which gives the 3D object in its object coordinate system.<ref name="Bodo Rosenhahn">{{cite web | author = Bodo Rosenhahn | url = http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/ROSENHAHN1/CVOnlinePose.html | title = Foundations about 2D-3D Pose Estimation | publisher = CV Online  | accessdate = 2008-06-09 }}</ref> This works as follows.

<gallery>
<!-- Image with unknown copyright status removed: Image:PoseScene.gif|The goal is to find the pose (Rotation R and Translation t) which gives the 3D object in its object coordinate system  -->
</gallery>

=== Extracting 3D from 2D ===
Starting with a 2D image, image points are extracted which correspond to corners in an image.  The projection rays from the image points are reconstructed from the 2D points so that the 3D points, which must be incident with the reconstructed rays, can be determined.

===Pseudocode===
The algorithm for determining pose estimation is based on the [[Iterative Closest Point]] algorithm. The main idea is to determine the correspondences between 2D image features and points on the 3D model curve.  
<code>
   (a)Reconstruct projection rays from the image points<br />
   (b)Estimate the nearest point of each projection ray to a point on the 3D contour<br />
   (c)Estimate the pose of the contour with the use of this correspondence set<br />
   (d)goto (b)<br />
</code>

The above algorithm does not account for images containing an object that is partially occluded.  The following algorithm assumes that all contours are rigidly coupled, meaning the pose of one contour defines the pose of another contour.

<code>
   (a)Reconstruct projection rays from the image points<br />
   (b)For each projection ray R:<br />
        (c)For each 3D contour:<br />
             (c1)Estimate the nearest point P1 of ray R to a point on the contour<br />
             (c2)if (n==1) chose P1 as actual P for the point-line correspondence<br />
             (c3)else compare P1 with P:<br />
                      if dist(P1, R) is smaller than dist(P, R)<br />
                           then choose P1 as new P<br />
   (d)Use (P, R) as correspondence set.<br />
   (e)Estimate pose with this correspondence set<br />
   (f)Transform contours, goto (b)<br />
</code>

In practice, using a 2 GHz Intel [[Pentium]] processor, average speeds of 29fps have been reached using the above algorithm.<ref name="Bodo Rosenhahn"/>

== Estimating Pose Through Comparison ==
Systems exist which use a database of an object at different rotations and translations to compare an input image against to estimate pose.  These systems accuracy is limited to situations which are represented in their database of images, however the goal is to recognize a pose, rather than determine it.<ref>{{cite web | author = Vassilis Athitsos | url =  | title = Estimating 3D Hand Pose from a Cluttered Image | publisher = Boston University Computer Science Tech. | accessdate = 2008-06-09 }}</ref>

== Notes ==
{{reflist|2}}

==See also==
*[[homography]]
*[[camera calibration]]

== References ==
*Rosenhahn, B. "Foundations about 2D-3D Pose Estimation."
*Rosenhahn, B. "Pose Estimation of 3D Free-form Contours in Conformal Geometry."
*Athitsos, V. "Estimating 3D Hand Pose from a Cluttered Image."

==External links==
*[http://www.ks.informatik.uni-kiel.de/modules.php?name=Projekte&func=hp&prid=6] Further readings on various Computer Vision topics as well as more information on 3D pose estimation

[[Category:Computer vision]]
[[Category:Geometry in computer vision]]
[[Category:Robotics]]</text>
</page>
<page>
<id>131</id>
<title>3D computer graphics software</title>
<text>{{3D computer graphics}}
<!-- Deleted image removed: [[Image:Modeler83.png|thumb|align=right|A 3D model of a character in the 3D modeler [[LightWave]], shown in various manners and from different perspectives]] -->
'''3D computer graphics software''' refers to programs used to create [[3D computer graphics|3D]] [[computer-generated imagery]]. This article covers only some of the software used.

==Uses==
3D modelers are used in a wide variety of industries.  The medical industry uses them to create detailed models of organs.  The movie industry uses them to create and manipulate characters and objects for animated and real-life [[film|motion pictures]].  The [[video game industry]] uses them to create assets for [[video game]]s. The science sector uses them to create highly detailed models of chemical compounds.  The architecture industry uses them to create models of proposed buildings and landscapes.  The engineering community uses them to design new devices, vehicles and structures as well as a host of other uses. There are typically many stages in the "[[Pipeline (computing)|pipeline]]" that studios and manufacturers use to create 3D objects for film, games, and production of hard goods and structures.

==Features==
Many 3D modelers are designed to model various real-world entities, from [[plant]]s to [[automobile]]s to [[human|people]].  Some are specially designed to model certain objects, such as chemical compounds or internal [[organ (anatomy)|organ]]s.

3D modelers allow users to create and alter models via their 3D mesh.  Users can add, subtract, stretch and otherwise change the mesh to their desire.  Models can be viewed from a variety of angles, usually simultaneously.  Models can be rotated and the view can be zoomed in and out.

3D modelers can export their models to [[computer file|files]], which can then be imported into other applications as long as the [[metadata]] is compatible.  Many modelers allow [[importer (computing)|importers]] and [[exporter (computing)|exporters]] to be [[plugin|plugged-in]], so they can read and write data in the native formats of other applications.

Most 3D modelers contain a number of related features, such as [[Ray tracing (graphics)|ray tracers]] and other rendering alternatives and [[texture mapping]] facilities.  Some also contain features that support or allow animation of models.  Some may be able to generate [[full-motion video]] of a series of rendered scenes (i.e. [[animation]]).

==Commercial packages==
A basic comparison including release date/version information can be found on the [[Comparison of 3D computer graphics software]] page. A comprehensive comparison of significant 3D packages can be found at [http://wiki.cgsociety.org/index.php/Comparison_of_3d_tools CG Society Wiki] and [http://www.tdt3d.be/articles_viewer.php?art_id=99 TDT3D 3D applications 2007 comparisons table.].

*'''[[3ds Max]]''' ([[Autodesk]]), originally called 3D Studio MAX, is a comprehensive and versatile 3D application used in film, television, video games and architecture for [[Microsoft Windows|Windows]].  It can be extended and customized through its SDK or scripting using a Maxscript. It can use third party rendering options such as [[Brazil R/S]], [[finalRender]] and [[V-Ray]].

*'''[[AC3D]]''' (Inivis) is a 3D modeling application that began in the 90's on the [[Commodore Amiga|Amiga]] platform. Used in a number of industries, [[MathWorks]] actively recommends it in many of their aerospace-related articles<ref>{{cite web |url=http://www.mathworks.com/access/helpdesk/help/toolbox/aeroblks/index.html?/access/helpdesk/help/toolbox/aeroblks/f3-22568.html
|title=About Aerospace Coordinate Systems 
|accessdate=2007-11-23 }}</ref> due to price and compatibility. AC3D does not feature its own renderer, but can generate output files for both [[RenderMan]] and [[POV-Ray]] among others.

*'''[[Aladdin4D]]''' ([[DiscreetFX]]), first created for the [[Commodore Amiga|Amiga]], was originally developed by [[Adspec Programming]]. After acquisition by DiscreetFX, it is multi-platform for [[Mac OS X]], Amiga OS 4.1, [[MorphOS]], [[Linux]], [[AROS]] and [[Microsoft Windows|Windows]].

*'''[[Alibre Design]]''' ([[Alibre Inc.]]), 3D design software.  Alibre Design 2011 is a parametric 3D CAD suite that provides 3D model creation and documentation capabilities for a variety of downstream applications such as CAM, Rendering or 3D Printing. The software consists of several integrated modules that allow the creation of parts, unfoldable sheet metal parts, assemblies, and 2D drawings. photo realistic rendering and CAM. [[Microsoft Windows|Windows]].

*'''[[Animation:Master]]''' from HASH, Inc is a modeling and animation package that focuses on ease of use. It is a spline-based modeler. Its strength lies in character animation.

*'''[[Carrara (software)|Carrara]]''' ([[DAZ Productions]]) is a fully-featured 3D toolset for modeling, texturing, scene rendering and animation.

*'''[[Cinema 4D]]''' ([[MAXON]]) is a light (Prime) to full featured (Studio) 3d package dependant on version used. Although used in film usually for 2.5d work, Cinema's largest user base is in the television motion graphics and design/visualisation arenas. Originally developed for the [[Commodore Amiga|Amiga]], it is also available for [[Mac OS X]], [[Microsoft Windows|Windows]] and [[Linux]].

*'''[[CityEngine]]''' ([[Procedural Inc]]) is a [[3D modeling]] application specialized in the generation of three dimensional urban environments. With the [[procedural modeling]] approach, [[CityEngine]] enables the efficient creation of detailed large-scale 3D city models, it is available for [[Mac OS X]], [[Microsoft Windows|Windows]] and [[Linux]].

* '''[[Cobalt (CAD program)|Cobalt]]''' is a [[Solid_modeling#Parametric_Solid_modeling_CAD|parametric-based]] [[Computer-aided design]] (CAD) and [[3D modeling]] software for both the [[Macintosh]] and [[Microsoft Windows]]. It integrates [[wireframe]], freeform surfacing, feature-based solid modeling and photo-realistic rendering (see [[Ray tracing (graphics)|Ray tracing]]), and animation.

*'''[[Electric Image Animation System]]''' ([[EI Technology Group]]) is a 3D animation and rendering package available on both [[Mac OS X]] and [[Microsoft Windows|Windows]]. Mostly known for its rendering quality and rendering speed it does not include a built-in modeler.  The popular film ''[[Pirates of the Caribbean: The Curse of the Black Pearl|Pirates of the Caribbean]]''<ref>{{cite web |url=http://www.pr.com/press-release/35014 |title=Electric Image Animation Software (EIAS) v6.6.1 UB Port Is Shipping |accessdate=2007-11-23 }}</ref> and the television series ''[[Lost (TV series)|Lost]]''<ref>{{cite web |url=http://www.eitechnologygroup.com/products/production_list/ |title=EIAS Production List |accessdate=2007-11-23 }}</ref> used the software.

*'''[[form-Z|form•Z]]''' ([[AutoDesSys, Inc.]]) is a general purpose solid/surface 3D modeler. Its primary use is for modeling, but it also features photo realistic rendering and object-centric animation support. form•Z is used in architecture, interior design, illustration, product design, and set design. It supports plug-ins and scripts, has import/export capabilities and was first released in 1991. It is currently available for both [[Mac OS X]] and [[Microsoft Windows|Windows]].

*'''[[Houdini (software)|Houdini]]''' ([[Side Effects Software]]) is used for visual effects and character animation.  It was used in [[Disney]]'s feature film ''[[The Wild]]''.<ref>{{cite web |url=http://www.fxguide.com/modules.php?name=press&rop=showcontent&id=385 |title=C.O.R.E. Goes to The Wild |accessdate=2007-11-23 }}</ref> Houdini uses a non-standard interface that it refers to as a "NODE system". It has a hybrid micropolygon-raytracer renderer, Mantra, but it also has built-in support for commercial renderers like Pixar's RenderMan and mental ray.

*'''[[Autodesk Inventor|Inventor]]''' ([[Autodesk]]) The Autodesk Inventor is for 3D mechanical design, product simulation, tooling creation, and design communication.

*'''[[LightWave|LightWave 3D]]''' ([[NewTek]]), first developed for the [[Commodore Amiga|Amiga]], was originally bundled as part of the [[Video Toaster]] package and entered the market as a low cost way for TV production companies to create quality CGI for their programming. It first gained public attention with its use in the TV series ''[[Babylon 5]]''<ref>{{cite web |url=http://www.byte.com/art/9507/sec8/art2.htm |title=Desktop Hollywood F/X |accessdate=2007-11-23 }}</ref> and is used in several contemporary TV series.<ref>{{cite web |url=http://www.uemedia.net/CPC/vfxpro/printer_13948.shtml |title=So Say We All: The Visual Effects of "Battlestar Galactica" |accessdate=2007-11-23 }}</ref><ref>{{cite web |url=http://www.cgw.com/ME2/dirmod.asp?sid=&nm=&type=Publishing&mod=Publications%3A%3AArticle&mid=8F3A7027421841978F18BE895F87F791&tier=4&id=48932D1DDB0F4F6B9BEA350A47CDFBE0 |title=CSI: Dallas |accessdate=2007-11-23 }} {{Dead link|date=October 2010|bot=H3llBot}}</ref><ref>{{cite web |url= http://www.newtek.com/lightwave/projects.php |title=Lightwave projects list |accessdate=2009-07-07 }}</ref> Lightwave is also used in a variety of modern film productions.<ref>{{cite web |url=http://www.digitalartsonline.co.uk/features/index.cfm?featureid=1590 |title=Epic effects for 300 |accessdate=2007-11-23 }}</ref><ref>{{cite web |url=http://newteknews.blogspot.com/2008/08/lightwave-used-on-iron-man-bobblehead.html |title=Lightwave used on Iron Man |date=2008-08-08 |accessdate=2009-07-07 }}</ref> It is available for both [[Microsoft Windows|Windows]] and [[Mac OS X]].

*'''[[MASSIVE (software)|MASSIVE]]''' is a 3D animation system for generating crowd-related visual effects, targeted for use in film and television. Originally developed for controlling the large-scale CGI battles in ''[[The Lord of the Rings (film)|The Lord of the Rings]]'',<ref>{{cite web |url=http://www.news.com/8301-10784_3-9809929-7.html |title=Lord of the Rings terror: It was just a software bug |accessdate=2007-11-23 }}</ref> Massive has become an industry standard for digital crowd control in high end animation{{Citation needed|date=December 2009}} and has been used on several other big-budget films. It is available for various [[Unix]] and [[Linux]] platforms as well as [[Microsoft Windows|Windows]].

*'''[[Maya (software)|Maya]]''' ([[Autodesk]]) is currently used in the film and television industry. Maya has developed over the years into an application platform in and of itself through extendability via its [[Maya Embedded Language|MEL]] programming language. It is available for [[Microsoft Windows|Windows]], [[Linux]] and [[Mac OS X]].

*'''[[Modo (software)|Modo]]''' ([[Luxology]]) is a subdivision modeling, texturing and rendering tool with support for camera motion and morphs/blendshapes.and is now used in the Television Industry It is available for both [[Microsoft Windows|Windows]] and [[Mac OS X]].

*'''[[NX (software)|NX]]''' ([[Siemens| Siemens PLM Software]]) is an integrated suite of software for computer-aided mechanical design (mechanical CAM), computer-aided manufacturing (CAM), and computer-aided engineering (CAE) formed by combining the former Unigraphics and SDRC I-deas software product lines.<ref name="CADCAMNet 2004-09-16">{{cite journal|last=Cohn|first=David|date=2004-09-16|title=NX 3 – The Culmination of a 3-year Migration|journal=CADCAMNet|publisher=Cyon Research|url=http://www.newslettersonline.com/user/user.fas/s=63/fp=3/tp=47?T=open_article,847643&P=article|accessdate=2009-07-01}}</ref> NX is currently available for the following operating systems: Windows XP and Vista, Apple Mac OS X,<ref name="NX Mac OS X">{{cite web|url=http://www.plm.automation.siemens.com/en_us/about_us/newsroom/press/press_release.cfm?Component=82370&ComponentTemplate=822|title=Siemens PLM Software Announces Availability of NX for Mac OS X|date=2009-06-11|publisher=Siemens PLM Software|accessdate=2009-07-01}}</ref> and Novell SUSE Linux.<ref>{{cite web|url=http://www.plm.automation.siemens.com/en_us/about_us/newsroom/press/press_release.cfm?Component=25399&ComponentTemplate=822|title=UGS Ships NX 4 and Delivers Industry’s First Complete Digital Product Development Solution on Linux|date=2009-04-04|accessdate=2009-06-20}}</ref>

*'''[[RealFlow]]''' simulates and renders particle systems of rigid bodies and fluids.

*'''[[Realsoft3D]]''' [[Real3D (3D modeling software)|Real3D]] Full featured 3D modeling, animation, simulation and rendering software available for Windows, Linux, Mac OS X and Irix.

*'''[[Revit (AutoDesk)]]''' [[Real3D (3D modeling /BIM software)|Real3D]] 3D modeling specialising in structures, building information modelling, rendering software available for Windows onl.

*'''[[Rhinoceros 3D]]''' is a commercial modeling tool which has excellent support for freeform [[NURBS]] editing.

*'''[[Silo (software)|Silo]]''' ([[Nevercenter]]) is a subdivision-surface modeler available for [[Mac OS X]] and [[Microsoft Windows|Windows]]. Silo does not include a renderer. Silo is the bundled in modeler for the [[Electric Image Animation System]] suite.

*'''[[SketchUp]] Pro''' ([[Google]]) is a 3D modeling package that features a sketch-based modeling approach. It has a pro version which supports 2D and 3D model export functions among other features. A free version is integrated with [[Google Earth]] and limits export to [[Google]]'s "[[3D Warehouse]]", where users can share their content.

*'''[[Softimage]]''' ([[Autodesk Media and Entertainment|Autodesk]]) Softimage (formerly Softimage|XSI) is a 3D modeling and animation package that integrates with [[mental ray]] rendering. It is feature-similar to Maya and 3ds Max and is used in the production of professional films, commercials, video games, and other media.

*'''[[solidThinking]]''' ([[solidThinking]]) is a 3D solid/surface modeling and rendering suite which features a construction tree method of development. The tree is the "history" of the model construction process and allows real-time updates when modifications are made to points, curves, parameters or entire objects.

*'''[[Solid Edge]]''' ([[Siemens| Siemens PLM Software]]) is a commercial application for design, drafting, analysis, and simulation of products, systems, machines and tools. All versions include feature-based parametric modeling, assembly modeling, drafting, sheetmetal, weldment, freeform surface design, and data management.<ref name="Solid Edge overview">{{cite web|url=http://www.plm.automation.siemens.com/en_us/products/velocity/solidedge/index.shtml|title=Solid Edge|year=2009|publisher=Siements PLM Software|accessdate=2009-07-01}}</ref> Application-programming interfaces enable scripting in [[Visual Basic]] and [[C (programming language)|C programming]].

*'''[[SolidWorks]]''' ([[SolidWorks Corporation]]) is an application used for the design, detailing and validation of products, systems, machines and toolings. All versions include modeling, assemblies, drawing, sheetmetal, weldment, and freeform surfacing functionality. It also has support for scripting in [[Visual Basic]] and [[C (programming language)|C]].

*'''[[Swift 3D]]''' ([[Electric Rain]]) is a relatively inexpensive 3D design, modeling, and animation application targeted to entry-level 3D users and [[Adobe Flash]] designers. Swift 3D supports vector and raster-based 3D animations for Adobe Flash and [[Microsoft Silverlight XAML]].

*'''[[E-on Vue|Vue]]''' ([[E-on Software]]) is a tool for creating, animating and rendering natural 3D environments. It was most recently used to create the background jungle environments in the 2nd and 3rd [[Pirates of the Caribbean]] films.<ref>{{cite web |url=http://www.pluginz.com/news/4535 |title=
Vue Helps ILM Create Environments for 'Pirates Of The Caribbean: Dead Man’s Chest' VFX |accessdate=2007-11-23 |archiveurl = http://web.archive.org/web/20080318085442/http://www.pluginz.com/news/4535 <!-- Bot retrieved archive --> |archivedate = 2008-03-18}}</ref>

*'''[[ZBrush]]''' ([[Pixologic]]) is a digital sculpting tool that combines 3D/2.5D modeling, texturing and painting tool available for [[Mac OS X]] and [[Microsoft Windows|Windows]].  It is used to create normal maps for low resolution models to make them look more detailed.

*[[Mudbox]] Mudbox is a high resolution brush-based 3D sculpting program, that claims to be the first of its type. The software was acquired by Autodesk in 2007, and has a current rival in its field known as ZBrush (see above).

*[[Bryce (software)|Bryce]] (DAZ Productions) is most famous for landscapes and creating 'painterly' renderings, as well as its unique user interface.

*[[Grome]] is a professional outdoor scene modeler (terrain, water, vegetation) for games and other 3D real-time applications.

*[[Poser]] (Smith Micro) Poser is a 3D rendering and animation software program optimized for models that depict the human figure in three-dimensional form and is specialized for adjusting features of preexisting character models via varying parameters.  It is also for posing and rendering of models and characters.  It includes some specialized tools for walk cycle creation, cloth and hair.

==Free packages==
*[[3D Canvas]] is a 3D modeling and animation tool available in a freeware version, as well as paid versions (3D Canvas Plus and 3D Canvas Pro).
*[[Anim8or]] is a proprietary freeware 3D rendering and animation package.
*[[Art of Illusion]] is a free software package developed under the [[GPL]].
*[[AutoQ3D Community]] is not a professional CAD program and it is focused to beginners who want to make rapid 3D designs. It is a free software package developed under the [[GPL]].
*[[Ayam (software)|Ayam]] is a free 3D modeling environment for the [[RenderMan]] interface.
*[[Blender (software)|Blender]] ([[Blender Foundation]]) is a [[free software|free]], [[open source]], 3D studio for animation, modeling, rendering, and texturing offering a feature set comparable to commercial 3D animation suites. It is developed under the [[GNU General Public License|GPL]] and is available on all major platforms including Windows, OS X, Linux, [[BSD]], [[Solaris (operating system)|Solaris]] and [[Irix]].
*[[Cheetah3D]] is primarily aimed at amateur 3D artists with some medium- and high-end features
*[[DAZ Studio]] a free 3D rendering tool set for adjusting parameters of preexisting models, posing and rendering them in full 3D scene environments.  Imports objects created in [[Poser]] and is similar to that program, but with fewer features.
*[[DX Studio]] a complete integrated development environment for creating interactive 3D graphics. The system comprises both a real-time 3D engine and a suite of editing tools, and is the first product to offer a complete range of tools in a single IDE.
*[[Evolver (3D Avatar Web Portal)|Evolver]] is a portal for 3D computer characters incorporating a human (humanoid) builder and a cloner to work from picture.
*[[FaceGen]] is a source of human face models for other programs. Users are able to generate face models either randomly or from input photographs.
*[[Geist3D]] is a free software program for real-time modeling and rendering three-dimensional graphics and animations.
*[[GMax]]
*[[GPure]] is a software to prepare scene/meshes from digital mockup to multiple uses
*[[K-3D]] is a GNU modeling, animation, and rendering system available on Linux and Win32.  It makes use of RenderMan-compliant render engines.  It features scene graph procedural modelling similar to that found in Houdini.
*[[MakeHuman]] is a GPL program that generates 3D parametric humanoids.
*[[MeshLab]] is a free [[Microsoft Windows|Windows]], [[Linux]] and [[Mac OS X]] application for visualizing, simplifying, processing and converting large three dimensional meshes to or from a variety of 3D file formats.
*[[MilkShape 3D]] is a shareware/trialware polygon 3D modelling program with extensive import/export capabilities.
*[[Moment of Inspiration]] is a 3D modeling program focusing on simplicity and ease-of-use for Tablet PCs, designed to complement polygon-based modeling programs, by one of the developers behind [[Rhinoceros 3D]].
*[[NaroCAD]] a fully fledged and extensible 3D parametric modeling CAD application. It is based on OpenCascade. The goal of this project is to develop a fully fledged and extensible 3D CAD software based on the concept of parametric modeling of solids, comparable to well known solutions.
*[[OpenFX]] is a modeling and animation studio, distributed under the GPL.
*[[Seamless3d]] [[NURBS]] based modelling and animation software with much of the focus on creating avatars optimized for real time animation. It is free, [[open source]] under the [[MIT]] license.
*'''[[trueSpace]]''' ([[Caligari Corporation]]) is a 3D program available for [[Microsoft Windows|Windows]], although the company Caligari first found its start on the Amiga platform. trueSpace features modeling, animation, 3D-painting, and rendering capabilities.  In 2009, Microsoft purchased TrueSpace and it is now available completely free of charge.
*[[Wings 3D]] is a [[BSD license|BSD]]-licensed, subdivision modeler.

== Renderers ==
*[[3Delight]] is a [[RenderMan Interface Specification|RenderMan]]-compliant renderer.
*[[Aqsis]] is a free rendering suite compliant with the RenderMan standard.
*[[Brazil R/S|Brazil]] is a rendering engine for [[3ds Max]], [[Rhinoceros 3D|Rhino]] and [[3ds Max|VIZ]]
*[[FinalRender]] is a photorealistic renderer for Maya and 3Ds Max developed by Cebas, a German company.
*[[FPrime]] for Lightwave adds a very fast preview and can in many cases be used for final rendering.
*[[Gelato (software)|Gelato]] is a hardware-accelerated, non-real-time renderer created by graphics card manufacturer NVIDIA.
*[[Indigo Renderer]] is an unbiased photorealistic renderer that uses XML for scene description. Exporters available for [[Blender (software)|Blender]], [[Maya (software)|Maya]] ([[Maya To Indigo|Mti]]), [[form-Z|form•Z]], [[Cinema4D]], [[Rhinoceros 3D|Rhino]], [[3ds Max]].
*[[Kerkythea]] is a freeware rendering system that supports raytracing. Currently, it can be integrated with 3ds Max, Blender, SketchUp, and Silo (generally any software that can export files in obj and 3ds formats). Kerkythea is a standalone renderer, using physically accurate materials and lighting.
*[[LuxRender]] is an unbiased open source rendering engine featuring [[Metropolis light transport]]
*[[Maxwell Render]] is a multi-platform renderer which forgoes raytracing, global illumination and radiosity in favor of photon rendering with a virtual electromagnetic spectrum, resulting in very authentic looking renders. It was the first unbiased render to market.{{Citation needed|date=February 2010}}
*[[mental ray]] is another popular renderer, and comes default with most of the high-end packages. (Now owned by NVIDIA)
*[[NaroCAD]] is a fully fledged and extensible 3D parametric modeling CAD application. It is based on OpenCascade.
*[[Pixar]]'s [[PhotoRealistic RenderMan]] is a [[Rendering (computer graphics)|renderer]], used in many studios.  Animation packages such as 3DS Max and Maya can pipeline to RenderMan to do all the rendering.
*[[Pixie (renderer)|Pixie]] is an open source photorealistic renderer.
*[[POV-Ray]] (or The Persistence of Vision Raytracer) is a freeware (with source) ray tracer written for multiple platforms.
*[[Sunflow]] is an open source, photo-realistic renderer written in Java.
* Turtle ([[Illuminate Labs]]) is an alternative renderer for Maya, it specializes in faster radiosity and automatic surface baking technology which further enhances its speedy renders.
*[[VRay]] is promoted for use in the architectural visualization field used in conjunction with [[3ds max]] and [[3ds viz]]. It is also commonly used with Maya.
*[[YafRay]] is a raytracer/renderer distributed under the LGPL.  This project is no longer being actively developed.
*[[YafaRay]] YafRay's successor, a raytracer/renderer distributed under the LGPL.

==Related to 3D software==
*[[Swift3D]] is the marquee tool for producing vector-based 3D content for Flash. Also comes in plug-in form for transforming models in Lightwave or 3DS Max into [[Adobe Systems|Flash]] animations.
*[[Match moving]] software is commonly used to match live video with computer-generated video, keeping the two in sync as the camera moves.
*After producing video, studios then [[Film editing|edit]] or [[Compositing|composite]] the video using programs such as [[Adobe Systems|Adobe]] [[Adobe Premiere Pro|Premiere]] or [[Apple Computer|Apple]] [[Final Cut Pro|Final Cut]] at the low end, or [[Autodesk Combustion]], [[Digital Fusion]], [[Apple Computer|Apple]] [[Shake (software)|Shake]] at the high end.
*[[MetaCreations]] Detailer and Painter 3D are discontinued software applications specifically for painting [[texture map]]s on 3-D Models.
*[[Simplygon]] A commercial mesh processing package for [[Computer graphics (computer science)#Geometry|remeshing]] general input meshes into [[Real-time computer graphics|real-time]] renderable meshes.
*[[Typestry|Pixar Typestry]] is an abandonware 3D software program released in the 1990s by Pixar for Apple Macintosh and DOS-based PC computer systems. It rendered and animated text in 3d in various fonts based on the user's input.

==See also==
{{Wikipedia-Books|3D Rendering}}
* [[Comparison of 3D computer graphics software]]
* [[3D data acquisition and object reconstruction]]
* [[3D modeling]]
* [[Computer-aided design]]
* [[Game development tool]]
* [[Game engine]]
* [[Level editor]]
* [[List of 3D graphics software]]
* [[Render farm]]

==References==
{{reflist}}

== External links ==
* [http://wiki.cgsociety.org/index.php/Comparison_of_3d_tools Comparison of 3D Tools] from the Society of Digital Artists

{{3D software}}

{{DEFAULTSORT:3d Computer Graphics Software}}
[[Category:3D graphics software| ]]
[[Category:3D computer graphics]]

[[de:3D-Grafik-Software]]
[[fr:Logiciel de modélisation 3D]]
[[ja:3DCG??????]]
[[ro:Programe de grafica 3D]]
[[fi:Luettelo 3D-grafiikkaohjelmista]]
[[th:????????????????????????????????]]
[[zh:?????????]]</text>
</page>
<page>
<id>139</id>
<title>3D single object recognition</title>
<text>{{FeatureDetectionCompVisNavbox}}

In [[computer vision]], '''3D single [[object recognition]]''' involves recognizing and determining the pose of user-chosen [[Three-dimensional space|3D]] object in a [[photograph]] or [[range scan]].  Typically, an example of the object to be recognized is presented to a vision system in a controlled environment, and then for an arbitrary input such as a [[video stream]], the system locates the previously presented object.  This can be done either [[off-line]], or in [[real-time]].  The [[algorithms]] for solving this problem are specialized for locating a single pre-identified object, and can be contrasted with algorithms which operate on general [[class (computer science)|classes]] of objects, such as [[Facial recognition system|face recognition systems]] or [[3D generic object recognition]].  Due to the low cost and ease of acquiring photographs, a significant amount of research has been devoted to 3D object recognition in photographs.

== 3D single object recognition in photographs ==

The method of recognizing a 3D object depends on the properties of an object.  For simplicity, many existing algorithms have focused on recognizing [[Stiffness|rigid]] objects consisting of a single part, that is, objects whose spatial transformation is a [[Euclidean motion]].  Two general approaches have been taken to the problem: [[pattern recognition]] approaches use low-level image appearance information to locate an object, while feature-based geometric approaches construct a model for the object to be recognized, and match the model against the photograph.  

=== Pattern recognition approaches ===

These methods use appearance information gathered from pre-captured or pre-computed projections of an object to match the object in the potentially cluttered scene.  However, they do not take the 3D geometric constraints of the object into consideration during matching, and typically also do not handle occlusion as well as feature-based approaches.  See [Murase and Nayar 1995] and [Selinger and Nelson 1999].

=== Feature-based geometric approaches ===

[[Image:Feature example.png|right|thumb|322px|An example of a detected feature in an image.  Blue indicates the center of the feature, the red ellipse indicates the characteristic scale identified by the feature detector, and the green parallelogram is constructed from the coordinates of the ellipse as per [Lowe 2004].]]

Feature-based approaches work well for objects which have distinctive [[Feature (Computer vision)|features]].  Thus far, objects which have good [[edge feature]]s or [[Blob detection|blob]] features have been successfully recognized; for example detection algorithms, see [[Harris affine region detector]] and [[Scale-invariant feature transform|SIFT]], respectively.  Due to lack of the appropriate feature detectors, objects without textured, smooth surfaces cannot currently be handled by this approach.

Feature-based object recognizers generally work by pre-capturing a number of fixed views of the object to be recognized, extracting features from these views, and then in the recognition process, matching these features to the scene and enforcing geometric constraints.

As an example of a prototypical system taking this approach, we will present an outline of the method used by [Rothganger et al. 2004], with some detail elided.  The method starts by assuming that objects undergo globally rigid transformations.  Because smooth surfaces are locally planar, [[affine invariant]] features are appropriate for matching: the paper [[feature detector|detects]] ellipse-shaped regions of interest using both edge-like and blob-like features, and as per [Lowe 2004], finds the dominant gradient direction of the ellipse, converts the ellipse into a parallelogram, and takes a [[SIFT]] descriptor on the resulting parallelogram.  Color information is used also to improve discrimination over SIFT features alone.

[[Image:Partial features 3d.png|right|thumb|322px|Partial models of features, projected into 3D, constructed from nearby views of a teddy-bear.  Taken from [Rothganger et al. 2004].]]

Next, given a number of camera views of the object (24 in the paper), the method constructs a 3D model for the object, containing the 3D spatial position and orientation of each feature.  Because the number of views of the object is large, typically each feature is present in several adjacent views.  The center points of such matching features correspond, and detected features are aligned along the dominant gradient direction, so the points at (1, 0) in the local coordinate system of the feature parallelogram also correspond, as do the points (0, 1) in the parallelogram's local coordinates.  Thus for every pair of matching features in nearby views, three point pair correspondences are known.  Given at least two matching features, a multi-view affine [[structure from motion]] algorithm (see [Tomasi and Kanade 1992]) can be used to construct an estimate of points positions (up to an arbitrary affine transformation).  The paper of Rothganger et al. therefore selects two adjacent views, uses a [[RANSAC]]-like method to select two corresponding pairs of features, and adds new features to the partial model built by RANSAC so long as they are under an error term.  Thus for any given pair of adjacent views, the algorithm creates a partial model of all features visible in both views.

[[Image:Features full 3d.png|right|thumb|322px|Final merged model of features for the teddy bear, after Euclidean upgrade.  For recognition, this model is matched against a photograph of the scene using RANSAC.  Taken from [Rothganger et al. 2004].]]

To produce a unified model, the paper takes the largest partial model, and incrementally aligns all smaller partial models to it.  Global minimization is used to reduce the error, then a [[Euclidean upgrade]] is used to change the model's feature positions from 3D coordinates unique up to affine transformation to 3D coordinates that are unique up to [[Euclidean motion]].  At the end of this step, one has a model of the target object, consisting of features projected into a common 3D space.

To recognize an object in an arbitrary input image, the paper detects features, and then uses [[RANSAC]] to find the [[affine projection]] matrix which best fits the unified object model to the 2D scene.  If this RANSAC approach has sufficiently low error, then on success, the algorithm both recognizes the object and gives the object's pose in terms of an affine projection.  Under the assumed conditions, the method typically achieves recognition rates of around 95%.

== References ==

* Murase, H. and S. K. Nayar: 1995, ''Visual Learning and Recognition of 3-D Objects from Appearance''.  International Journal of Computer Vision 14, 5–24. [http://www.cse.unr.edu/~bebis/MathMethods/PCA/case_study_pca2.pdf]
* Selinger, A. and R. Nelson: 1999, ''A Perceptual Grouping Hierarchy for Appearance-Based 3D Object Recognition.'' Computer Vision and Image Understanding 76(1), 83–92. [http://citeseer.ist.psu.edu/282716.html]
* Rothganger, F; S. Lazebnik, C. Schmid, and J. Ponce: 2004.  ''3D Object Modeling and Recognition Using Local Affine-Invariant Image Descriptors and Multi-View Spatial Constraints'', ICCV. [http://www-cvr.ai.uiuc.edu/ponce_grp/publication/paper/ijcv04d.pdf]
* Lowe, D.: 2004, ''Distinctive image features from scale-invariant keypoints.'' International Journal of Computer Vision. In press. [http://www.cs.ubc.ca/~lowe/papers/ijcv04.pdf]
* Tomasi, C. and T. Kanade: 1992, ''Shape and Motion from Image Streams: a Factorization Method.'' International Journal of Computer Vision 9(2), 137–154. [http://www.cse.huji.ac.il/course/2006/compvis/lectures/tomasiTr92Text.pdf]

== See also ==

* [[Blob detection]]
* [[Object recognition]]
* [[Feature descriptor]]
* [[Feature detection (computer vision)]]
* [[Harris affine region detector]]
* [[RANSAC]]
* [[Scale-invariant feature transform|SIFT]]
* [[Structure from motion]]

[[Category:Object recognition and categorization]]</text>
</page>
<page>
<id>153</id>
<title>3dvia</title>
<text>{{more footnotes|date=December 2009}}
{{Infobox_Company
  | company_name = 3DVIA
  | company_logo = [[Image:3dvia logo.png|220px|]]
  | type = [[Public company|Public]] 
  | foundation = 2007
  | location = [[Paris, France]] and [[Concord, Massachusetts]] (June 2007)
  | slogan = ''3D for All''
  | market cap       = 4.6 billion USD<ref name="zenobank">{{cite web |url=http://www.zenobank.com/index.php?symbol=DASTY&page=quotesearch |title=Company Profile for Dassault Systemes S.A (DASTY) |accessdate=2008-10-20}}</ref>
  | key_people       = Bernard Charles<ref name="zenobank"/>
  | num_employees    = 7,459<ref name="zenobank"/>
  | homepage = [http://www.3dvia.com/ www.3dvia.com]
}}

'''3DVIA''' is a brand of [[Dassault Systemes]]<ref name="zenobank">{{cite web |url=http://www.zenobank.com/index.php?symbol=DASTY&page=quotesearch |title=Company Profile for Dassault Systemes S.A (DASTY) |accessdate=2008-10-20}}</ref> that was founded to extend their high-end 3D graphics capabilities to new markets including consumers.  The company's stated goal is to democratize the use of 3D technology and establish it as the new media for consumer and professional users.

The company has several product groups that are being assembled under the 3DVIA umbrella.

For consumer markets, the company currently operates a 3D online community and model hosting website located at www.3dvia.com and provides a free modeling application named 3DVIA Shape.  Through a partnership with [[Microsoft]], 3DVIA provides a version of this software for users to create models on [[Microsoft Virtual Earth]] under the name Virtual earth - 3DVIA.

For the gaming and electronic entertainment industry, the offers a development platform for system integrators, game studios and corporate end-users through its [[Virtools]] brand name.

Through a recent acquisition of Seemage, the company has launched the 3DVIA Composer product line that allows non-engineering staff at corporations to create 3D technical documentation.

In a partnership with the [[Publicis Groupe]], 3DVIA has launched 3Dswym.com as a way for fortune 1000 marketers to co-create new products and services with their consumers using 3DVIA technologies.

3DVIA Studio a comprehensive development platform with a realistic real-time rendering engine significantly improve the game development process by quickly bringing ideas into reality and aiding developers in producing high-end, online experiences.
 
==References==
{{morefootnotes|date=July 2010}}
{{reflist}}
*[http://www.time.com/time/business/article/0,8599,1739765,00.html 3D Comes to Web 2.0]
*[http://www.iht.com/articles/2007/11/06/technology/dassault.php Dassault brings 3-D modeling to the masses]
*[http://www.tmcnet.com/usubmit/2007/06/26/2739942.htm Dassault Systemes Unveils 3DVIA]
*[http://www.businesswire.com/news/home/20071128005649/en Dassault Systemes announces 3DVIA Composer]
*[http://www.3dvia.com/blog/video-a-quick-tour-of-3dviacom/ Video - A Quick Tour of 3DVIA.com]

==External links==
*[http://www.3dvia.com 3DVIA Website]

[[Category:3D graphics software]]
[[Category:Animation software]]
[[Category:Product lifecycle management]]
[[Category:Dassault]]

[[fr:3DVIA]]
[[sv:3dvia]]</text>
</page>
<page>
<id>159</id>
<title>4-bit</title>
<text>{{Redirect|IA-4|the congressional district|Iowa's 4th congressional district}}
{{No footnotes|date=October 2009}}
{{N-bit|4|}}
The [[Intel 4004]], the world's first commercially available single-[[integrated circuit|chip]] [[microprocessor]], was a 4-bit [[central processing unit|CPU]].  The [[F-14 Tomcat]]'s [[Central Air Data Computer]] (or '''F14 CADC)''' was created a year before the 4004, but its existence was [[Classified information|classified]] by the [[United States Navy]] until 1997.  Also, the [[HP-48 series|HP48]] [[HP Saturn (microprocessor)|Saturn processor]] (a commonly used scientific calculator) is basically a 4-bit machine, though it strings multiple words together, e.g. its 20-bit memory addressing.

The [[1970s]] saw the emergence of 4-bit software applications for mass markets like pocket calculators.

With 4 bits, it is possible to create 16 different values. All single digit hexadecimal numbers can be written with 4 bits.

{| class="wikitable"
! [[Binary numeral system|Binary]] !! [[Octal]] !! [[Decimal]] !! [[Hexadecimal]]
|-
| 0000
| 0
| 0
| 0
|-
| 0001
| 1
| 1
| 1
|-
| 0010
| 2
| 2
| 2
|-
| 0011
| 3
| 3
| 3
|-
| 0100
| 4
| 4
| 4
|-
| 0101
| 5
| 5
| 5
|-
| 0110
| 6
| 6
| 6
|-
| 0111
| 7
| 7
| 7
|-
| 1000
| 10
| 8
| 8
|-
| 1001
| 11
| 9
| 9
|-
| 1010
| 12
| 10
| A
|-
| 1011
| 13
| 11
| B
|-
| 1100
| 14
| 12
| C
|-
| 1101
| 15
| 13
| D
|-
| 1110
| 16
| 14
| E
|-
| 1111
| 17
| 15
| F
|}

==List of 4-bit Processors==
{{Expand section|date=May 2008}}
* [[Intel 4004]]
* [[Intel 4040]]
* [[Atmel]] [[MARC4]] core [http://www.atmel.com/products/MARC4/ (atmel.com)] - Mature. Not recommended for new designs.
* [[Toshiba]] [[TLCS-47]] series
* [[HP Saturn (microprocessor)]]
* [[NEC]] µPD75X
* [[NEC]] µPD6P9 infrared remote control transmitter microcontroller [http://www.necel.com/micro/en/product/mr_48_remocon.html]

==See also==
* [[GMC-4]]

== External references ==
*[http://www.hpmuseum.org/saturn.htm Saturn CPU link]

{{CPU technologies}}


{{Compu-storage-stub}}

[[ca:4 bits]]
[[cs:4bitový]]
[[de:4-Bit-Architektur]]
[[es:4 bits]]
[[ko:4??]]
[[it:4 bit]]
[[ms:4-bit]]
[[ja:4???]]
[[pl:Architektura 4-bitowa]]
[[pt:4 bits]]
[[zh:4??]]</text>
</page>
<page>
<id>165</id>
<title>4CAPS</title>
<text>'''4CAPS''' (Cortical Capacity-Constrained Concurrent Activation-based Production System) is a [[cognitive architecture]] developed by [[Marcel Just|Marcel A. Just]] and Sashank Varma at [[Carnegie Mellon University]] <ref name="jv2006">Just, M. A., & Varma, S. (2007). The organization of thinking: What functional brain imaging reveals about the neuroarchitecture of complex cognition. ''Cognitive, Affective, and Behavioral Neuroscience'', ''7(3)'', 153-191.</ref>.  It is the successor of the CAPS<ref>Thibadeau, R., Just, M. A., & Carpenter, P. A. (1982). A model of the time course and content of reading. ''Cognitive Science'', ''6'', 157-203.</ref> and 3CAPS <ref>Just, M. A., & Carpenter, P. A. (1992). A capacity theory of comprehension: Individual differences in working memory. ''Psychological Review'', '99'', 122-149</ref><ref>Just, M. A., & Varma, S. (2002). A hybrid architecture for working memory: Reply to MacDonald and Christiansen (2002). ''Psychological Review'', ''109'', 55-65.</ref> cognitive architectures.

==Overview and Assumptions==
In 4CAPS computations are distributed and dynamically balanced among independent processing centers.  Like in other cognitive architectures (e.g., [[ACT-R]]), these processing centers have been identified with corresponding cortical regions in the human brain.  Performing  specific task, such as reading or driving, requires the simultaneous contribution of many of such regions.

Notably, 4CAPS differs from other architectures for its stress on the capacity constraints (that is, limited computational power), and the dynamic collaboration between different centers.  In particular, according the Just and Varma <ref name="jv2006"/>, 4CAPS is based on four characteristic assumptions:

# Each cortical area can perform multiple cognitive functions
# Each cortical area has a limited capacity of computational resources
# The cortical network of regions that is responsible for carrying out a particular task changes dynamically as the regions' capacity resources are saturated.
# Communications between cortical regions is also subject to specific constraints, similar to bandwidth limitations along information channels.

==Implementation and Applications==
Like other cognitive architectures (such as [[ACT-R]], [[EPIC (cognitive architecture)|EPIC]], and [[Soar (cognitive architecture)|Soar]]), 4CAPS is implemented as a [[production system]]<ref name="jv2006"/>. It is written in the [[Common Lisp]] programming language<ref>The source code for 4CAPS can be found at http://www.ccbi.cmu.edu/4CAPS/index.html</ref>.  This system has been used to create computational models for a variety of phenomena, especially in the field of cognitive neuroscience.  In particular, 4CAPS models have been created and used to fit behavioral and imaging data for tasks such as the Tower of London<ref>Newman, S. D., Carpenter, P. A., Varma, S., & Just, M. A. (2003). Frontal and parietal participation in problem solving in the Tower of London: fMRI and computational modeling of planning and high-level perception. ''Neuropsychologia'', ''41'', 1668-1682.</ref>, mental rotation <ref name="jv2006"/>, and dual-tasking <ref name="jv2006"/>.

==References==
* Just, M. A., & Varma, S. (2007). The organization of thinking: What functional brain imaging reveals about the neuroarchitecture of complex cognition. ''Cognitive, Affective and Behavioral Neuroscience'', ''7(3)'', 153-191.

==External links==
* http://www.ccbi.cmu.edu/4CAPS/index.html, The 4CAPS page at Marcel Just's laboratory website.

==Notes==
{{reflist|2}}

{{DEFAULTSORT:4caps}}
[[Category:Common Lisp software]]
[[Category:Cognitive architecture]]</text>
</page>
<page>
<id>183</id>
<title>64-bit</title>
<text>{{Refimprove|date=May 2009}}
{{N-bit|64|(8 [[octet (computing)|octets]])}}

'''64-bit''' CPUs have existed in [[supercomputers]] since the 1970s ([[Cray-1]], 1975; [[CDC 6000 series]], 1964, were 60-bit) and in [[RISC]]-based [[computer workstation|workstations]] and [[Server (computing)|server]]s since the early 1990s. In 2003 they were introduced to the (previously [[32-bit]]) mainstream [[personal computer]] arena, in the form of the [[x86-64]] and 64-bit [[PowerPC]] processor architectures.

Without further qualification, a ''64-bit'' computer architecture generally has integer and addressing [[processor register|registers]] that are 64 bits wide, allowing direct support for 64-bit data types and addresses. However, a CPU might have external [[data bus]]es or [[address bus]]es with different sizes from the registers, even larger (the 32-bit [[Pentium (brand)|Pentium]] had a 64-bit data bus, for instance). The term may also refer to the size of low-level data types, such as 64-bit [[Floating point|floating-point]] numbers.

==Architectural implications==
Processor registers are typically divided into several groups: ''integer'', ''floating-point'', ''[[SIMD]]'', ''control'', and often special registers for address arithmetic which may have various uses and names such as ''address'', ''index'' or ''base registers''. However, in modern designs, these functions are often performed by more general purpose ''integer'' registers. In most processors, only integer and/or address-registers can be used to address data in memory, the other types cannot. The size of these registers therefore normally limits the amount of directly addressable memory, even if there are registers, such as floating-point registers, that are wider.

Most high performance 32-bit and 64-bit processors (some notable exceptions are most [[ARM architecture|ARM]] and 32-bit [[MIPS architecture|MIPS]] CPUs) have integrated floating point hardware, which is often, but not always, based on 64-bit units of data. For example, although the [[x86]]/[[x87]] architecture has instructions capable of loading and storing 64-bit (and 32-bit) floating-point values in memory, the internal data and register format is 80 bits wide. In contrast, the 64-bit [[DEC Alpha|Alpha]] family uses a 64-bit floating-point data and register format (as well as 64-bit integer registers).

==History==
Most CPUs are designed so that the contents of a single integer register can store the [[memory address|address]] (location) of any datum in the computer's [[virtual memory]]. Therefore, the total number of addresses in the virtual memory &mdash; the total amount of data the computer can keep in its working area &mdash; is determined by the width of these registers. Beginning in the 1960s with the [[IBM]] [[System/360]] (which was an exception, in that it used the low order 24 bits of a word for addresses, resulting in a 16 [[megabyte|MB]] [{{nowrap|16 × 1024<sup>2</sup> bytes}}] address space size), then (amongst many others) the [[Digital Equipment Corporation|DEC]] [[VAX]] minicomputer in the 1970s, and then with the [[Intel 80386]] in the mid-1980s, a ''de facto'' consensus developed that 32 bits was a convenient register size.  A 32-bit [[address register]] meant that 2<sup>32</sup> addresses, or 4 [[Gigabyte|GB]] of [[Random Access Memory|RAM]], could be referenced. At the time these architectures were devised, 4 GB of memory was so far beyond the typical quantities (4 MB) in installations that this was considered to be enough "headroom" for addressing. 4.29 billion addresses were considered an appropriate size to work with for another important reason: 4.29 billion integers are enough to assign unique references to most entities in applications like [[database]]s.

Some [[supercomputer]] architectures of the 1970s and 1980s used registers up to 64 bits wide. In the mid-1980s, Intel i860<ref>{{cite journal| url=http://www.computer.org/portal/web/csdl/doi/10.1109/38.31467 |title=The Intel i860 64-Bit Processor: A General-Purpose CPU with 3D Graphics Capabilities |date=July/August 1989 |volume=9 |issue=4 |pages=85–94|first=Jack |last=Grimes |first2=Les |last2=Kohn |first3=Rajeev |last3=Bharadhwaj|work=IEEE Computer Graphics and Applications|accessdate=2010-11-19}}</ref> development began culminating in a (too late<ref>Zachary, ''Showstopper!''</ref> for Windows NT) 1989 release.  However, 32 bits remained the norm until the early 1990s, when the continual reductions in the cost of memory led to installations with quantities of RAM approaching 4 GB, and the use of virtual memory spaces exceeding the 4 GB ceiling became desirable for handling certain types of problems. In response, MIPS and DEC developed 64-bit microprocessor architectures, initially for high-end [[workstation]] and [[Server (computing)|server]] machines. By the mid-1990s, [[HAL Computer Systems]], [[Sun Microsystems]], [[IBM]], [[Silicon Graphics]], and [[Hewlett Packard]] had developed 64-bit architectures for their workstation and server systems. A notable exception to this trend were [[Mainframe computer|mainframes]] from IBM, which then used 32-bit data and 31-bit address sizes; the IBM mainframes did not include 64-bit processors until 2000. During the 1990s, several low-cost 64-bit microprocessors were used in consumer electronics and embedded applications. Notably, the [[Nintendo 64]]<ref>{{cite press release|title=NEC Offers Two High Cost Performance 64-bit RISC Microprocessors|publisher=[[NEC]]|date=1998-01-20|url=http://www.nec.co.jp/press/en/9801/2002.htm|accessdate=2011-01-09|quote=Versions of the VR4300 processor are widely used in consumer and office automation applications, including the popular Nintendo 64TM video game and advanced laser printers such as the recently announced, award-winning Hewlett-Packard LaserJet 4000 printer family.}}</ref> and the [[PlayStation 2]] had 64-bit microprocessors before their introduction in personal computers. High-end printers and network equipment, as well as industrial computers also used 64-bit microprocessors such as the [[Quantum Effect Devices]] [[R5000]]. 64-bit computing started to drift down to the personal computer desktop from 2003 onwards, when some models in [[Apple Inc.|Apple]]'s Macintosh lines switched to [[PowerPC 970]] processors (termed "G5" by Apple) and the launch of [[Advanced Micro Devices|AMD]]'s 64-bit [[x86-64]] extension to the [[x86]] architecture, itself a response to [[Intel]]'s [[Itanium]] gaining early [[operating system]]s support.

==Limitations==
{{Ref improve section|date=January 2010}}

Most 64-bit microprocessors on the market today have an artificial limit on the amount of memory they can address, considerably lower than what might be expected from 64 bits. For example, the [[x86-64|AMD64 architecture]] currently has a 52 bit limit on physical memory and only supports a 48-bit virtual address space.<ref>AMD64 Programmer's Manual Volume 2: System Programming, order number 24593, revision 3.14, September 2007, Advanced Micro Devices</ref> This is 4 [[petabyte|PB]] ({{nowrap|4 × 1024<sup>5</sup> bytes}}) and 256 [[terabyte|TB]] ({{nowrap|256 × 1024<sup>4</sup> bytes}}), respectively. A PC cannot contain 4 petabytes of memory (due to the size of current memory chips if nothing else) but AMD envisioned large servers, shared memory clusters, and other uses of physical address space that might approach this in the foreseeable future, and the 52 bit physical address provides ample room for expansion while not incurring the cost of implementing 64-bit physical addresses. Similarly, the 48-bit virtual address space was designed to provide more than 65,000 times the 32 bit limit of 4 [[gigabyte|GB]] ({{nowrap|4 × 1024<sup>3</sup> bytes}}), allowing ample room for expansion in the near future without incurring the overhead of translating full 64-bit addresses.

==64-bit processor timeline==
;1961: IBM delivers the [[IBM 7030 Stretch]] [[supercomputer]], which uses 64-bit data words and 32- or 64-bit instruction words.
;1974: [[Control Data Corporation]] launches the [[CDC Star-100]] vector supercomputer, which uses a 64-bit word architecture (previous CDC systems were based on a 60-bit architecture).
:[[International Computers Limited]] launches the [[ICL 2900 Series]] with 32-bit, 64-bit, and 128-bit [[two's complement]] integers; 64-bit and 128-bit floating point; 32-bit, 64-bit and 128-bit packed decimal and a 128-bit accumulator register. The architecture has survived through a succession of ICL and Fujitsu machines. The latest is the Fujitsu Supernova, which emulates the original environment on 64-bit Intel processors.
;1976: [[Cray Research]] delivers the first [[Cray-1]] supercomputer, which is based on a 64-bit word architecture and will form the basis for later Cray vector supercomputers.
;1983: [[Elxsi]] launches the Elxsi 6400 parallel [[minisupercomputer]]. The Elxsi architecture has 64-bit data registers but a 32-bit address space.
;1989: [[Intel]] introduces the [[Intel i860]] [[RISC]] processor. Marketed as a "64-Bit Microprocessor", it had essentially a 32-bit architecture, enhanced with a 3D Graphics Unit capable of 64-bit integer operations.<ref name="smithsonian-i860">{{cite web|title=i860 64-Bit Microprocessor|url=http://smithsonianchips.si.edu/intel/i860.htm|publisher=Intel|accessdate=30 November 2010|year=1989}}</ref>
;1991: [[MIPS Technologies]] produces the first 64-bit microprocessor, the R4000, which implements the MIPS III ISA, the third revision of their [[MIPS architecture]].<ref>Joe Heinrich: "MIPS R4000 Microprocessor User's Manual, Second Edition", 1994, MIPS Technologies, Inc.</ref> The CPU is used in [[Silicon Graphics|SGI]] graphics workstations starting with the [[SGI Crimson|IRIS Crimson]]. [[Kendall Square Research]] deliver their first KSR1 supercomputer, based on a proprietary 64-bit RISC processor architecture running [[OSF/1]].
;1992: [[Digital Equipment Corporation]] (DEC) introduces the pure 64-bit [[DEC Alpha|Alpha]] architecture which was born from the [[DEC PRISM|PRISM]] project.<ref>Richard L. Sites: "Alpha AXP Architecture", Digital Technical Journal, Volume 4, Number 4, 1992, Digital Equipment Corporation.</ref>
;1993: [[Atari]] introduces the [[Atari Jaguar]] [[video game console]], which includes some 64-bit wide data paths in its architecture.<ref>''[http://www.atariage.com/Jaguar/history.html Atari Jaguar History]''. [[AtariAge#AtariAge (website)|AtariAge]]. Retrieved 9 August 2010.</ref>
;1994: [[Intel]] announces plans for the 64-bit [[IA-64]] architecture (jointly developed with [[Hewlett-Packard]]) as a successor to its 32-bit [[IA-32]] processors. A 1998 to 1999 launch date is targeted. SGI releases IRIX 6.0, with 64-bit support for the [[R8000]] chip set.
;1995: [[Sun Microsystems|Sun]] launches a 64-bit [[SPARC]] processor, the [[UltraSPARC]].<ref>Linley Gwennap: "UltraSparc Unleashes SPARC Performance", Microprocessor Report, Volume 8, Number 13, 3 October 1994, MicroDesign Resources.</ref> [[Fujitsu]]-owned [[HAL Computer Systems]] launches workstations based on a 64-bit CPU, HAL's independently designed first-generation [[SPARC64]]. IBM releases the A10 and A30 microprocessors, 64-bit PowerPC AS processors.<ref>J. W. Bishop, et al.: "PowerPC AS A10 64-bit RISC microprocessor", IBM Journal of Research and Development, Volume 40, Number 4, July 1996, IBM Corporation.</ref> IBM also releases a 64-bit [[AS/400]] system upgrade, which can convert the operating system, database and applications.
;1996: [[Nintendo]] introduces the [[Nintendo 64]] video game console, built around a low-cost variant of the MIPS R4000. HP releases an implementation of the 64-bit 2.0 version of their [[PA-RISC]] processor architecture, the [[PA-8000]].<ref>Linley Gwennap: "PA-8000 Combines Complexity and Speed", Microprocessor Report, Volume 8, Number 15, 14 November 1994, MicroDesign Resources.</ref>
;1997: IBM releases the [[RS64]] line of 64-bit [[PowerPC]]/PowerPC AS processors.
;1998: IBM releases the [[POWER3]] line of full-64-bit PowerPC/[[IBM POWER|POWER]] processors.<ref>F. P. O'Connell and S. W. White: "POWER3: The next generation of PowerPC processors", IBM Journal of Research and Development, Volume 44, Number 6, November 2000, IBM Corporation.</ref>
;1999: Intel releases the [[instruction set]] for the IA-64 architecture. [[AMD]] publicly discloses its set of 64-bit extensions to IA-32, called [[x86-64]] (later branded AMD64).
;2000: IBM ships its first 64-bit [[z/Architecture]] [[Mainframe computer|mainframe]], the [[zSeries]] z900.  z/Architecture is a 64-bit version of the 32-bit [[ESA/390]] architecture, a descendant of the 32-bit [[System/360]] architecture.
;2001: Intel finally ships its IA-64 processor line, after repeated delays in getting to market. Now branded [[Itanium]] and targeting high-end servers, sales fail to meet expectations.
;2003: AMD introduces its [[Opteron]] and [[Athlon 64]] processor lines, based on its AMD64 architecture which is the first x86-based 64-bit processor architecture. [[Apple Computer|Apple]] also ships the 64-bit "G5" [[PowerPC 970]] CPU produced by IBM. Intel maintains that its Itanium chips would remain its only 64-bit processors.
;2004: Intel, reacting to the market success of AMD, admits it has been developing a clone of the AMD64 extensions named IA-32e (later renamed EM64T, then yet again renamed to Intel 64). Intel ships updated versions of its [[Xeon]] and [[Pentium 4]] processor families supporting the new 64-bit instruction set.
:[[VIA Technologies]] announces the [[VIA Isaiah|Isaiah]] 64-bit processor.<ref>{{cite web
  | title = VIA Unveils Details of Next-Generation Isaiah Processor Core
  | publisher = VIA Technologies, Inc.
  | url = http://www.via.com.tw/en/resources/pressroom/2004_archive/pr041005_fpf-isaiah.jsp
  | accessdate = 2007-07-18 }}</ref>
;2006: Sony, IBM, and Toshiba begin manufacturing of the 64-bit [[Cell (microprocessor)|Cell processor]] for use in the [[PlayStation 3]], servers, workstations, and other appliances.

==64-bit operating system timeline==
;1985: [[Cray]] releases [[UNICOS]], the first 64-bit implementation of the [[Unix]] operating system.<ref>{{cite web|author=Stefan Berka |url=http://www.operating-system.org/betriebssystem/_english/bs-unicos.htm |title=Unicos Operating System |publisher=www.operating-system.org |date= |accessdate=2010-11-19}}</ref>
;1993: DEC releases the 64-bit [[OSF/1|DEC OSF/1 AXP]] [[Unix-like]] operating system  (later renamed Tru64 UNIX) for its systems based on the [[DEC Alpha|Alpha]] architecture.
;1995: DEC releases [[OpenVMS]] 7.0, the first full 64-bit version of OpenVMS for Alpha.
;1996: Support for the [[MIPS architecture|MIPS]] [[R4000]] processor is added by  [[Silicon Graphics]] to the [[IRIX]] [[operating system]] in release 6.2.
;1998: Sun releases [[Solaris (operating system)|Solaris 7]], with full 64-bit [[UltraSPARC]] support.
;2000: IBM releases [[z/OS]], a 64-bit operating system descended from [[MVS]], for the new [[zSeries]] 64-bit mainframes; 64-bit [[Linux on zSeries]] follows the CPU release almost immediately.
;2001: [[NetBSD]] is the first operating system to run on the Intel Itanium processor at the processor's release. Further, Microsoft releases [[Windows XP 64-Bit Edition]], also for the Itanium's IA-64 architecture, although it was able to run [[32-bit application]]s through an execution layer.
;2003: Apple releases its [[Mac OS X 10.3]] "Panther" operating system which adds support for native 64-bit integer arithmetic on [[PowerPC 970]] processors.<ref name="ars-macosx">{{cite web|title=Mac OS X 10.6 Snow Leopard: the Ars Technica review|url=http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/5|page=5|author=[[John Siracusa]]|publisher=Ars Technica|accessdate=2009-09-06}}</ref> Several [[Linux]] [[Linux distribution|distributions]] release with support for [[AMD64]]. [[Microsoft]] announces plans to create a version of its [[Microsoft Windows|Windows]] operating system to support the AMD64 architecture, with backwards compatibility with 32-bit applications. [[FreeBSD]] releases with support for AMD64.
;2005: On January 31, Sun releases [[Solaris (operating system)|Solaris 10]] with support for AMD64 and EM64T processors. On April 29, Apple releases [[Mac OS X 10.4]] "Tiger" which provides limited support for 64-bit command-line applications on machines with PowerPC 970 processors; later versions for Intel-based Macs supported 64-bit command-line applications on Macs with EM64T processors.  On April 30, Microsoft releases [[Windows XP Professional x64 Edition]] for AMD64 and EM64T processors.
;2006: Microsoft releases [[Windows Vista]], including a 64-bit version for AMD64/EM64T processors that retains 32-bit compatibility. In the 64-bit version, all Windows applications and components are 64-bit, although many also have their 32-bit versions included for compatibility with plugins.
;2007: Apple releases [[Mac OS X 10.5]] "Leopard", which fully supports 64-bit applications on machines with PowerPC 970 or EM64T processors.
;2009: Apple releases [[Mac OS X 10.6]], "Snow Leopard," which is shipped with a 64-bit kernel for AMD64/Intel64 processors, although only certain recent models of Apple computers will run the 64-bit kernel by default. Most applications bundled with Mac OS X 10.6 are now also 64-bit.<ref name="ars-macosx"/>  Microsoft releases [[Windows 7]], which, like Windows Vista, includes a full 64-bit version for AMD64/Intel 64 processors; most new computers are loaded by default with a 64-bit version. It also releases [[Windows Server 2008 R2]], which is the first 64-bit only operating system released by Microsoft.

==32- vs 64-bit==
A change from a [[32-bit]] to a 64-bit architecture is a fundamental alteration, as most [[operating system]]s must be extensively modified to take advantage of the new architecture.{{Why?|date=November 2010}} Other software must also be [[porting|ported]] to use the new capabilities; older software is usually supported through either a ''hardware compatibility mode'' (in which the new processors support the older 32-bit version of the instruction set as well as the 64-bit version), through software [[Emulator|emulation]], or by the actual implementation of a 32-bit processor core within the 64-bit processor (as with the Itanium processors from Intel, which include an [[x86]] processor core to run 32-bit x86 applications). The operating systems for those 64-bit architectures generally support both 32-bit and 64-bit applications.<ref>{{cite web
  | title = Windows 7: 64 bit vs 32 bit?
  | publisher = W7 Forums
  | url = http://www.w7forums.com/windows-7-64-bit-vs-32-bit-t484.html
  | accessdate = 2009-04-05 }}</ref>

One significant exception to this is the [[AS/400]], whose software runs on a virtual [[Instruction Set Architecture|ISA]], called TIMI (Technology Independent Machine Interface) which is translated to native machine code by low-level software before being executed. The low-level software is all that has to be rewritten to move the entire OS and all software to a new platform, such as when IBM transitioned their line from the older 32/48-bit "IMPI" instruction set to 64-bit PowerPC (IMPI wasn't anything like 32-bit PowerPC, so this was an even bigger transition than from a 32-bit version of an instruction set to a 64-bit version of the same instruction set).

While 64-bit architectures indisputably make working with large data sets in applications such as [[digital video]], scientific computing, and large [[database]]s easier, there has been considerable debate as to whether they or their 32-bit compatibility modes will be faster than comparably-priced 32-bit systems for other tasks. In [[x86-64]] architecture (AMD64), the majority of the 32-bit operating systems and applications are able to run smoothly on the 64-bit hardware.

A compiled Java program can run on a 32 bit or 64 bit Java virtual machine without modification. The lengths and precision of all the built in types are specified by the standard and are not dependent on the underlying architecture. Java programs that run on a 64 bit Java virtual machine have access to a larger address space.<ref>{{cite web
  | title = Frequently Asked Questions About the Java HotSpot VM
  | publisher = Sun Microsystems, Inc
  | url = http://java.sun.com/docs/hotspot/HotSpotFAQ.html#64bit_compilers
  | accessdate = 2007-05-03 }}</ref>

Speed is not the only factor to consider in a comparison of 32-bit and 64-bit processors. Applications such as multi-tasking, stress testing, and clustering—for HPC ([[high-performance computing]])—may be more suited to a 64-bit architecture when deployed appropriately. 64-bit clusters have been widely deployed in large organizations such as IBM, HP and Microsoft, for this reason.

==Pros and cons==
A common{{fact|date=January 2011}} misconception is that 64-bit architectures are no better than 32-bit architectures unless the computer has more than 4 GB of [[main memory]]. This is not entirely true:

*Some operating systems and certain hardware configurations limit the physical memory space to 3 GB on [[IA-32]] systems, due to much of the 3–4 GB region being reserved for hardware addressing; see [[3 GB barrier]]. This is not present in 64-bit architectures, which can use 4 GB of memory and more. However, IA-32 processors from the [[Pentium II]] onwards allow for a 36-bit ''physical'' memory address space, using [[Physical Address Extension]] (PAE), which gives a 64 GB physical address range, of which up to 62 GB may be used by main memory; operating systems that support PAE may not be limited to 4GB of physical memory, even on IA-32 processors.

*Some operating systems reserve portions of [[Process (computing)|process]] [[address space]] for OS use, effectively reducing the total address space available for mapping memory for user programs. For instance, Windows XP DLLs and other user mode OS components are mapped into each process's address space, leaving only 2 to 3 GB (depending on the settings) address space available. This limit is currently much higher on 64-bit operating systems and does not realistically restrict memory usage.

*[[Memory-mapped file]]s are becoming more difficult to implement in 32-bit architectures.{{Citation needed|date=November 2010}} A 4 GB file is no longer uncommon, and such large files cannot be memory mapped easily to 32-bit architectures; only a region of the file can be mapped into the address space, and to access such a file by memory mapping, those regions will have to be mapped into and out of the address space as needed. This is a problem, as memory mapping remains one of the most efficient disk-to-memory methods, when properly implemented by the OS.

*Some programs such as data encryption software can benefit greatly from 64-bit registers (if the software is 64-bit compiled) and effectively execute 3 to 5 times faster on 64-bit than on 32-bit.{{Citation needed|date=April 2010}}

*Some 64-bit architectures, such as [[x86-64]], allow for more general purpose registers than their 32-bit counterparts. This is a significant speed increase for tight loops since the processor doesn't have to go out the second level cache or main memory to gather data if it can fit in the available registers.
:Example in [[C (programming language)|C]]:
<source lang="c">
for (a=0; a<100; a++)
{
  b = a;
  c = b;
  d = c;
  e = d;
}
</source>
:If a processor only has the ability to keep two three values/variables (registers) in fast memory it would need to stop executing and push and pop the stack to be able to process variable d and e as well. A process that takes a lot of CPU cycles. A processor that is capable of holding all the values/variables (registers) in memory can simply just loop through this without needing to halt execution for each iteration just to get the proper data in memory. This behavior can easily be compared with virtual memory, although any effects are contingent upon the compiler.

The main disadvantage of 64-bit architectures is that relative to 32-bit architectures, the same data occupies more space in memory (due to swollen pointers and possibly other types and alignment padding). This increases the memory requirements of a given process and can have implications for efficient processor cache utilization. Maintaining a partial 32-bit model is one way to handle this and is in general reasonably effective. For example, the [[z/OS]] operating system takes this approach currently, requiring program code to reside in 31-bit address spaces (the high order bit is not used in address calculation on the underlying hardware platform) while data objects can optionally reside in 64-bit regions.

Currently, most proprietary [[x86]] software is compiled into 32-bit code, with less being also compiled into 64-bit code (although the trend is rapidly equalizing {{Citation needed|date=July 2010}}), so much does not take advantage of the larger 64-bit address space or wider 64-bit registers and data paths on x86 processors, or the additional registers in 64-bit mode. However, users of most RISC platforms, and users of [[free software|free]] or [[open source]] operating systems (where the [[source code]] is available for recompiling with a 64-bit compiler) have been able to use exclusive 64-bit computing environments for years due to the likelihood of the existence of someone willing to compile the code thusly. Not all such applications require a large address space nor manipulate 64-bit data items, so they wouldn't benefit from the larger address space or wider registers and data paths. The main advantage to 64-bit versions of such applications is the ability to access more registers in the [[x86-64]] architecture.

=== Software availability ===
x86-based 64-bit systems sometimes lack equivalents to [[software]] that is written for 32-bit architectures. The most severe problem in Microsoft Windows is incompatible [[device driver]]s. Most 32-bit application software can run on a 64-bit operating system in a compatibility mode, also known as an [[Emulator|emulation]] mode, e.g. Microsoft [[WoW64]] Technology for IA-64 and AMD64. The 64-bit Windows Native Mode<ref>{{cite web|url=http://technet.microsoft.com/en-us/sysinternals/bb897447.aspx |title=Inside Native Applications |publisher=Technet.microsoft.com |date=2006-11-01 |accessdate=2010-11-19}}</ref> driver environment runs atop 64-bit NTDLL.DLL which cannot call 32-bit Win32 subsystem code (often devices whose actual hardware function is emulated in user mode software, like Winprinters). Because 64-bit drivers for most devices were not available until early 2007 (Vista x64), using 64-bit Microsoft Windows operating system was considered a challenge. However, the trend is changing towards 64-bit computing as most manufacturers provide both 32-bit and 64-bit drivers nowadays, so this issue is most likely to occur when attempting to use older peripherals.

This is less of a problem with open source drivers that are already available for a 32-bit OS, since they can be modified to be 64-bit compatible, if necessary. Furthermore, support for hardware made before early 2007 was equally troubling for opensource platforms due to their small market shares in desktop market.

On most Macs, [[Mac OS X]] runs with a 32-bit kernel even on 64-bit-capable processors, but the 32-bit kernel can run 64-bit user-mode code; this allows those Macs to support 64-bit processes while still supporting 32-bit device drivers - although not 64-bit drivers and performance advantages that would come with them.  On systems with 64-bit processors, both the 32-bit and 64-bit Mac OS X kernel can run 32-bit user-mode code, and all versions of Mac OS X include 32-bit versions of libraries that 32-bit applications would use, so 32-bit user-mode software for Mac OS X will run on those systems.

[[Linux]] and most other [[Unix-like]] operating systems, and the [[C (programming language)|C]] and [[C++]] toolchains for them, have supported 64-bit processors for many years: releasing 64-bit versions of their operating system before official Microsoft releases.  Many applications and libraries for those platforms are [[open source]], written in C and C++, so that, if it's 64-bit-safe, they can be compiled into 64-bit versions.  This source bade distribution model with an emphasis on frequent releases and cutting edge code makes availability of application software for those operating systems less of an issue.

==64-bit data models==
{{inappropriate tone|section|date=December 2010}}
Converting application software written in a [[high-level language]] from a 32-bit architecture to a 64-bit architecture varies in difficulty.
One common recurring problem is that some programmers assume that [[Pointer (computing)|pointers]] have the same length as some other data type. These programmers assume they can transfer quantities between these data types without losing information.
Those assumptions happen to be true on some 32-bit machines (and even some 16-bit machines), but they are no longer true on 64-bit machines.
This common mistake is often called "the heresy that 'all the world's a VAX.'".<ref>
[http://www.ibm.com/developerworks/power/library/pa-openpower1/#N100C7 "Exploring 64-bit development on POWER5: How portable is your code, really?"]
by Peter Seebach 2006
</ref><ref>[http://www.lysator.liu.se/c/ten-commandments.html "The Ten Commandments for C Programmers"] by Henry Spencer</ref><ref>{{cite web|url=http://www.datacenterworks.com/stories/thud.html |title=The Story of Thud and Blunder |publisher=Datacenterworks.com |date= |accessdate=2010-11-19}}</ref>
The [[C (programming language)|C programming language]] and its descendant [[C++]] make it particularly easy to make this sort of mistake.  Differences between the [[C90 (C version)|C89]] and [[C (programming language)#C99|C99]] language standards also exacerbate the problem.<ref>{{cite web|firat=Eric |last=Sosman |url=http://groups.google.com/group/comp.lang.c/msg/82fdb7c12af4e6ba |title=Comp.lang.c: C89, size_t, and long |publisher=Groups.google.com |date=2007-03-14 |accessdate=2010-11-19}}</ref>

To avoid this mistake in C and C++, the <code>sizeof</code> operator can be used to determine the size of these primitive types if decisions based on their size need to be made, both at compile- and run-time. Also, the <[[limits.h]]> header in the [[C (programming language)#C99|C99]] standard, and numeric_limits class in <limits> header in the C++ standard, give more helpful info; sizeof only returns the size in ''[[Character (computing)|chars]]''. This used to be misleading, because the standards leave the definition of the <code>CHAR_BIT</code> macro, and therefore the number of bits in a ''char'', to the implementations. However, except for those compilers targeting [[Digital Signal Processor|DSP]]s, "64 bits == 8 chars of 8 bits each" has become the norm.

One needs to be careful to use the <code>ptrdiff_t</code> type (in the standard header <code><stddef.h></code>) for the result of subtracting two pointers; too much code incorrectly uses "int" or "long" instead. To represent a pointer (rather than a pointer difference) as an integer, use <code>uintptr_t</code> where available (it is only defined in C99, but some compilers otherwise conforming to an earlier version of the standard offer it as an extension).

Neither C nor C++ define the length of a pointer, int, or long to be a specific number of bits. In C99, however, [[stdint.h]] provides names for integer types with certain numbers of bits where those types are available.

===Specific C-language data models===
In most programming environments on 32-bit machines, pointers, "int" (that is, integer) types, and "long" (that is, long integer) types are all 32 bits wide.

However, in many programming environments on 64-bit machines, "int" variables are still 32 bits wide, but long integers and pointers are 64 bits wide. These are described as having an '''LP64''' [[data model]]. Another alternative is the '''ILP64''' data model in which all three data types are 64 bits wide, and even '''SILP64''' where "short" integers are also 64 bits wide{{Citation needed|date=February 2007}}. However, in most cases the modifications required are relatively minor and straightforward, and many well-written programs can simply be recompiled for the new environment without changes. Another alternative is the '''LLP64''' model, which maintains compatibility with 32-bit code by leaving both int and long as 32-bit. "LL" refers to the "long long integer" type, which is at least 64 bits on all platforms, including 32-bit environments.

{|class="wikitable"
|+64-bit data models
|-
! Data model
! short (integer)
! int
! long (integer)
! long long
! pointers/size_t
! Sample operating systems
|-
! LLP64/<br />IL32P64
| 16
| 32
| 32
| 64
| 64
| [[Microsoft Windows]] (X64/IA-64)
|-
! LP64/<br />I32LP64
| 16
| 32
| 64
| 64
| 64
| Most [[Unix]] and [[Unix-like]] systems, e.g. [[Solaris (operating system)|Solaris]], [[Linux]], and [[Mac OS X]]
|-
! ILP64
| 16
| 64
| 64
| 64
| 64
| [[HAL Computer Systems]] port of Solaris to [[SPARC64]]
|-
! SILP64
| 64
| 64
| 64
| 64
| 64
| [[Unicos]]
|}

Many 64-bit compilers today use the '''LP64''' model (including Solaris, [[AIX]], [[HP-UX]], Linux, [[Mac OS X]], [[FreeBSD]], and IBM [[z/OS]] native compilers). Microsoft's [[Visual C++]] compiler uses the '''LLP64''' model. The disadvantage of the LP64 model is that storing a long into an int may overflow. On the other hand, casting a pointer to a long will work. In the LLP model, the reverse is true. These are not problems which affect fully standard-compliant code but code is often written with implicit assumptions about the widths of integer types.

Note that a programming model is a choice made on a per-compiler basis, and several can coexist on the same OS. However, the programming model chosen as the primary model for the OS API typically dominates.

Another consideration is the data model used for [[Device driver|driver]]s. Drivers make up the majority of the operating system code in most modern operating systems (although many may not be loaded when the operating system is running). Many drivers use pointers heavily to manipulate data, and in some cases have to load pointers of a certain size into the hardware they support for [[Direct memory access|DMA]]. As an example, a driver for a 32-bit PCI device asking the device to DMA data into upper areas of a 64-bit machine's memory could not satisfy requests from the operating system to load data from the device to memory above the 4 gigabyte barrier, because the pointers for those addresses would not fit into the DMA registers of the device. This problem is solved by having the OS take the memory restrictions of the device into account when generating requests to drivers for DMA, or by using an [[IOMMU]].

==Current 64-bit microprocessor architectures==
64-bit [[processor architecture|microprocessor architectures]] ({{As of|2010|lc=on}}) include:
* The 64-bit extension created by [[Advanced Micro Devices|AMD]] to Intel's [[x86]] architecture (later licensed by Intel); commonly known as "[[x86-64]]", "AMD64", or "x64":
** AMD's [[AMD64]] extensions (used in [[Athlon 64]], [[Opteron]], [[Sempron]], [[Turion 64]], [[Phenom (processor)|Phenom]], [[Athlon II]] and [[Phenom II]] processors)
** [[Intel]]'s [[Intel 64]] extensions (used in newer [[Celeron]], [[Pentium 4]], [[Pentium D]], [[Xeon]], [[Core 2]], [[Intel Core i3|Core i3]], [[Intel Core i5|Core i5]], [[Intel Core i7|Core i7]], and [[Intel Atom|Atom]] processors)
** [[VIA Technologies]]' 64-bit extensions, used in the [[VIA Nano]] processors
* [[Power Architecture]]:
** IBM's [[POWER6]] processor
** IBM's [[PowerPC 970]] processor
** The [[Cell Broadband Engine]] used in the [[PlayStation 3]], designed by IBM, [[Toshiba]] and [[Sony]], combines a 64-bit Power architecture processor with seven or eight Synergistic Processing Elements.
** IBM's "[[Xenon (processor)|Xenon]]" processor used in the [[Microsoft]] [[Xbox 360]] comprises three 64-bit PowerPC cores.
* [[SPARC]] V9 architecture:
** [[Sun Microsystems|Sun]]'s [[UltraSPARC]] processors
** [[Fujitsu]]'s [[SPARC64]] processors
* IBM's [[z/Architecture]], used by IBM zSeries and [[System z9]] [[IBM mainframes|mainframes]], a 64-bit version of the [[ESA/390]] architecture
* Intel's [[IA-64]] architecture (used in [[Itanium]] processors)
* [[MIPS Technologies]]' [[MIPS architecture|MIPS64 architecture]]

Most 64-bit processor architectures can execute code for the 32-bit version of the architecture natively without any performance penalty.{{Citation needed|date=September 2010}} This kind of support is commonly called ''bi-arch support'' or more generally ''multi-arch support''.

==Images==
In digital imaging, 64-bit refers to [[Deep Color|48-bit images]] with a [[16-bit]] [[Alpha compositing|alpha channel]].

==See also==
* [[Computer memory]]

==References==
{{Reflist}}

==External links==
*Andrey Karpov. [http://software.intel.com/en-us/articles/collection-of-examples-of-64-bit-errors-in-real-programs/ A Collection of Examples of 64-bit Errors in Real Programs]
*[http://software.intel.com/en-us/articles/lessons-on-development-of-64-bit-cc-applications/ Lessons on development of 64-bit C/C++ applications]
*[http://www.unix.org/version2/whatsnew/lp64_wp.html 64-Bit Programming Models: Why LP64?]
*[http://www.codeproject.com/KB/system/AMD64_EM64T_architectur.aspx AMD64 (EM64T) architecture]
*[http://www.64bitdrivers.com/ Large list of 64 bit drivers for x64 operating systems]
*[http://www.igorware.com/64bit-checker Detect if you have 64-bit operating system]

{{FOLDOC}}

{{CPU technologies}}

[[ca:64 bits]]
[[cs:64bitový]]
[[de:64-Bit]]
[[et:64-bitine protsessor]]
[[es:64 bits]]
[[fr:Processeur 64 bits]]
[[ko:64??]]
[[it:64 bit]]
[[lv:64 biti]]
[[ms:64-bit]]
[[ja:64???]]
[[pl:Architektura 64-bitowa]]
[[pt:64 bits]]
[[zh:64??]]</text>
</page>
<page>
<id>189</id>
<title>6in4</title>
<text>{{IPv6 transition mechanisms}}
'''6in4''' is an Internet [[IPv6#Transition mechanisms|transition mechanism]] for migrating from [[IPv4|Internet Protocol version 4]] (IPv4) to [[IPv6]]. 6in4 uses [[Tunneling protocol|tunneling]] to encapsulate IPv6 traffic over explicitly-configured IPv4 links as defined in RFC 4213 (obsoletes RFC 2893 and RFC 1933). The 6in4 traffic is sent over the IPv4 Internet inside IPv4 packets whose IP headers have the [[IP protocol number]] set to 41. This protocol number is specifically designated for ''IPv6 encapsulation''.<ref>{{cite web |url=http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xml |title=Protocol Numbers}}</ref> In 6in4, the IPv4 packet header is immediately followed by the IPv6 packet being carried. This means that the encapsulation overhead is simply the size of the IPv4 header of 20 bytes. With an Ethernet [[Maximum Transmission Unit]] (MTU) of 1500 bytes, one can thus send IPv6 packets of 1480 bytes without fragmentation. 6in4 tunneling is also referred to as ''proto-41 static'' because the endpoints are configured statically. Although 6in4 tunnels are generally manually configured, for example the utility [[AICCU]] can configure tunnel parameters automatically after retrieving information from a [[Tunnel Information and Control Protocol]] (TIC) server. 

There are similarly named methods, namely [[6to4]] or [[6over4]], which describe a different mechanism. The method [[6to4]] makes use of proto-41 too, but instead of static configuration of the endpoints, the endpoint IPv4 address information is derived from the IPv6 addresses within the IPv6 packet header.

==Network address translators (NAT)==
When an endpoint of a 6in4 tunnel is behind a [[Network Address Translation|NAT]], one can in some cases still make use of the [[DMZ (computing)|DMZ]] feature of a NAT router. The NAT router will then forward all incoming proto-41 packets to the configured host, thus making the tunnel work. Some NAT devices even allow transparent operation of 6in4.

==Dynamic 6in4 tunnels and heartbeat==
Even though 6in4 tunnels are static in nature, with the help of for example the heartbeat protocol<ref name=heartbeat>[http://www.sixxs.net/tools/heartbeat/ Heartbeat Protocol], J. Massar and P. van Pelt</ref> one can still have dynamic tunnel endpoints. The heartbeat protocol signals the other side of the tunnel with its current endpoint location. A tool such as [[AICCU]] can then update the endpoints, in effect making the endpoint dynamic while still using the 6in4 protocol. These kind of tunnels are generally called 'proto-41 heartbeat' tunnels.

==Security issues==
The 6in4 protocol has no security features, thus one can easily inject IPv6 packets by [[IP_address_spoofing|spoofing]] the source IPv4 address of a tunnel endpoint and sending it to the other endpoint. This problem can partially be solved by implementing [[network ingress filtering]] or with [[IPsec]]. Another solution is to use a secure protocol such as [[AYIYA]] or other tunneling methods that compute digital signatures for each packet thus facilitating verification of packet authenticity.

The mentioned packet injection loophole of 6in4 was exploited for a research benefit in a method called ''IPv6 Tunnel Discovery'' <ref name=tundisco>[http://www.dia.uniroma3.it/~compunet/tunneldiscovery IPv6 Tunnel Discovery], L. Colitti, G. Di Battista, and M. Patrignani</ref> which allowed the researchers to discover operating IPv6 tunnels around the world.

==References==
* RFC 1933, Transition Mechanisms for IPv6 Hosts and Routers, R. Gilligan and E. Nordmark, [[1996]]
{{refs}}

==External links==
*[http://www.sixxs.net/faq/connectivity/?faq=ossetup How do I configure my machine to setup an IPv6 in IPv4 tunnel]
*[http://wiki.debian.org/DebianIPv6 6in4 and other tunnel setups on Debian]
*[http://www.cs.bell-labs.com/magic/man2html/8/6in4 6in4 setup on Plan9 OS]

[[Category:Tunneling protocols]]
[[Category:IPv6 transition technologies]]
[[Category:Network protocols]]

[[fr:6in4]]
[[zh:6in4]]</text>
</page>
<page>
<id>196</id>
<title>8-bit</title>
<text>{{about|computer architecture}}
{{redirect|IA-8|the former congressional district|Iowa's 8th congressional district}}
{{Unreferenced|date=October 2009}}
{{N-bit|8|(1 octet)}}

Eight-bit CPUs normally use an [[octet (computing)|8-bit]] [[data bus]] and a [[16-bit]] address bus which means that their [[address space]] is limited to 64 [[kibibyte|KiB]].  This is not a "natural law", however, so there are exceptions.

The first widely adopted 8-bit [[microprocessor]] was the [[Intel 8080]], being used in many hobbyist computers of the late 1970s and early 1980s, often running the [[CP/M]] [[operating system]].  The [[Zilog Z80]] (compatible with the 8080) and the [[Motorola 6800]] were also used in similar computers.  The Z80 and the [[MOS Technology 6502]] 8-bit CPUs were widely used in [[home computer]]s and [[game console]]s of the '70s and '80s.  Many 8-bit CPUs or [[microcontroller]]s are the basis of today's ubiquitous [[embedded systems]].  

There are 2<sup>8</sup> (256) possible values for 8 bits.

The first microprocessors had a [[4-bit]] word length and were developed around 1970. The first commercial microprocessor was the [[Binary coded decimal|BCD-based]] [[Intel 4004]] (1971), developed for calculator applications. The first commercial 8-bit processor was the [[Intel 8008]] (1972) which was originally intended for [[intelligent terminal]]s. Most competitors to Intel started off with such character oriented 8-bit microprocessors. Modernized variants of these 8-bit machines are still one of the most common types of processor in embedded systems.

==List of 8-bit CPUs==
A [[CPU]] can be classified on the basis of the [[data]] it can access in a single [[Instruction (computer science)|operation]]. An 8-bit processor can access 8 bits of data in a single operation, as opposed to a [[16-bit]] processor, which can access 16 bits of data in a single operation.
8 Bits
''Examples of 8-bit processors (very incomplete):''
* [[Freescale]]
** [[Freescale 68HC08]]
** [[Freescale 68HC11]]
* [[Intel]]
** [[Intel 8008]]
** [[Intel 8080]] (''8008 source compatible'')
** [[Intel 8085]] (''8080 binary compatible'')
** [[Intel 8051]] (''Harvard architecture'')
* [[RCA]]
** [[RCA 1802]]
* [[Zilog]]
** [[Zilog Z80]]  (''8080 binary compatible'')
** [[Zilog Z180]]  (''Z80 binary compatible'')
** [[Zilog Z8]]
** [[Zilog eZ80]]  (''Z80 binary compatible'')
* [[Motorola]]
** [[Motorola 6800]]
** Motorola 6803
** [[Motorola 6809]] (''partially 6800 compatible'')
* [[MOS Technology]]
** [[MOS Technology 6502]]
* [[PIC microcontroller]]
** [[PIC microcontroller|Microchip PIC10]]
** [[PIC microcontroller|Microchip PIC12]]
** [[PIC microcontroller|Microchip PIC16]]
** [[PIC microcontroller|Microchip PIC18]]
* Others
** [[Atmel AVR]] family microcontrollers
** [http://www.am.necel.com/micro/product/all_8_general.html/ NEC 78K0] series microcontrollers

== See also ==
* [[History of video game consoles (third generation)]]
* [[Vasm]], a free assembler


{{CPU technologies}}

[[ca:8 bits]]
[[cs:8bitový]]
[[de:8-Bit-Architektur]]
[[es:8 bits]]
[[eo:8-bita arkitekturo]]
[[fr:8-bits]]
[[ko:8??]]
[[it:8 bit]]
[[ms:8-bit]]
[[ja:8???]]
[[pl:Architektura 8-bitowa]]
[[pt:8 bits]]
[[sv:8-bitars CPU]]
[[zh:8??]]</text>
</page>
<page>
<id>203</id>
<title>8A4 class ROUV</title>
<text>{{Technical|date=September 2009}}
The '''8A4 class ROUV''' is a [[remotely operated underwater vehicle]] (ROUV), a Chinese ROUV used to perform various underwater tasks ranging from oil platform service to salvage and rescue missions. The 8A4 is a member of a series of related ROUVs developed in the [[People's Republic of China]], with improved versions designed using earlier versions or commercially available versions as a starting point. The predecessor to the 8A4 is the RECON-IV, which is an improved version of the American RECON-III. The 8A4 is an improved version of the American AMETEK 2006. The 7B8 is an improved version of the 8A4.<ref>[http://www.shtong.gov.cn/node2/node2245/node76988/node76993/node77007/node77103/userobject1ai96372.html 8A4 ROUV (in Chinese)]</ref>

==RECON-IV ROUV==
The origin of 8A4 traces back to the RECON-IV ROUV.  Since the 1980s, China begun to operate ROUVs to support its offshore oil drill operations and salvage operations, such as Hysub 10 ROUVs and Hysub 40 ROUVs supplied by the Canadian firm International Submarine Engineering in [[British Columbia]].  Hysub 40 ROUVs was deployed by [[Shanghai]] Salvage Bureau and proved its worth not only in oil drilling operations, but also in salvage and rescue missions.  However, these foreign built ROUVs were simply too expensive to be adopted in significant numbers, and the salvage operational needs of the [[People's Liberation Army Navy]] (PLAN) could not be met.  As a result, China decided to develop its own version of ROUVs with similar capability.

One of the first ROUVs domestically built in China was the RECON-IV ROUV, which is based on the American RECON-III ROUV built by Perry Oceanographic (later purchased by [[Lockheed Martin]]) based in [[Riviera Beach, Florida]].  Based on the technology transfer, the [[Shenyang Institute of Automation]] of the [[Chinese Academy of Science]] and Perry Oceanographic jointly developed the RECON-IV ROUV, which was adopted by People's Liberation Army Navy for salvage and rescue operations.  However, like earlier ROUVs, the RECON-IV is primarily designed for civilian operations and had its limitations in performing certain military operations, such as cutting through specialized steel used to build certain compartments of submarines that were stranded, and opening some valves on sinking vessels, thus a more capable follow-up was needed.

==8A4 ROUV==
To develop a ROUV that meets the special needs of military salvage and rescue operations that was not commercially available on the market, China organized a design team in the late 1980s including the 702nd Research Institute of [[China Shipbuilding Industry Corporation]] (CSIC), the Shipbuilding Engineering Institute of [[Harbin Engineering University]] (HEU), and the Institute of Underwater Engineering of [[Shanghai Jiao Tong University]] (SHJTU), with a professor of SHJTU, Mr. Xu Huangnan (???), and the future deputy general designer of [[Explorer AUV]], and the future general designer of other Chinese unmanned underwater vehicles including [[Sea Dragon class ROUV]], [[CR class AUV]], and [[SJT class ROUV]], was named as the general designer of the 8A4 ROUV.  The goal was to develop an ROUV primarily used for military applications, while also capable of performing civilian tasks as the secondary mission.

To shorten the time needed, the decision was made to develop an ROUV based on existing technology by first selecting a system available on the market with performance closest to the requirements, and then improving the commercially available system based on the experienced gained from the RECON-IV ROUV developed earlier. The AMETEK 2006, an American ROUV used to support offshore oil drilling operations, was selected because it was the one that met the requirements best, while also being the one China could purchase on the international market at the time.  However, despite meeting Chinese requirements better than all of the rest available systems, it was far from getting close, so extensive improvements were needed.  One of the major upgrades needed was the complete redesign and incorporation of two manipulators that were required to operate around half a dozen tools underwater.<ref>[http://ch.hust.edu.cn/xsky/news.asp?id=91 Manipulators of the 8A4 ROUV (in Chinese)]</ref>  These manipulators were completed by the main subcontractor, the [[Huazhong University of Science and Technology]] (HUST), and eventually won 1st Place in the Scientific and Technological Advancement Award of the China Shipbuilding Industry Corporation in 1996.

The first 8A4 ROUV completed sea trials in 1993 and subsequently entered service.  During its evaluation, the 8A4 ROUV successfully opened a submarine compartment constructed of special steel, a feat no other ROUV in Chinese inventory could achieve, and the 8A4 was thus dubbed as the most capable salvage and rescue ROUV in Chinese service. The 8A4 is capable of operating at a depth of up to 600 meters, with a cruising radius of up to 150 meters, and it was one of the first ROUVs in Chinese inventory to incorporate a Tether Management System (TMS).  In 1996, the 8A4 ROUV won 3rd Place in the Scientific and Technological Advancement Award of the China Shipbuilding Industry Corporation.  Despite the success and awards received, the 8A4 class ROUV is severely limited in its capability during actual deployment due to financial constraints. With the exception of the very first unit, all of the remaining 8A4 ROUVs have their TMS deleted due to the budget cuts, resulting in significant reduction in performance.  For example, the maximum operational depth is reduced by more than half. It is not until the early 2010s during the scheduled overhaul would the TMS be planned to be reintroduced to all the 8A4 ROUVs to achieve their full capability.

==7B8 ROUV==
The 7B8 ROUV is a further development of the 8A4 ROUV, and it is a Chinese transition from ROUV to [[Autonomous underwater vehicle]] (AUV).  Designed by the Shipbuilding Engineering Institute of [[Harbin Engineering University]] (HEU) based on the experience of the 8A4 ROUV with Mr. Deng Sanrui (???) as the general designer, the 7B8 ROUV was first revealed to the Chinese public in [[Beijing]] during the National Science and Technology Exhibition of the [[People's Liberation Army]] at the [[Military Museum of the Chinese People's Revolution]] in 1995 while still under development, and members of the [[Central Military Commission (People's Republic of China)|Central Military Commission]] headed by General [[Liu Huaqing]] was among those special guests.

The 7B8 ROUV is unique in that in comparison to other Chinese ROUVs, it can also operate independently as an AUV in addition to being operated remotely via tether/cable like ordinary ROUVs. The 7B8 first completed its trials as an ROUV in the 1990s and in 2000. Then it completed AUV trials including autonomously searching underwater targets and autonomous underwater work, and subsequently entered service.  When the 7B8 is operated as an AUV, the maximum operating depth is less than when operating as an ROUV.

Specifications:
* Length: 4.33 meters
* Width: 1.27 meters
* Height: 1.76 meters
* Weight: 1.69 tons
* Operating depth: 100 meters (when operating as an [[Autonomous underwater vehicle|AUV]])

==References==
{{Reflist}}

==External links==
* [http://www.ise.bc.ca/hysub10.html Hysub 10 ROUVs] (Canada)
* [http://www.ise.bc.ca/hysub40.html Hysub 40 ROUVs] (Canada)
* [http://www.ise.bc.ca/ International Submarine Engineering] (Canada)
* [http://www.sia.ac.cn/en/ Shenyang Institute of Automation] (??????)
* [http://english.hrbeu.edu.cn Shipbuilding Engineering Institute] (??????)
* [http://www2.sjtu.edu.cn/newweb/english/admission/schools/15.htm Institute of Underwater Engineering] (???????)

{{DEFAULTSORT:8a4 Class Rouv}}
[[Category:Diving equipment]]
[[Category:Unmanned vehicles]]
[[Category:Robotic submarines]]</text>
</page>
<page>
<id>204</id>
<title>8BF</title>
<text>{{Unreferenced|date=February 2007}}
'''8BF''', sometimes known as a '''Photoshop plugin''', is a file format for [[plugin]]s used by many [[Comparison of raster graphics editors|raster graphics editors]] including [[Adobe Photoshop]], [[Helicon Filter]] and [[Corel Paint Shop Pro]]. 8BF files can be opened with these programs and act like mini-editors which can modify images for use in the parent program.

==Support==
8BF plugins are generally intended specifically for Photoshop. While some other programs are designed to support this file type, there are known issues with opening many 8BF plugins in programs other than Photoshop.

==See also==
*[[Adobe Photoshop]]
*[[Plugin]]
*[[File format]]

{{DEFAULTSORT:8bf}}
[[Category:Computer file formats]]
[[Category:Digital photography]]


{{Multimedia-software-stub}}
{{Photo-stub}}</text>
</page>
<page>
<id>214</id>
<title>A* search algorithm</title>
<text>{{dablink|For other uses of "A*" and "A star", see [[A* (disambiguation)]].}}
{{graph search algorithm}}
In [[computer science]], '''A*''' (pronounced "A star") is a [[computer algorithm]] that is widely used in [[pathfinding]] and [[graph traversal]], the process of plotting an efficiently traversable path between points, called nodes. Noted for its [[Computer performance|performance]] and accuracy, it enjoys widespread use. [[Peter E. Hart|Peter Hart]], [[Nils Nilsson (researcher)|Nils Nilsson]], and [[Bertram Raphael]] first described the algorithm in 1968<ref>{{cite journal
 | first = P. E.
 | last = Hart
 | coauthors = Nilsson, N. J.; Raphael, B.
 | title = A Formal Basis for the Heuristic Determination of Minimum Cost Paths
 | journal = [[Institute of Electrical and Electronics Engineers|IEEE]] Transactions on Systems Science and Cybernetics SSC4
 | issue = 2
 | pages = 100–107
 | year = 1968
 | doi = 10.1109/TSSC.1968.300136
 | volume = 4
 }}
</ref>. It is an extension of Edsger Dijkstra's [[Dijkstra's algorithm|1959 algorithm]]. A* achieves better performance (with respect to time) by using [[heuristics]].

==Description==

A* uses a [[best-first search|best-first]] search and finds the least-cost path from a given initial [[node (graph theory)|node]] to one [[goal node]] (out of one or more possible goals).

It uses a distance-plus-cost [[heuristic]] function (usually denoted <math>f(x)</math>) to determine the order in which the search visits nodes in the tree. The distance-plus-cost heuristic is a sum of two functions: 
* the path-cost function, which is the cost from the starting node to the current node (usually denoted <math>g(x)</math>)
* and an [[Admissible heuristic|admissible]] "heuristic estimate" of the distance to the goal (usually denoted <math>h(x)</math>).

The <math>h(x)</math> part of the <math>f(x)</math> function must be an [[admissible heuristic]]; that is, it must not overestimate the distance to the goal. Thus, for an application like [[routing]], <math>h(x)</math> might represent the straight-line distance to the goal, since that is physically the smallest possible distance between any two points or nodes.

If the [[heuristic]] ''h'' satisfies the additional condition <math>h(x) \le d(x,y) + h(y)</math> for every edge ''x, y'' of the graph (where ''d'' denotes the length of that edge), then ''h'' is called [[Consistent heuristic|monotone, or consistent]]. In such a case, A* can be implemented more efficiently—roughly speaking, no node needs to be processed more than once (see ''closed set'' below)—and A* is equivalent to running [[Dijkstra's algorithm]] with the [[reduced cost]] <math>d'(x, y) := d(x, y) - h(x) + h(y)</math>.

Note that A* has been generalized into a bidirectional heuristic search algorithm; see [[bidirectional search]].

==History==
In 1964 Nils Nilsson invented a heuristic based approach to increase the speed of Dijkstra's algorithm. This algorithm was called A1. In 1967 Bertram Raphael made dramatic improvements upon this algorithm, but failed to show optimality. He called this algorithm A2. Then in 1968 Peter E. Hart introduced an argument that proved A2 was optimal when using a consistent heuristic with only minor changes. His proof of the algorithm also included a section that showed that the new A2 algorithm was the best algorithm possible given the conditions. He thus named the new algorithm in [[Kleene star]] syntax to be the algorithm that starts with A and includes all possible version numbers or A*.
<ref>http://www.eecs.berkeley.edu/~klein/
</ref>

==Concepts==

As A* traverses the graph, it follows a path of the lowest ''known'' cost, keeping a sorted [[priority queue]] of alternate path segments along the way. If, at any point, a segment of the path being traversed has a higher cost than another encountered path segment, it abandons the higher-cost path segment and traverses the lower-cost path segment instead. This process continues until the goal is reached.

==Process==

[[Image:A+ Pathfinding Algorithm.png|thumb|A single-step simulation]]
Like all [[informed search algorithm]]s, it first searches the routes that ''appear'' to be most likely to lead towards the goal. What sets A* apart from a [[greedy algorithm|greedy]] [[best-first search]] is that it also takes the distance already traveled into account; the <math>g(x)</math> part of the heuristic is the cost from the start, not simply the local cost from the previously expanded node.

Starting with the initial node, it maintains a [[priority queue]] of nodes to be traversed, known as the ''open set'' (not to be confused with [[open set]]s in [[topology]]). The lower <math>f(x)</math> for a given node <math>x</math>, the higher its priority. At each step of the algorithm, the node with the lowest <math>f(x)</math> value is removed from the queue, the <math>f</math> and <math>h</math> values of its neighbors are updated accordingly, and these neighbors are added to the queue. The algorithm continues until a goal node has a lower <math>f</math> value than any node in the queue (or until the queue is empty). (Goal nodes may be passed over multiple times if there remain other nodes with lower <math>f</math> values, as they may lead to a shorter path to a goal.) The <math>f</math> value of the goal is then the length of the shortest path, since <math>h</math> at the goal is zero in an admissible heuristic. If the actual shortest path is desired, the algorithm may also update each neighbor with its immediate predecessor in the best path found so far; this information can then be used to reconstruct the path by working backwards from the goal node. Additionally, if the heuristic is ''monotonic'' (or [[Consistent heuristic|consistent]], see below), a ''closed set'' of nodes already traversed may be used to make the search more efficient.

==Pseudocode==

The following [[pseudocode]] describes the algorithm:
<source lang="matlab">
 function A*(start,goal)
     closedset := the empty set                 // The set of nodes already evaluated.     
     openset := set containing the initial node // The set of tentative nodes to be evaluated.
     came_from := the empty map                 // The map of navigated nodes.
     g_score[start] := 0                        // Distance from start along optimal path.
     h_score[start] := heuristic_estimate_of_distance(start, goal)
     f_score[start] := h_score[start]           // Estimated total distance from start to goal through y.
     while openset is not empty
         x := the node in openset having the lowest f_score[] value
         if x = goal
             return reconstruct_path(came_from, came_from[goal])
         remove x from openset
         add x to closedset
         foreach y in neighbor_nodes(x)
             if y in closedset
                 continue
             tentative_g_score := g_score[x] + dist_between(x,y)
             
             if y not in openset
                 add y to openset
                 tentative_is_better := true
             elseif tentative_g_score < g_score[y]
                 tentative_is_better := true
             else
                 tentative_is_better := false
             if tentative_is_better = true
                 came_from[y] := x
                         
                 g_score[y] := tentative_g_score
                 h_score[y] := heuristic_estimate_of_distance(y, goal)
                 f_score[y] := g_score[y] + h_score[y]
     return failure

 function reconstruct_path(came_from, current_node)
     if came_from[current_node] is set
         p = reconstruct_path(came_from, came_from[current_node])
         return (p + current_node)
     else
         return current_node
</source>

The closed set can be omitted (yielding a tree search algorithm) if a solution is guaranteed to exist, or if the algorithm is adapted so that new nodes are added to the open set only if they have a lower <math>f</math> value than at any previous iteration.

===Example===
An example of A star (A*) algorithm in action where nodes are cities connected with roads and h(x) is the straight-line distance to target point: 

[[File:AstarExample.gif|An example of A star (A*) algorithm in action (nodes are cities connected with roads, h(x) is the straight-line distance to target point) Green: Start, Blue: Target, Orange: Visited]]

'''Key:''' green: start; blue: goal; orange: visited

'''Note:''' This example uses a comma as the [[decimal separator]].

==Properties==
Like [[breadth-first search]], A* is ''complete'' and will always find a solution if one exists.

If the heuristic function <math>h</math> is [[Admissible heuristic|admissible]], meaning that it never overestimates the actual minimal cost of reaching the goal, then A* is itself admissible (or ''optimal'') if we do not use a closed set. If a closed set is used, then <math>h</math> must also be ''monotonic'' (or [[Consistent heuristic|consistent]]) for A* to be optimal. This means that for any pair of adjacent nodes <math>x</math> and <math>y</math>, where <math>d(x,y)</math> denotes the length of the edge between them, we must have:

:<math>h(x) \le d(x,y) + h(y)</math>

This ensures that for any path <math>X</math> from the initial node to <math>x</math>:

:<math>L(X) + h(x) \le L(X) + d(x,y) + h(y) = L(Y) + h(y)</math>

where <math>L(\cdot)</math> denotes the length of a path, and <math>Y</math> is the path <math>X</math> extended to include <math>y</math>. In other words, it is impossible to decrease (total distance so far + estimated remaining distance) by extending a path to include a neighboring node. (This is analogous to the restriction to nonnegative edge weights in [[Dijkstra's algorithm]].) Monotonicity implies admissibility when the heuristic estimate at any goal node itself is zero, since (letting <math>P = (f,v_1,v_2,\ldots,v_n,g)</math> be a shortest path from any node <math>f</math> to the nearest goal <math>g</math>):

:<math>h(f) \le d(f,v_1) + h(v_1) \le d(f,v_1) + d(v_1,v_2) + h(v_2) \le \ldots \le L(P) + h(g) = L(P)</math>

A* is also optimally efficient for any heuristic <math>h</math>, meaning that no algorithm employing the same heuristic will expand fewer nodes than A*, except when there are multiple partial solutions where <math>h</math> exactly predicts the cost of the optimal path. Even in this case, for each graph there exists some order of breaking ties in the priority queue such that A* examines the fewest possible nodes.

===Special cases===
[[Dijkstra's algorithm]], as another example of a uniform-cost search search algorithm, can be viewed as a special case of A* where <math>h(x) = 0</math> for all <math>x</math>. General [[depth-first search]] can be implemented using the A* by considering that there is a global counter ''C'' initialized with a very large value. Every time we process a node we assign ''C'' to all of its newly discovered neighbors. After each single assignment, we decrease the counter ''C'' by one. Thus the earlier a node is discovered, the higher its <math>h(x)</math> value.  It should be noted, however, that both Dijkstra's algorithm and depth-first search can be implemented more efficiently without including a <math>h(x)</math> value at each node.

===Implementation details===
There are a number of simple optimizations or implementation details that can significantly affect the performance of an A* implementation.  The first detail to note is that the way the priority queue handles ties can have a significant effect on performance in some situations.  If ties are broken so the queue behaves in a [[LIFO (computing)|LIFO]] manner, A* will behave like [[depth-first search]] among equal cost paths. 

When a path is required at the end of the search, it is common to keep with each node a reference to that node's parent.  At the end of the search these references can be used to recover the optimal path.  If these references are being kept then it can be important that the same node doesn't appear in the priority queue more than once (each entry corresponding to a different path to the node, and each with a different cost).  A standard approach here is to check if a node about to be added already appears in the priority queue.  If it does, then the priority and parent pointers are changed to correspond to the lower cost path.  When finding a node in a queue to perform this check, many standard implementations of a [[Heap (data structure)|min-heap]] require <math>O(n)</math> time.  Augmenting the heap with a [[hash table]] can reduce this to constant time.

==Admissibility and optimality{{anchor|Admissibility and Optimality}}==
A* is admissible and considers fewer nodes than any other admissible search algorithm with the same heuristic. This is because A* uses an "optimistic" estimate of the cost of a path through every node that it considers—optimistic in that the true cost of a path through that node to the goal will be at least as great as the estimate. But, critically, as far as A* "knows", that optimistic estimate might be achievable.

Here is the main idea of the proof:

When A* terminates its search, it has found a path whose actual cost is lower than the estimated cost of any path through any open node. But since those estimates are optimistic, A* can safely ignore those nodes. In other words, A* will never overlook the possibility of a lower-cost path and so is admissible.

Suppose now that some other search algorithm B terminates its search with a path whose actual cost is ''not'' less than the estimated cost of a path through some open node. Based on the heuristic information it has, Algorithm B cannot rule out the possibility that a path through that node has a lower cost. So while B might consider fewer nodes than A*, it cannot be admissible. Accordingly, A* considers the fewest nodes of any admissible search algorithm.

This is only true if both:

* A* uses an [[admissible heuristic]]. Otherwise, A* is not guaranteed to expand fewer nodes than another search algorithm with the same heuristic. See (Generalized best-first search strategies and the optimality of A*, Rina Dechter and Judea Pearl, 1985<ref>{{cite journal
 | first = Rina
 | last = Dechter
 | coauthors = Judea Pearl
 | title = [http://portal.acm.org/citation.cfm?id=3830&coll=portal&dl=ACM Generalized best-first search strategies and the optimality of A*]
 | journal = [[Journal of the ACM]]
 | volume = 32
 | issue = 3
 | pages = 505–536
 | year = 1985
 | doi = 10.1145/3828.3830 
 }}
</ref>)

* A* solves only one search problem rather than a series of similar search problems. Otherwise, A* is not guaranteed to expand fewer nodes than [[incremental heuristic search]] algorithms. See (Incremental heuristic search in artificial intelligence, Sven Koenig, Maxim Likhachev, Yaxin Liu and David Furcy, 2004<ref>{{cite journal
 | first = Sven
 | last = Koenig
 | coauthors = Maxim Likhachev, Yaxin Liu, David Furcy
 | title = [http://portal.acm.org/citation.cfm?id=1017140 Incremental heuristic search in AI]
 | journal = [[AI Magazine]]
 | volume = 25
 | issue = 2
 | pages = 99–112
 | year = 2004
 }}
</ref>)

==Complexity==
The [[computational complexity theory|time complexity]] of A* depends on the heuristic. In the worst case, the number of nodes expanded is [[exponential time|exponential]] in the length of the solution (the shortest path), but it is [[polynomial time|polynomial]] when the search space is a tree, there is a single goal state, and the heuristic function ''h'' meets the following condition:

:<math>|h(x) - h^*(x)| = O(\log h^*(x))</math>

where <math>h^*</math> is the optimal heuristic, the exact cost to get from <math>x</math> to the goal. In other words, the error of ''h'' will not grow faster than the [[logarithm]] of the “perfect heuristic” <math>h^*</math> that returns the true distance from ''x'' to the goal (see Pearl 1984<ref>{{cite book
 | first = Judea
 | last = Pearl
 | title = Heuristics: Intelligent Search Strategies for Computer Problem Solving
 | publisher = Addison-Wesley
 | year = 1984
 | isbn = 0-201-05594-5
 }}</ref> and also Russell and Norvig 2003, p. 101<ref>{{cite book
 | first = S. J.
 | last = Russell
 | coauthors = Norvig, P.
 | title = [[Artificial Intelligence: A Modern Approach]]
 | year = 2003
 | pages = 97–104
 | isbn = 0-13-790395-2
 | publisher = Prentice Hall
 | location = Upper Saddle River, N.J.
 }}</ref>)

==Variants of A*==
*[[D*]]
*[[Incremental heuristic search|D* Lite]]
*[[Any-angle path planning|Field D*]]
*[[IDA*]]
*[[Incremental heuristic search|Fringe Saving A* (FSA*)]]
*[[Incremental heuristic search|Generalized Adaptive A* (GAA*)]]
*[[Incremental heuristic search|Lifelong Planning A* (LPA*)]]
*[[Any-angle path planning|Theta*]]
*[[SMA*]]

==References==
* {{cite journal
 | first = P. E.
 | last = Hart
 | coauthors = Nilsson, N. J.; Raphael, B.
 | title = Correction to "A Formal Basis for the Heuristic Determination of Minimum Cost Paths"
 | journal = [[Association for Computing Machinery|SIGART]] Newsletter
 | volume = 37
 | pages = 28–29
 | year = 1972
 }}
* {{cite book
 | first = N. J.
 | last = Nilsson
 | title = Principles of Artificial Intelligence
 | publisher = Tioga Publishing Company
 | location = Palo Alto, California
 | year = 1980
 | isbn = 0935382011
 }}
* {{cite book
 | first = Judea
 | last = Pearl
 | title = Heuristics: Intelligent Search Strategies for Computer Problem Solving
 | publisher = Addison-Wesley
 | year = 1984
 | isbn = 0-201-05594-5
 }}
{{Reflist}}

==External links==
* [http://theory.stanford.edu/~amitp/GameProgramming/ Clear visual A* explanation, with advice and thoughts on path-finding]
* Variation on A* called [http://www.cs.ualberta.ca/~mmueller/ps/hpastar.pdf Hierarchical Path-Finding A* (HPA*)]
* [http://code.google.com/p/jianwikis/wiki/AStarAlgorithmForPathPlanning A* Algorithm for Path Planning in Java]
* [http://www.stackframe.com/software/PathFinder A Java library for path finding with A* and example applet]
* [http://www.codeproject.com/KB/recipes/fast_astar_2D_algorithm.aspx A fast, generic C# implementation of A* on 2D-Grids]
* [http://code.google.com/p/a-star-algorithm-implementation A fast, memory efficient C++ implementation of A*]
* [https://code.google.com/p/straightedge/ StraightEdge] open source java 2D path finding and lighting project focused on performance. Includes applet demos.

{{DEFAULTSORT:A Search Algorithm}}
[[Category:Graph algorithms]]
[[Category:Routing algorithms]]
[[Category:Search algorithms]]
[[Category:Combinatorial optimization]]
[[Category:Game artificial intelligence]]
[[Category:Articles with example pseudocode]]

{{Link GA|de}}

[[ar:???????? ????? ??????? ??????]]
[[cs:A*]]
[[de:A*-Algorithmus]]
[[es:Algoritmo de búsqueda A*]]
[[fr:Algorithme A*]]
[[ko:A* ????]]
[[it:A*]]
[[nl:A*-algoritme]]
[[ja:A*]]
[[pl:Algorytm A*]]
[[pt:Algoritmo A*]]
[[ru:???????? ?????? A*]]
[[fi:A*-algoritmi]]
[[uk:???????? ?????? A*]]
[[vi:Gi?i thu?t tìm ki?m A*]]
[[zh:A*????]]</text>
</page>
<page>
<id>222</id>
<title>A. Richard Newton</title>
<text>{{Infobox_Scientist 
|name = A. Richard Newton
|caption = Arthur Richard Newton (1951-2007)
|birth_date = {{birth date|1951|7|1|df=y}} 
|birth_place =  Gardenvale, [[Australia]]
|residence = [[Image:Flag of Australia.svg|20px|]] [[Australia]], [[Image:Flag of the United States.svg|20px|]] [[USA]]  
|nationality = [[Image:Flag of Australia.svg|20px|]] [[Australia]]n, [[Image:Flag of the United States.svg|20px|]] [[United States|American]]  
|death_date = {{death date and age|2007|1|2|1951|7|1|df=y}}
|death_place = [[San Francisco]], [[USA]]
|field = [[Electronic Engineering|Electronic Engineer]]
|work_institution = [[University of California Berkeley]]
|alma_mater = [[University of Melbourne]]<br />[[University of California Berkeley]]
|doctoral_advisor = [[Donald Pederson|Donald O. Pederson]]
|known_for  = [[Circuit design]]<br />[[CAD]]
|prizes = Kauffman Award
|footnotes = 
}}
'''Arthur Richard Newton''' ([[Melbourne]], [[Victoria (Australia)|Victoria]], [[Australia]], 1 July 1951 &ndash; 2 January 2007) was the dean of the [[University of California, Berkeley]] [[UC Berkeley College of Engineering|College of Engineering]]. 

Newton was educated at the [[University of Melbourne]] and received a [[Bachelor of Engineering|BE]] in 1973 and [[Master's degree|M.Eng.Sci]] in 1975.  He worked at Berkeley from 1975 on [[SPICE]] (Simulation Program with Integrated Circuit Emphasis), developed initially by Larry Nagel and [[Donald Pederson]] to analyze and design complex electronic circuitry with speed and accuracy. It is claimed that nearly all electronic chips now use SPICE or a derivative.

University of California, Berkeley awarded Newton a [[Ph.D]] in 1978 and he was appointed to the Engineering Faculty a few months later.  He was appointed assistant professor in 1978, associate professor in 1982 and full professor in the Department of Electrical Engineering and Computer Sciences in 1985.  He chaired of department from 1999 to 2000, and was dean of the College of Engineering and the Roy W. Carlson Professor of Engineering from 2000 until his death.

[[Robert Birgeneau]], [[Chancellor (education)|Chancellor]] of UC Berkeley described him as, "Dynamic and entrepreneurial, he understood the power of engineering and technology in entirely new ways, and he connected them to addressing society's toughest problems. The vibrancy of his thinking shaped my own ideas about what engineering is and what it can be.  This <nowiki>[his death]</nowiki> is an enormous loss for us at UC Berkeley, for California, and indeed for the international engineering community."

He died at 55 due to [[pancreatic cancer]] at the [[University of California, San Francisco]] Medical Center.<ref>{{cite web
  | title =A. Richard Newton, UC Berkeley dean of engineering and a visionary leader in the technology industry, dies at 55
  | publisher =[[University of California, Berkeley]]
  | url =http://www.berkeley.edu/news/media/releases/2007/01/04_newton.shtml
  | accessdate = 2007-10-25 }}</ref><ref>{{cite web
  | title =Professor A. Richard Newton 
  | publisher =[[University of California, Berkeley]]
  | url =http://www.eecs.berkeley.edu/~newton/newton.html
  | accessdate = 2007-01-11 }}</ref><ref>
{{cite news 
  | title =Technology pioneer dies
  | publisher =[[The Sydney Morning Herald]]
  | date =2007-01-06
  | url =http://www.smh.com.au/news/world/technology-pioneer-dies/2007/01/06/1167777311067.html
  | accessdate =2007-01-11  }}</ref> He was married to Petra Michel, and had two daughters, Neris Newton and Amrita Newton.

In February 2007 a professorship in his honour was established at Berkeley called the Dean A. Richard Newton Memorial Professorship. This was established with funding from the EDA Consortium and other friends, colleagues and corporate partners of Richard Newton. The Professorship will specifically advance the field of [[synthetic biology]], an emerging area in which he took a deep interest.<ref>{{cite web
  | title =Newton Professorship established to honor late Berkeley Engineering Dean
  | publisher =EDACafe.com
  | date =2007-02-08
  | url =http://www10.edacafe.com/nbc/articles/view_article.php?articleid=351323&page_no=1
  | accessdate =2007-04-13  }}</ref>

==Awards and recognition==

He was the 2003 recipient of the [[Phil Kaufman Award]]. The University of Melbourne awarded him an [[Doctor of Laws|LLD]] in 2003.<ref>{{cite web
  | title =Honoris Causa Degrees of The University of Melbourne
  | publisher =[[University of Melbourne]]
  | url =http://www.unimelb.edu.au/ExecServ/honcausa/recipien.htm#distinguised
  | accessdate = 2007-01-11 |archiveurl = http://web.archive.org/web/20060826073920/http://www.unimelb.edu.au/ExecServ/honcausa/recipien.htm#distinguised <!-- Bot retrieved archive --> |archivedate = 2006-08-26}}</ref> He was member of the [[National Academy of Engineering]] since 2004
<ref>[http://www.nae.edu/nae/naepub.nsf/Members+By+UNID/8EEAFAE4C5B4F35F85256E39004FC698?opendocument Dr. A. Richard Newton<!-- Bot generated title -->]</ref>
, and in 2006, was named to the [[American Academy of Arts and Sciences]].<ref>{{cite web
  | title = Richard Newton, engineering dean and technology visionary, dies at 55
  | publisher = [[University of California, Berkeley]]
  | url = http://www.berkeley.edu/news/media/releases/2007/01/04_newton.shtml
  | accessdate = 2007-01-11 }}</ref>

==References==
{{reflist}}

==External links==
* [http://www.eecs.berkeley.edu/~newton/Presentations/ Selected presentations and papers by Richard Newton and articles about him.] List provided by [[UC Berkeley College of Engineering]]
* [http://www.eecs.berkeley.edu/~newton/newton.html Newton's CV]
*[http://www.nytimes.com/2007/01/05/technology/05newton.html Newton's New York Times obituary]

<!-- Metadata: see [[Wikipedia:Persondata]] -->

{{Persondata
|NAME=Newton, Arthur Richard
|ALTERNATIVE NAMES=
|SHORT DESCRIPTION=Australian-born computer scientist
|DATE OF BIRTH=1 July 1951 
|PLACE OF BIRTH=[[Melbourne]], [[Victoria (Australia)|Victoria]], [[Australia]]
|DATE OF DEATH=2 January 2007
|PLACE OF DEATH=[[San Francisco, California]]
}}

{{DEFAULTSORT:Newton, Arthur Richard}}
[[Category:1951 births|Newton, A. Richard]]
[[Category:2007 deaths|Newton, A. Richard]]
[[Category:Australian computer scientists|Newton, A. Richard]]
[[Category:Australian engineers|Newton, A. Richard]]
[[Category:Australian expatriates in the United States|Newton, A. Richard]]
[[Category:Deaths from pancreatic cancer|Newton, A. Richard]]
[[Category:Computer scientists from Melbourne|Newton, A. Richard]]
[[Category:University of Melbourne alumni|Newton, A. Richard]]
[[Category:University of California, Berkeley alumni|Newton, A. Richard]]
[[Category:University of California, Berkeley faculty|Newton, A. Richard]]
[[Category:Electronic design automation people|Newton, A. Richard]]
[[Category:Fellows of the Institute of Electrical and Electronics Engineers|Newton, A. Richard]]
[[Category:Members of the United States National Academy of Engineering|Newton, A. Richard]]
[[Category:Cancer deaths in California|Newton, A. Richard]]</text>
</page>
<page>
<id>226</id>
<title>A/UX</title>
<text>{{Infobox OS
| name                   = A/UX
| screenshot             = [[Image:Aux.jpeg|300px]]
| caption                = A/UX 3.0.1 with Finder, CommandShell and Netscape
| developer              = [[Apple Computer]]
| family                 = [[UNIX System V]]
| source_model           = [[Closed source]]
| latest_release_version = 3.1.1
| latest_release_date    = 1995
| kernel_type            = [[Monolithic kernel]]
| license                = [[Proprietary software|Proprietary]]
| working_state          = Historic
| website                = 
|}}

'''A/UX''' (from '''A'''pple '''U'''ni'''x''') was [[Apple Computer]]’s implementation of the [[Unix]] [[operating system]] for some of their [[Apple Macintosh|Macintosh]] computers. The later versions of A/UX ran on the [[Macintosh II]], [[Macintosh Quadra|Quadra]] and [[Macintosh Centris|Centris]] series of machines as well as the [[Macintosh SE/30|SE/30]]. A/UX was first released in 1988, with the final version (3.1.1) released in 1995. A/UX required a [[68k]]-based Macintosh with an [[Floating point unit|FPU]] and a paged [[memory management unit]] (PMMU).

The operating system was based on [[UNIX System V]] Release 2.2. It included some additional features from System V Releases 3 & 4 and [[Berkeley Software Distribution|BSD]] versions 4.2 & 4.3. It was [[POSIX]] and [[System V Interface Definition]] (SVID) compliant and included [[TCP/IP]] [[computer network|networking]] from version 2 onward. There were rumors of a later version using [[OSF/1]] as its primary code base, but this system was never released to the public, if it even existed. 

==Features==
A/UX 3.x provided a [[graphical user interface]] with the familiar [[Macintosh Finder|Finder]] windows, menus, and controls. The A/UX Finder was not the same program as the [[System 7 (Macintosh)|System 7]] Finder, but a customized version adapted to run as a Unix [[Process (computing)|process]] and designed to interact with the Unix [[Kernel (computer science)|kernel]] and [[file system]]s. A/UX 3.x also included a '''CommandShell''' terminal program, which offered a [[command line interface]] to the underlying Unix system, a feature which had never been available on Macintosh computers running the classic [[Mac OS]] Finder. An [[X Window System]] server application (called '''MacX''') with a terminal program could also be used to interface with the system and run X applications directly in the Finder. Alternatively, the user could choose to run a full X11R4 session without the Finder.

By including a [[compatibility layer]], A/UX could run [[Macintosh System]] 7.0.1, Unix, and "hybrid" [[Application software|application]]s. A hybrid application used both Macintosh and Unix system functions: for example, a Macintosh application which called Unix system functions, or a Unix application which called [[Macintosh Toolbox]] (e.g. [[QuickDraw]]) functions. The compatibility layer used some existing Toolbox functions in the computer’s [[Read-only memory|ROM]], while other function calls were translated into native Unix [[system call]]s.

A/UX included a utility called '''Commando''' (similar to a tool of the same name included with [[Macintosh Programmer's Workshop|MPW]]) to assist users with entering [[Unix commands]]. Opening a Unix [[executable]] file from the Finder would open a [[dialog box]] that allowed the user to choose [[Command line interface|command-line]] options for the program using standard controls such as [[radio button]]s and [[check box]]es, and display the resulting command line [[Parameter (computer science)|argument]] for the user before executing the command or program. This feature was intended to ease the [[Experience curve effects|learning curve]] for users new to Unix, and decrease the user’s reliance on the [[Unix manual]].

A/UX users had one central source for most A/UX applications, a [[Server (computing)|server]] at [[NASA]] called “Jagubox” administered by [[Jim Jagielski]], who was also the editor of the A/UX [[FAQ]]. Although Jagubox is down, some [[Mirror (computing)|mirrors]] are still maintained. 

==Decline==
The last version of A/UX, 3.1.1, was released in 1995. A/UX ran only on 68k Apple machines with a floating point unit (FPU) and a paged memory management unit (PMMU).<ref>{{Cite web |url=http://www.kernelthread.com/mac/oshistory/4.html |title=Many Systems for Many Apples |first=Amit |last=Singh |publisher=Kernel Thread |date=February 2004}}</ref> Apple never [[Porting|ported]] A/UX to [[PowerPC]] Macintoshes (though A/UX 4.0 was rumored to have been an [[OSF/1]] adaptation), and the company all but abandoned it by 1996, preferring to use a slightly modified version of IBM’s [[AIX operating system|AIX]] system on their mid-90s [[Apple Network Server]]s. After [[Steve Jobs]] returned to Apple, another [[Unix-like]] operating system was introduced in the form of [[Mac OS X]], but it had very little in common with A/UX, instead being based on the [[BSD]]-derived [[NeXTSTEP]].

Aside from a few isolated servers still running it, A/UX is essentially extinct, and is considered to be [[abandonware]].{{Citation needed|date=April 2010}}

{{Timeline of Macintosh operating systems}}

==References==
{{reflist}}

==External links==
*[http://www.faqs.org/faqs/aux-faq/ Official A/UX FAQ]
*[http://christtrek.dyndns.org:8000/doc/aux/faq.html Unofficial A/UX FAQ] – updates the official FAQ from the 1998 version
*[news:comp.unix.aux comp.unix.aux] newsgroup
*{{dmoz|Computers/Software/Operating_Systems/Unix/A-UX/}}
*[http://www.aux-penelope.com/ A/UX Penelope] – Some screenshots and a tutorial on A/UX installation and security
*[http://www.kernelthread.com/mac/oshistory/4.html kernelthread.com] – A/UX in the context of a history of Apple’s Operating Systems
*[http://applefritter.com/ui/aux/index.html The Unix for the rest of us?] – Screenshots and a general overview of the major features
*[http://aux.preterhuman.net A/UX at preterhuman.net] - Screenshots and simple install guide

{{Mac OS History}}
{{Apple Inc. operating systems}}
{{unix-like}}

[[Category:Apple Inc. operating systems]]
[[Category:A/UX| ]]
[[Category:Discontinued operating systems]]

[[de:A/UX]]
[[es:A/UX]]
[[fr:A/UX]]
[[it:A/UX]]
[[ko:A/UX]]
[[nl:A/UX]]
[[ja:A/UX]]
[[no:A/UX]]
[[pl:A/UX]]
[[pt:A/UX]]
[[ru:A/UX]]
[[sv:A/UX]]
[[zh:A/UX]]</text>
</page>
<page>
<id>227</id>
<title>A20 line</title>
<text>{{refimprove|date=October 2010}}
The '''A20''' or ''addressing line 20'' is one of the plethora of [[electrical]] lines that make up the [[system bus]] of an [[x86]]-based computer system. The A20 line in particular is used to transmit the 21st bit on the [[address bus]].

A microprocessor will typically have a number of addressing lines equal to the base-two [[logarithm]] of its physical addressing space. For example a processor with 4 [[Gibibyte|GiB]] of physical addressing space requires 32 lines, which are named A0 through A31. The lines are named after the number of the bit in the address they are transmitting. Thus, A0 will transmit the [[least significant bit]], which is bit 0. A20 transmits bit 21 and will become active once addresses reach 1 [[Mebibyte|MiB]] or 2<sup>20</sup>. 
[[File:IBM PC Memory areas.svg|thumb|right|The high memory area is available in real mode on 80286 processors if the A20 gate is not disabled]]

== History ==
The early [[Intel 8086]], [[Intel 8088]], and [[Intel 80186]] processors had 20 address lines, numbered A0 to A19, with these the processor can access 2<sup>20</sup> bytes or 1 [[Mebibyte|MiB]]. The processors were designed to access only blocks ("segments") of 64 [[Kibibyte|KiB]] directly (64KiB = 2<sup>16</sup> - 16-bit offset). Which chunk of physical memory this offset actually pointed to, was pre-selected with a 16-bit "segment-register" which could be moved in steps of 16 bytes. The resulting address is equal to Segment * 16 + Offset.

In consequence there were various ways to address the same byte in memory. Exemplary, four of 4096 different segment:offset combinations, all referencing the byte whose physical address is 0x000FFFFF (the last byte in 1 MiB-memory space), are:

:F000:FFFF
:FFFF:000F
:F555:AAAF
:F800:7FFF 

Referenced the last way, an increase of one in the offset yields F800:8000, which is a proper address for the processor, but since it translates to the physical address 0x00100000 (the first byte over 1 MiB) the processor would need another address-line to actually access this byte. Since such a line doesn't exist on the 8086 line of processors, the 21<sup>st</sup> bit above, while set, gets dropped, causing the address F800:8000 to "wrap around" and to actually point to the physical address 0x0000000. 

Because loading segment registers was very slow on early processors, this trick was used by some DOS programmers, for example, to have one segment that has access to program data (e.g. from F800:0000 to F800:7FFF, pointing to the physical addresses 0x000F8000 - 0x000FFFFF) as well as the I/O data (e.g. keyboard buffer) that was located in the first memory segment (with addresses F800:8000 to F800:FFFF pointing to the physical addresses 0x00000000 to 0x00007FFF).{{Citation needed|date=December 2010}}

When [[IBM]] designed the [[IBM PC AT]] machine, they decided to use the new higher-performance [[Intel 80286]] microprocessor. The 80286 could address up to 16 [[Mebibyte|MiB]] of system memory, thus removing the ability for memory addresses to wrap around: Since the required address line now existed, the combination F800:8000 would no longer point to the physical address 0x0000000 but the correct address 0x00100000. As a result some DOS programs would no longer work. In order to remain compatible with these programs, IBM decided to fix the problem themselves, on the [[motherboard]].

This was accomplished by inserting a [[logic gate]] on the A20 line between the processor and system bus, which logically got named ''Gate-A20''. Gate-A20 can be enabled or disabled by software to allow or prevent the address bus from receiving a signal from A20. It is set to non-passing for the execution of older programs which rely on the wrap-around. At boot time, the [[BIOS]] first enables Gate-A20 when counting and testing all of the system's memory, and disables it before transferring control to the operating system.

Originally, the logic gate was a gate connected to the [[Intel 8042]] keyboard controller. Controlling it was a relatively slow process. Other methods have since been added to allow for more efficient multitasking of programs which require this wrap-around with programs that access all of the system's memory. There was at first a variety of methods, but eventually the industry settled on the PS/2 method of using a bit in port 92h to control the A20 line.

Disconnecting A20 would not wrap '''all''' memory accesses above 1 MiB, just those in the 1 MiB-2 MiB, 3 MiB-4 MiB, 5 MiB-6 MiB, etc. ranges. [[Real mode]] software only cared about the area slightly above 1 MiB, so Gate-A20 was enough.

Enabling the Gate-A20 line is one of the first steps a [[protected mode]] [[x86]] [[operating system]] does in the bootup process, often before control has been passed onto the kernel from the [[booting|bootstrap]] (in the case of Linux, for example).

[[Virtual 8086 mode]], introduced with the [[Intel 80386]], allows the A20 wrap-around to be simulated by using the [[virtual memory]] facilities of the processor: physical memory may be mapped to multiple virtual addresses thus allowing the memory mapped at first mebibyte of virtual memory may be mapped again in the second mebibyte of virtual memory. The operating system may intercept changes to Gate A20 and make corresponding changes to the virtual memory address space, which also makes irrelevant the efficiency of Gate-A20 toggling.

==A20 handler==
The '''A20 handler''' is [[IBM PC]] [[memory manager]] software controlling access to the [[high memory area]] (HMA). [[Extended memory]] managers usually provide this functionality. A20 handlers are named after the 21st address line of the microprocessor, the A20 line.

In MS-DOS, [[high memory area]] managers, such as [[HIMEM.SYS]] has the "extra task" of managing A20. [[HIMEM.SYS]] provided an [[API]] for opening/closing A20. DOS itself could utilize the area for some of its storage needs, thereby freeing up more conventional memory for programs. This functionality was enabled by the "DOS=HIGH" directive in the [[CONFIG.SYS]] configuration file.

==A20 gate==
Controlling the A20 line was an important feature at one stage in the growth of the IBM PC architecture, as it added access to an additional 65520 bytes (64 KiB - 16 B) of memory in [[real mode]] without dramatic software changes.

In what was arguably a "hack", the A20 gate was originally part of the keyboard controller on the motherboard, which could open/close it depending on what behaviour was desired. <ref> Tom Shanley, Don Anderson, John Swindle, ''
ISA system architecture'', Addison-Wesley, 1995, ISBN 0-201-40996-8, pp.79-80 </ref> 
The A20 gate is still present on all modern PC's and the gate is initially closed right after boot. Modern [[protected mode]] operating systems typically open the A20 gate early during the boot process and never close it again. These operating systems do not have the compatibility reasons for keeping it closed and they gain access to the full range of physical addresses available by opening it.

The [[Intel 80486]] and [[Pentium]] added a special pin named ''A20M#'', which when asserted low forces bit 20 of the physical address to be zero for all on-chip cache or external memory accesses. This enhancement is mostly significant for mainboard manufacturers, because it makes parts of the external Gate A20 circuitry unnecessary. Software still needs to manipulate the gate and must still deal with external peripherals (the [[chipset]]) for that. <ref> Tom Shanley,''Protected mode software architecture'', Taylor & Francis, 1996 ,ISBN 0-201-55447-X, page  60 </ref>


{{FOLDOC}}

[[Category:X86 memory management]]
[[Category:Memory expansion]]


==See also==
* [[Computer storage]]
* [[High memory area]] (HMA)

==References==
<references/>
==External links==
*[http://www.win.tue.nl/~aeb/linux/kbd/A20.html A20 - a pain from the past]

[[Category:X86 architecture]]
[[Category:IBM PC compatibles]]

[[de:A20-Gate]]
[[it:Linea A20]]
[[nl:A20 (informatica)]]
[[zh:A20??]]</text>
</page>
<page>
<id>228</id>
<title>A2100</title>
<text>The '''A2100''' is a [[communications satellite]] [[spacecraft]] made by [[Lockheed Martin Space Systems]] for [[telecommunications]] in [[geosynchronous orbit]].

The [[Lockheed Martin]] A2100 geosynchronous spacecraft series is designed for a variety of telecommunications needs including [[Ka-band]] [[broadband]] and [[broadcast]] services, fixed satellite services in [[C-band]] and Ku-band payload configurations, high-power direct broadcast services using the Ku-band [[frequency spectrum]], and mobile satellite services using [[UHF]], [[L-band]] and [[S-band]] payloads.<ref>[http://space.skyrocket.de/doc_sat/lockheed_a2100.htm skyrocket.de "Lockheed Martin: A2100"]</ref> 

The A2100 satellite system was developed by a [[Skunk Works]] team at the Astro Space East Windsor, New Jersey facility.  A group of design Architects, including Brian Stewart, John Close, Pete Wise and Keith Davies delivered a flexible common bus with substantially fewer components, lower spacecraft weight, and reduced customer delivery time.  Jim Wilson led a team from GE's corporate r&d lab located in Niskayuna, NY, which helped with several technology underpinnings which advanced the A2100 design.

The first A2100 satellite, AMC-1, was launched September 8, 1996. Since then, over 30 A2100 based satellites have been launched and have totalled over 200 years of on-orbit service.<ref>[http://www.globalsecurity.org/space/library/news/2008/space-080212-lockheed-martin01.htm globalsecurity.org "Lockheed Martin-Built A2100 Satellite Fleet Achieves 200 Years In Orbit"]</ref>

Lockheed Martin's highly reliable A2100 telecommunications satellite series has received several industry awards for reliability in its history, including Frost and Sullivan's Satellite Reliability Award for excellence in the production of flexible and reliable communications satellites used in geosynchronous Earth orbit.<ref>[http://www.spacedaily.com/reports/Lockheed_Martin_Built_EchoStar_X_Satellite_Launched_Successfully.html www.spacedaily.com "Lockheed Martin Built EchoStar X Satellite Launched Successfully"]</ref><ref>[http://www.lockheedmartin.com/news/press_releases/2004/LockheedMartinSatelliteReliabilityH.html "Frost & Sullivan Award]</ref>

The A2100 series is modular and can be configured in different sizes: 

*A2100A = 1 to 4 [[kW]] 
*A2100AX = 4 to x kW 
*A2100AXS: enhanced A2100AX 
*A2100AXX : stretched version for mobile communications 
*Additionally there is an A2100M version, which fulfills military requirements.

A2100 Customer List:<ref>[http://www.lockheedmartin.com/ssc/CommercialSpace/Capabilities.html "Lockheed Martin Satellites"]</ref>

*[[SES Americom]]
*[[SES Astra]]
*[[SES New Skies]]
*[[Dish Network]]
*[[ACeS]]
*[[Telesat]]
*[[Cablevision]]
*[[JSAT Corporation]]

==References==
{{reflist}}

{{Lockheed Martin}}

[[Category:Communications satellite models]]
[[Category:Unmanned vehicles]]
[[Category:Satellite platforms]]

[[de:A2100]]
[[es:A2100]]</text>
</page>
<page>
<id>232</id>
<title>A86 (software)</title>
<text>{{Redirect|A386|the A road in England|A386 road (Great Britain)}}
{{Other uses|D86 (disambiguation)}}
{{Infobox_Software 
| name                   = A86
| screenshot             = 
| caption                = 
| developer              = [[Eric Isaacson]] 
| latest_release_version = 4.05
| latest_release_date    = 
| operating_system       = [[DOS]], [[Microsoft Windows|Windows]]
| platform               = [[x86]]
| genre                  = [[Assembly language#Assembler|Assembler]] 
| license                = [[Proprietary software|Proprietary]]
| website                = http://eji.com/a86/
}}
'''A86''' is a compact commercial [[Assembly language#Assembler|assembler]] developed for the [[Intel]] [[x86]] family of [[microprocessor]]s by [[Eric Isaacson]].  The assembler can directly produce a [[Microsoft Windows|Windows]]/[[DOS]] compatible [[.COM]] or [[Object file|.OBJ]] files from a simple text source file.  It uses a slightly simpler [[Syntax of programming languages|syntax]] for source code than that used by other assemblers, and it is [[Optimization (computer science)|optimize]]d for maximum speed at both assembly and [[Run time (computing)|run times]].  It comes with a [[debugger]], '''D86'''.<ref name="A86">{{cite web|url=http://eji.com/a86/|title=A86/A386 assembler and D86/D386 debugger|date=2008|accessdate=2008-07-02|author=Eric Isaacson}}</ref><ref name="WhichAsm">{{cite web|url=http://webster.cs.ucr.edu/AsmTools/WhichAsm.html|title=Which Assembler is the Best?|accessdate=2008-05-18|author=Randall Hyde}}</ref>

A86/D86 target [[16-bit]] x86 platforms.  The companion products '''A386''' and '''D386''' are designed for [[32-bit]] platforms.<ref name="A86"/><ref name="WhichAsm"/>

The A86 assembler was the first programming tool to automatically embed a "signature" into the code which it generated. Through its choice of instructions (many of which are functionally equivalent), it was possible to distinguish between registered and unregistered versions of the assembler, although access to the source code was required.<ref name="El-Khalil">{{cite book | last1 = El-Khalil | first1 = Rakan | last2 = Keromyti | first2 = Angelos D. | year = 2004 | chapter = Hydan: Hiding Information in Program Binaries | editors = Lopez, Javier; Qing, Sihan; Okamoto, Eiji | title = Information and communications security: 6th International Conference, ICICS 2004, Malaga, Spain, October 27-29, 2004 : Proceedings | series = Lecture notes in computer science | volume = 3269 | publisher = [[Springer Science+Business Media|Springer]] | location =  | isbn = 3540235639 | page = 190 }}</ref>

==References==
{{reflist}}

==External links==
* [http://eji.com/a86/ Official A86 site]

{{Template:X86_assembly_topics}}

[[Category:Assemblers]]
[[Category:Debuggers]]
[[Category:DOS software]]
[[Category:Windows software]]

[[es:A86 y A386 assemblers]]</text>
</page>
<page>
<id>244</id>
<title>AA tree</title>
<text>An '''AA tree''' in [[computer science]] is a form of [[Self-balancing binary search tree|balanced tree]] used for storing and retrieving ordered data efficiently. AA trees are named for [[Arne Andersson (computer science)|Arne Andersson]], their inventor.

AA trees are a variation of the [[red-black tree]], which in turn is an enhancement to the [[binary search tree]]. Unlike red-black trees, red nodes on an AA tree can only be added as a right subchild. In other words, no red node can be a left sub-child.  This results in the simulation of a [[2-3 tree]] instead of a [[2-3-4 tree]], which greatly simplifies the maintenance operations. The maintenance algorithms for a red-black tree need to consider seven different shapes to properly balance the tree:

[[Image:Red Black Shape Cases.svg]]

An AA tree on the other hand only needs to consider two shapes due to the strict requirement that only right links can be red:

[[Image:AA Tree Shape Cases.svg]]

== Balancing Rotations ==

Typically, AA trees are implemented with levels instead of colors, unlike red-black trees.  Each node has a level field, and the following invariants must remain true for the tree to be valid:

# The level of a leaf node is one.
# The level of a left child is strictly less than that of its parent.
# The level of a right child is less than or equal to that of its parent.
# The level of a right grandchild is strictly less than that of its grandparent.
# Every node of level greater than one must have two children.

Only two operations are needed for maintaining balance in an AA tree. These operations are called skew and split. Skew is a right rotation when an insertion or deletion creates a left horizontal{{Clarify|What's a ''horizontal link''?|date=July 2010}} link, which can be thought of as a left red link in the red-black tree context. Split is a conditional left rotation when an insertion or deletion creates two horizontal right links, which once again corresponds to two consecutive red links in red-black trees. 

 '''function''' skew '''is'''
     '''input:''' T, a node representing an AA tree that needs to be rebalanced.
     '''output:''' Another node representing the rebalanced AA tree.
 
     '''if''' nil(T) '''then'''
         '''return''' Nil
     '''else if''' level(left(T)) == level(T) '''then'''
         ''Swap the pointers of horizontal left links.''
         L = left(T)
         left(T) := right(L)
         right(L) := T
         '''return''' L
     '''else'''
         '''return''' T
     '''end if'''
 '''end function'''

Skew: [[Image:AA Tree Skew2.svg]]

 '''function''' split '''is'''
     '''input:''' T, a node representing an AA tree that needs to be rebalanced.
     '''output:''' Another node representing the rebalanced AA tree.
 
     '''if''' nil(T) '''then'''
         '''return''' Nil
     '''else if''' level(T) == level(right(right(T))) '''then'''
         ''We have two horizontal right links.  Take the middle node, elevate it, and return it.''
         R = right(T)
         right(T) := left(R)
         left(R) := T
         level(R) := level(R) + 1
         '''return''' R
     '''else'''
         '''return''' T
     '''end if'''
 '''end function'''

Split: [[Image:AA Tree Split2.svg]]

== Insertion ==

Insertion begins with the normal binary tree search and insertion procedure.  Then, as the call stack unwinds (assuming a recursive implementation of the search), it's easy to check the validity of the tree and perform any rotations as necessary.  If a horizontal left link arises, a skew will be performed, and if two horizontal right links arise, a split will be performed, possibly incrementing the level of the new root node of the current subtree.  Note, in the code as given above, the increment of level(T).  This makes it necessary to continue checking the validity of the tree as the modifications bubble up from the leaves.

 '''function''' insert '''is'''
     '''input:''' X, the value to be inserted, and T, the root of the tree to insert it into.
     '''output:''' A balanced version T including X.
 
     ''Do the normal binary tree insertion procedure.  Set the result of the''
     ''recursive call to the correct child in case a new node was created or the''
     ''root of the subtree changes.''
     '''if''' nil(T) '''then'''
         ''Create a new leaf node with X.''
         '''return''' node(X, 1, Nil, Nil)
     '''else if''' X < value(T) '''then'''
         left(T) := insert(X, left(T))
     '''else if''' X > value(T) '''then'''
         right(T) := insert(X, right(T))
     '''end if'''
     ''Note that the case of X == value(T) is unspecified.  As given, an insert
     will have no effect.  The implementor may desire different behavior.''
 
     ''Perform skew and then split.  The conditionals that determine whether or
     not a rotation will occur or not are inside of the procedures, as given
     above.''
     T := skew(T)
     T := split(T)
 
     '''return T'''
 '''end function'''

== Deletion ==

As in most balanced binary trees, the deletion of an internal node can be turned into the deletion of a leaf node by swapping the internal node with either its closest predecessor or successor, depending on which are in the tree or on the implementor's whims.  Retrieving a predecessor is simply a matter of following one left link and then all of the remaining right links.  Similarly, the successor can be found by going right once and left until a null pointer is found.  Because of the AA property of all nodes of level greater than one having two children, the successor or predecessor node will be in level 1, making their removal trivial.

To re-balance a tree, there are a few approaches.  The one described by Andersson in his [http://user.it.uu.se/~arnea/abs/simp.html original paper] is the simplest, and it is described here, although actual implementations may opt for a more optimized approach.  After a removal, the first step to maintaining tree validity is to lower the level of any nodes whose children are two levels below them, or who are missing children.  Then, the entire level must be skewed and split.  This approach was favored, because when laid down conceptually, it has three easily understood separate steps:

# Decrease the level, if appropriate.
# Skew the level.
# Split the level.

However, we have to skew and split the entire level this time instead of just a node, complicating our code.

 '''function''' delete '''is'''
     '''input:''' X, the value to delete, and T, the root of the tree from which it should be deleted.
     '''output:''' T, balanced, without the value X.
 
     '''if''' X > value(T) '''then'''
         right(T) := delete(X, right(T))
     '''else if''' X < value(T) '''then'''
         left(T) := delete(X, left(T))
     '''else'''
         ''If we're a leaf, easy, otherwise reduce to leaf case.'' 
         '''if''' leaf(T) '''then'''
             return Nil
         '''else if''' nil(left(T)) '''then'''
             L := successor(T)
             right(T) := delete(L, right(T))
             value(T) := L
         '''else'''
             L := predecessor(T)
             left(T) := delete(L, left(T))
             value(T) := L
         '''end if'''
     '''end if'''
 
     ''Rebalance the tree.  Decrease the level of all nodes in this level if
     necessary, and then skew and split all nodes in the new level.''
     T := decrease_level(T)
     T := skew(T)
     right(T) := skew(right(T))
     right(right(T)) := skew(right(right(T)))
     T := split(T)
     right(T) := split(right(T))
     return T
 '''end function'''

 '''function''' decrease_level '''is'''
     '''input:''' T, a tree for which we want to remove links that skip levels.
     '''output:''' T with its level decreased.
 
     should_be = min(level(left(T)), level(right(T))) + 1
     '''if''' should_be < level(T) '''then'''
         level(T) := should_be
         '''if''' should_be < level(right(T)) '''then'''
             level(right(T)) := should_be
         '''end if'''
     '''end if'''
     return T
 '''end function'''

A good example of deletion by this algorithm is present in the [http://user.it.uu.se/~arnea/abs/simp.html Andersson paper].

== Performance ==

The performance of an AA tree is equivalent to the performance of a red-black tree. While an AA tree makes more rotations than a red-black tree, the simpler algorithms tend to be faster, and all of this balances out to result in similar performance. A red-black tree is more consistent in its performance than an AA tree, but an AA tree tends to be flatter, which results in slightly faster search times.{{Citation needed|date=February 2007}}

== See also ==
* [[Red-black tree]]
* [[B-tree]]
* [[AVL tree]]

==References==
*[http://user.it.uu.se/~arnea/abs/simp.html A. Andersson. Balanced search trees made simple]
*[http://user.it.uu.se/~arnea/abs/searchproc.html A. Andersson. A note on searching in a binary search tree]

==External links==
*[http://people.ksp.sk/~kuko/bak/index.html AA-Tree Applet] by Kubo Kovac
*[http://bitbucket.org/trijezdci/bstlib/src/ BSTlib] - Open source AA tree library for C by trijezdci
*[http://www.softpedia.com/get/Others/Home-Education/AA-Visual-2007.shtml AA Visual 2007 1.5 - OpenSource Delphi program for educating AA tree structures]
*[http://www.eternallyconfuzzled.com/tuts/datastructures/jsw_tut_andersson.aspx Thorough tutorial] Julienne Walker with lots of code, including a practical implementation
*[http://www.cs.fiu.edu/~weiss/dsaa_c++3/code/ Object Oriented implementation with tests] 
*[http://www.cepis.org/upgrade/files/full-2004-V.pdf A Disquisition on The Performance Behavior of Binary Search Tree Data Structures (pages 67-75)] - Comparison of AA trees, red-black trees, treaps, skip lists, and radix trees
*[http://www.rational.co.za/aatree.c An example C implementation]

{{CS-Trees}}

{{DEFAULTSORT:Aa Tree}}
[[Category:Trees (structure)]]

[[cs:AA strom]]
[[es:Árbol AA]]
[[ja:AA?]]</text>
</page>
<page>
<id>258</id>
<title>ABINIT</title>
<text>'''ABINIT''' is a [[free software|free]] [[Software package (installation)|software package]] for [[physicist]]s, distributed under the [[GNU General Public License]], whose main program allows the total [[energy]], [[Current density|charge density]], and [[Electron configuration|electronic structure]] of systems made of [[electron]]s and [[Atomic nucleus|nuclei]] ([[molecules]] and periodic/crystalline [[solid]]s) to be calculated within [[density functional theory]] (DFT), using [[pseudopotential]]s, and a [[plane wave]] basis.<ref>X. Gonze, J.-M. Beuken, R. Caracas, F. Detraux, M. Fuchs, G.-M. Rignanese, L. Sindic, M. Verstraete, G. Zerah, F. Jollet, M. Torrent, A. Roy, M. Mikami, P. Ghosez, J.-Y. Raty, and D.C. Allan, Comput. Mat. Science '''25''', 478 (2002)</ref><ref>X. Gonze, G.-M. Rignanese, M. Verstraete, J.-M. Beuken, Y. Pouillon, R. Caracas, F. Jollet, M. Torrent, G. Zerah, M. Mikami, Ph. Ghosez, M. Veithen, J.-Y. Raty, V. Olevano, F. Bruneval, L. Reining, R.W. Godby, G. Onida, D.R. Hamann, and D.C. Allan, [http://www.atypon-link.com/OLD/doi/abs/10.1524/zkri.220.5.558.65066 Z. Kristallogr. '''220''', 558 (2005)]</ref>

A web-based easy-to-use [http://nanohub.org/resources/ABINIT graphical version] of the package is available for free use through the [[nanohub]].

ABINIT also includes options to
* optimize the [[geometry]] according to the DFT forces and stresses;
* perform [[molecular dynamics]] [[simulation]]s using these forces; and
* generate [[Dynamical system|dynamical]] [[matrix (mathematics)|matrices]], [[Max Born|Born]] effective [[Electric charge|charges]], and [[dielectric]] [[tensor]]s.

[[Excited state]]s can be computed within the [[time-dependent density functional theory]] (for molecules), or within [[Many-body problem|many-body]] [[Perturbation theory (quantum mechanics)|perturbation theory]] (the [[GW approximation]]). In addition to the main ABINIT [[code]], different [[utility program]]s are also provided.

==See also==

{{Portal|Free software}}

* [[List of quantum chemistry and solid state physics software]]

==References==
<references/>

==External links==
* {{Official|http://www.abinit.org/ |name=ABINIT web site}}
* [http://nanohub.org/resources/ABINIT Graphical version (web-based) of ABINIT]

<!--- [[Category: Computational physics]] Physics software is a sub-category --->

<!-- Categories -->
[[Category:Density functional theory]]
[[Category:Free physics software]]
[[Category:Computational chemistry software]]{{DEFAULTSORT:Abinit}}


{{Physics-stub}}
{{Science-software-stub}}

[[ru:Abinit]]</text>
</page>
<page>
<id>260</id>
<title>ABLE (programming language)</title>
<text>'''ABLE''' is a simplified [[programming language]] targeted at [[accounting]] applications.

More information is available at [http://www.ltnow.com/contact.html www.LTNow.com]

==References==
{{refbegin}}
* "ABLE, The Accounting Language, Programming and Reference Manual," Evansville Data Proc Center, Evansville, IN, March 1975
* Listed in SIGPLAN Notices 13(11):56 (November 1978)
{{refend}}

{{FOLDOC}}

[[Category:Accounting software]]
[[Category:Domain-specific programming languages]]

{{compu-lang-stub}}

[[ms:Bahasa pengaturcaraan ABLE]]
{{DEFAULTSORT:Able}}</text>
</page>
<page>
<id>263</id>
<title>ABSYS</title>
<text>'''ABSYS''' was an early [[declarative programming|declarative]] [[programming language]] from the [[University of Aberdeen]] which anticipated a number of features of [[Prolog]].

==See also==
*[[ABSET]]

==References==
*"ABSYS: An Incremental Compiler for Assertions", J.M. Foster et al., Mach Intell 4, Edinburgh U Press, 1969, pp. 423–429
*{{FOLDOC}}

[[Category:Declarative programming languages]]

[[ms:ABSYS]]
{{DEFAULTSORT:Absys}}</text>
</page>
<page>
<id>267</id>
<title>AC0</title>
<text>{{DISPLAYTITLE:AC<sup>0</sup>}}
'''AC<sup>0</sup>''' is a [[complexity class]] used in [[circuit complexity]].  It is the smallest class in the [[AC (complexity)|AC]] hierarchy, and consists of all families of circuits of depth O(1) and polynomial size, with unlimited-[[fanin]] [[AND gate]]s and [[OR gate]]s.  (We allow [[NOT gate]]s only at the inputs).  It thus contains [[NC0|NC<sup>0</sup>]], which has only bounded-fanin AND and OR gates.

From a [[descriptive complexity]] viewpoint, [[DLOGTIME]]-[[Uniformity (complexity theory)|uniform]] AC<sup>0</sup> is equal to the descriptive class [[FO (complexity)|FO]]+BIT of all languages describable in first-order logic with the addition of the [[BIT operator]], or alternatively by FO(+, <math>\times</math>), or by Turing machine in the [[LH (complexity)|logarithmic hierarchy]]<ref>*N. Immerman ''Descriptive complexity'' (1999 Springer), page 85.</ref>. 

In 1984 Furst, Saxe, and Sipser showed that calculating the [[parity bit#Parity|parity]] of an input cannot be decided by any AC<sup>0</sup> circuits, even with non-uniformity.
<ref>M. Furst, J. B. Saxe, and M. Sipser.  Parity, circuits, and the polynomial-time hierarchy.  ''Math. Systems Theory'', 17:13&ndash;27, 1984.</ref>
It follows that AC<sup>0</sup> is not equal to [[NC1 (complexity)|NC<sup>1</sup>]], because a family of circuits in the latter class can compute parity.

==References==
<references/>
{{ComplexityClasses}}
[[Category:Circuit complexity]]
[[Category:Complexity classes]]</text>
</page>
<page>
<id>268</id>
<title>AC/AC converter</title>
<text>{{No footnotes|date=July 2010}}
[[Image:AC AC Converter Classification.jpg|thumb|Fig 1: Classification of three-phace AC/AC converter circuits.<ref>J. W. Kolar, T. Friedli, F. Krismer, S. D. Round, “The Essence of Three-Phase AC/AC Converter Systems”, Proceedings of the 13th Power Electronics and Motion Control Conference (EPE-PEMC'08), Poznan, Poland, pp. 27 – 42, Sept. 1 - 3, 2008.</ref>]]
[[Image:Three Phase AC AC voltage DC.jpg|thumb|Fig 2: Topology of the three-phase AC/AC converter with voltage DC-link <ref>I. Takahashi, Y. Itoh, “Electrolytic Capacitor-Less PWM Inverter“, in Proceedings of the IPEC’90, Tokyo, Japan, , pp. 131 – 138, April 2 – 6, 1990.</ref>]]
[[Image:3PAC current DC.jpg|thumb|Fig 3: Topology of the three-phase AC/AC converter with current DC-link <ref>K. Kuusela, M. Salo, H. Tuusa, “A Current Source PWM Converter Fed Permanent Magnet Synchronous Motor Drive with Adjustable DC-Link Current“, in Proceedings of the NORPIE’2000, Aalborg, Denmark, pp. 54 – 58, June 15 – 16, 2000.</ref><ref>M. H. Bierhoff, F. W. Fuchs, “Pulse Width Modulation for Current Source Converters – A Detailed Concept,“ in Proceedings of the 32nd IEEE IECON’06, Paris, France, Nov. 7–10, 2006.</ref>]]
[[Image:Direct matrix converter.jpg|thumb|Fig 4: Topology of the Conventional Direct Matrix Converter <ref>L. Gyugyi, B. R. Pelly, “Static Power Frequency Changers - Theory, Performance, & Application“, New York: J. Wiley, 1976.</ref><ref>W. I. Popow, “Der zwangskommutierte Direktumrichter mit sinusförmiger Ausgangsspannung,“ Elektrie 28, No. 4, pp. 194 – 196, 1974</ref>]]
[[Image:Indirect matrix converter.jpg|thumb|Fig 5: Topology of the indirect matrix converter <ref>J. Holtz, U. Boelkens, “Direct Frequency Converter with Sinusoidal Line Currents for Speed-Variable AC Motors“, IEEE Transactions Industry Electronics, Vol. 36, No. 4, pp. 475–479, 1989.</ref><ref>K. Shinohara, Y. Minari, T. Irisa, “Analysis and Fundamental Characteristics of Induction Motor Driven by Voltage Source Inverter without DC Link Components (in Japanese)“, IEEJ Transactions, Vol. 109-D, No. 9, pp. 637 – 644, 1989.</ref><ref>L. Wei, T. A. Lipo, “A Novel Matrix Converter Topology with Simple Commutation“, in Proceedings of the 36th IEEE IAS’01, Chicago, USA, vol. 3, pp. 1749–1754, Sept. 30 – Oct. 4, 2001.</ref>]]

An '''AC/AC converter''' converts an [[Alternating current|AC]] [[waveform]] such as the mains supply, to another AC waveform, where the output voltage and frequency can be set arbitrarily.

AC/AC converters can be categorized into 
* Converters with a DC-link.
* [[Cycloconverter]]s
* Hybrid Matrix Converters.
* Matrix Converters.
As shown in Fig 1.
For such AC-AC conversion today typically converter systems with a voltage (Fig. 2) or current (Fig. 3) DC-link are employed. For the voltage DC-link, the mains coupling could be implemented by a diode bridge. To accomplish braking operation of a motor, a braking resistor must be placed in the DC-link. Alternatively, an anti-parallel thyristor bridge must be provided on the mains side for feeding back energy into the mains. The disadvantages of this solution are the relatively high mains distortion and high reactive power requirements (especially during inverter operation). 

An AC/AC converter with approximately sinusoidal input currents and bidirectional power flow can be realized by coupling a PWM rectifier and a PWM inverter to the DC-link. The DC-link quantity is then impressed by an energy storage element that is common to both stages, which is a capacitor C for the voltage DC-link or an inductor L for the current DC-link. The PWM rectifier is controlled in a way that a sinusoidal mains current is drawn, which is in phase or anti-phase (for energy feedback) with the corresponding mains phase voltage. 

Due to the DC-link storage element, there is the advantage that both converter stages are to a large extent decoupled for control purposes. Furthermore, a constant, mains independent input quantity exists for the PWM inverter stage, which results in high utilization of the converter’s power capability. On the other hand, the DC-link energy storage element has a relatively large physical volume, and when electrolytic capacitors are used, in the case of a voltage DC-link, there is potentially a reduced system lifetime. 

In order to achieve higher power density and reliability, it is makes sense to consider Matrix Converters that achieve three-phase AC/AC conversion without any intermediate energy storage element. Conventional Direct Matrix Converters (Fig. 4) perform voltage and current conversion in one single stage. 

A [[cycloconverter]] constructs an output, variable-frequency, approximately sinusoid waveform by switching segments of the input waveform to the output; there is no intermediate DC link.  With switching elements such as [[SCR]]s, the output frequency must be lower than the input. Very large cycloconverters (on the order of 10 MW) are manufactured for compressor and wind-tunnel drives, or for variable-speed applications such as [[cement]] kilns.   

There is the alternative option of indirect energy conversion by employing the Indirect Matrix Converter (Fig. 5) or the Sparse Matrix Converter which was invented by Prof. Johann W. Kolar from the ETH Zurich. As with the DC-link based systems (Fig. 2 and Fig. 3), separate stages are provided for voltage and current conversion, but the DC-link has no intermediate storage element. Generally, by employing matrix converters, the storage element in the DC-link is eliminated at the cost of a larger number of semiconductors. Matrix converters are often seen as a future concept for variable speed drives technology, but despite intensive research over the decades they have until now only achieved low industrial penetration. The reason for this could be the higher complexity in modulation and analysis effort. 

==References==
{{Reflist}}

[[Category:Electronic circuits]]
[[Category:Electrical power conversion]]
[[Category:Power electronics]]</text>
</page>
<page>
<id>273</id>
<title>ACCESS.bus</title>
<text>{{Unreferenced|date=April 2008}}

'''ACCESS.bus''' (or '''A.b''') is a peripheral-interconnect [[computer bus]] developed by [[Philips]] in the early 1990s. It is similar in purpose to [[Universal Serial Bus|USB]], in that it allows low-speed devices to be added or removed from a computer on the fly. While it was in use earlier than USB, it never became popular, largely due to considerably less corporate backing in the industry.

A.b is a [[physical layer]] definition that describes the physical cabling and connectors used in the network. The higher layers, namely the signaling and protocol issues, are already defined to be the same as Philips' [[I²C]] bus.

Compared to I²C, A.b:

* adds two additional pins to provide power to the devices (+5 V and GND)
* allows for only 125 devices out of I²C's 1024
* supports only the 100 kbit/s "standard mode" and 10 kbit/s "low-speed mode"

The idea was to define a single standard that could be used both inside and outside a computer. A single I²C/A.b controller chip would be used inside the machine, connected on the [[motherboard]] to internal devices like the clock and battery power monitor. An A.b connector on the outside would then allow additional devices to be plugged into the bus. This way all of the low- and medium-speed devices on the machine would be driven by a single controller and [[protocol stack]].

A.b also defined a small set of standardized device classes. These included monitors, keyboards, "locators" (pointing devices like mice and joysticks), battery monitors, and "text devices" (modems, etc.). Depending on how much intelligence the device needed, the interface in the device could leave almost all of the work to the [[device driver|driver]]. This allows A.b to scale down to price points low enough for devices like mice.

Although A.b mice and keyboards have been available (in limited fashion) for some time, the only serious attempt to use the system was by the [[VESA]] group. They needed a standardized bus for communicating device abilities between monitors and computers, and selected I²C because it required only two pins; by re-using existing "reserved" pins in the standard [[VGA]] they could implement a complete A.b bus (including power). A number of monitors with A.b connectors started appearing in the mid-1990s, notably those by [[NEC]], but this was at about the same time USB was being heavily promoted and few devices were available to plug into them. The bus remained the standard way for a monitor to communicate setup information to the host graphics card.

Compared to USB, A.b has several advantages. One is that any device on the bus can be a master or a slave, and a protocol is defined for selecting which one a device should use under any particular circumstance. This allows devices to be plugged together with A.b without a host computer. For instance, a digital camera could be plugged directly into a printer and become the master. Under USB the computer is always the master and the devices are always slaves. In order to support the same sort of device-to-device connection, USB requires additional support in the dual-role devices in order to emulate a host and provide similar functionality. Another advantage of A.b is that devices can be strung together into a single daisy-chain&mdash;A.b can support, but does not require, the use of hubs. This can reduce cable-clutter significantly.

On the downside, A.b is much slower than USB. Had [[FireWire|IEEE 1394]] (also known as FireWire) been widely available at the time, a computer with both A.b and FireWire would have been an attractive solution for all speed ranges. As it was, USB fit neatly into the niche between the two. With USB soon included in the standard motherboard control chips from [[Intel]], A.b was pushed out onto the low-end and quickly disappeared.

==External links==
* [http://www.interfacebus.com/Design_Connector_I2C.html I<sup>2</sup>C Bus / Access Bus]

{{Computer-bus}}

[[Category:computer buses]]

[[de:ACCESS.bus]]
[[fi:ACCESS.bus]]</text>
</page>
<page>
<id>289</id>
<title>ACM Computing Classification System</title>
<text>The '''ACM Computing Classification System''' is a subject classification system for [[computer science]] devised by the [[Association for Computing Machinery]]. The system is comparable to the [[Mathematics Subject Classification]] in scope, aims and structure, being used by the various ACM journals to organise subjects by area.

==History==
The system has gone through six revisions, the first version being published in 1964, and revised versions appearing in 1982,  1983, 1987, 1991, and the now current version in 1998.

==Structure==
The ACM Computing Classification System is hierarchically structured in four levels: three outer levels, coded by capital letters and numbers, and an uncoded fourth level of subject descriptors. Thus, for example, one branch of the hierarchy contains
:I. Computing Methodologies, which contains:
::I.2 [[Artificial Intelligence]], which contains:
:::I.2.4 [[Knowledge representation formalisms and methods]], which contains:
::::''[[Temporal logic]]''.

Each top-level category has two standard subcategories: "general", coded with a "0", and "miscellaneous", coded with a "m". For instance, I.0 denotes the "general" subcategory of Computing Methodologies, while I.m denotes its miscellaneous subcategory. Several subtopics are listed as uncoded subject descriptors in these standard subcategories.

{{Navbox
|name    = ACM Computing Classification System
|title   = ACM Computing Classification System
|image   =
|above   = The 1998 version of the ACM classification has the following main categories.
|group1  = Section A
|group2  = Section B
|group3  = Section C
|group4  = Section D
|group5  = Section E
|group6  = Section F
|group7  = Section G
|group8  = Section H
|group9  = Section I
|group10 = Section J
|group11 = Section K
|list1   = is for general computing literature. It includes subtopics for introductory and survey material, and for reference works.
|list2   =  on hardware, has subtopics for [[Control unit|control structures]] and [[Microcode|microprogramming]], [[Arithmetic logic unit|arithmetic and logic structures]], [[Computer storage|memory structures]], [[Input/output|input/output and data communications]], [[Register transfer level|register-transfer-level implementation]], [[logic design]], [[integrated circuit]]s, and [[Performance tuning|performance]] and [[Reliability engineering|reliability]].
|list3   = concerns [[Computer organization|computer systems organization]]. The subtopics of this section are [[Central processing unit|processor architectures]], [[Computer networking|computer-communication networks]], special-purpose and application-based systems, [[Performance tuning|performance of systems]], and [[Implementation|computer system implementation]].
|list4   = is entitled [[Software]]. This section includes two subtopics on software development: programming techniques and [[software engineering]]. Two more subtopics concern the software infrastructure needed to run other software: [[programming language]]s and [[operating system]]s.
|list5   = pertains [[data]], includes subtopics on [[data structure]]s, data storage representations, [[Encryption|data encryption]], [[Coding theory|coding]] and [[information theory]], and [[Computer file|file]]s.
|list6   = includes several topics from the [[theory of computation]]: [[Abstract machine|computation by abstract devices]],  [[analysis of algorithms]] and [[Computational complexity theory|problem complexity]], [[Formal methods|logics and meanings of programs]], [[mathematical logic]], and [[formal language]]s.
|list7   = contains topics involving the mathematics of computing. Its subtopics are [[numerical analysis]], [[discrete mathematics]], [[probability and statistics]], and [[mathematical software]].
|list8   = pertains to [[information systems]]. It includes subtopics for models and principles, [[Database|database management]], information storage and [[Information retrieval|retrieval]], information systems applications, and information interfaces and presentation (e.g., [[Human-computer interaction|HCI]]).
|list9   = on computing methodologies, covers a diverse set of subtopics concerning different application areas of computation: [[Symbolic mathematics|symbolic and algebraic manipulation]], [[artificial intelligence]], [[computer graphics]], [[image processing]] and [[computer vision]], [[pattern recognition]], [[Computer simulation|simulation and modeling]], and [[Document processing|document and text processing]].
|list10  = also covers computer applications, but with a focus more on the different application areas and less on the different styles of computation one does in each of those areas. Its subtopics are administrative data processing, [[Scientific computing|physical sciences and engineering]], [[Bioinformatics|life and medical sciences]], social and behavioral sciences, [[Digital art|arts]] and [[The Digital Humanities|humanities]], [[computer-aided engineering]], and computers in other systems.
|list11  = has as its title Computing Milieux. The subtopics of this section are [[Computer industry|the computer industry]], [[History of computer science|history of computing]], [[Educational technology|computers and education]], computers and society, [[legal aspects of computing]], management of computing and information systems, the computing profession, and [[Personal computer|personal computing]].
}}

== See also ==
{{Portal|Computer Science}}

==References==
*{{citation
 | last = Coulter | first = Neal
 | doi = 10.1145/265563.265579
 | issue = 12
 | journal = Communications of the ACM
 | location = New York, NY, USA
 | pages = 111–112
 | publisher = ACM
 | title = ACM's computing classification system reflects changing times
 | volume = 40
 | year = 1997}}.
*{{citation
 | last1 = Coulter | first1 = Neal
 | last2 = French | first2 = James
 | last3 = Glinert | first3 = Ephraim
 | last4 = Horton | first4 = Thomas
 | last5 = Mead | first5 = Nancy
 | last6 = Rada | first6 = Roy
 | last7 = Ralston | first7 = Anthony
 | last8 = Rodkin | first8 = Craig
 | last9 = Rous | first9 = Bernard
 | journal = Computing Reviews
 | location = New York, NY, USA
 | publisher = ACM
 | pages = 1–5
 | title = Computing Classification System 1998: Current Status and Future Maintenance Report of the CCS Update Committee
 | url = http://www.acm.org/about/class/ccsup.pdf
 | year = 1998
 | last = Wierzbicki | first = Carol}}.
*{{citation
 | last1 = Mirkin | first1 = Boris
 | last2 = Nascimento | first2 = Susana
 | last3 = Pereira | first3 = Luis Moniz
 | contribution = Representing a Computer Science Research Organization on the ACM Computing Classification System
 | editor1-last = Eklund | editor1-first = Peter
 | editor2-last = Haemmerlé | editor2-first = Ollivier
 | pages = 57–65
 | publisher = RWTH Aachen University
 | series = CEUR Workshop Proceedings
 | title = Supplementary Proceedings of the 16th International Conference on Conceptual Structures (ICCS-2008)
 | url = http://ftp.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-354/p19.pdf
 | volume = 354
 | year = 2008}}.

==External links==
* [http://www.acm.org/class/ ACM Computing Classification System] is the homepage of the system, including links to three complete versions of the system, for 1964 [http://www.acm.org/class/1964/], 1991 [http://www.acm.org/class/class91-toc], and the current 1998 version [http://www.acm.org/class/1998/overview.html]
* [http://www.acm.org/class/1998/acmccs98-1.2.3.xml XML version of the ACM Computing Classification System version 1998]
* The [http://arxiv.org/corr/home ACM Computing Research Repository] uses a [http://arxiv.org/corr/subjectclasses classification scheme] that is much coarser than the ACM subject classification, and does not cover all areas of CS, but is intended to better cover active areas of research. In addition, papers in this repository are classified according to the ACM subject classification.

{{DEFAULTSORT:Acm Computing Classification System}}
[[Category:1964 introductions]]
[[Category:Classification systems]]
[[Category:Computer science literature]]
[[Category:ACM publications|*Computing Classification System]]
[[Category:Association for Computing Machinery|Computing Classification System]]

{{comp-sci-stub}}

[[de:CR Classification]]</text>
</page>
<page>
<id>292</id>
<title>ACM Crossroads</title>
<text>{{Infobox magazine
| title           = XRDS: Crossroads, The ACM Magazine for Students
| image_file      = <!-- cover.jpg (omit the "file: prefix -->
| image_size      = <!-- 220px (the default if no size is stated) -->
| image_alt       = 
| image_caption   = 
| editor          = Chris Harrison
| editor_title    = 
| previous_editor = 
| staff_writer    = 
| frequency       = Quarterly
| circulation     = 
| category        = [[Computer Science]]
| company         = 
| publisher       = [[Association for Computing Machinery]]
| firstdate       = Fall 1994<!-- {{Start date|year|month|day}} -->
| country         = 
| based           = 
| language        = English
| website         = http://xrds.acm.org/<!-- {{URL|example.com}} -->
| issn            = 1528-4972
}}
'''''XRDS: Crossroads, The ACM Magazine for Students''''', formerly called ''Crossroads'', is a quarterly [[computer science]] magazine for students, published in both print and electronic forms by the [[Association for Computing Machinery]] or ACM. The full text of every issue is available online to ACM members, with many articles selected by the editorial staff open to the general public. The first edition was published in 1994<sup>(ACM 2010)</sup>. It is run by students and supported by ACM headquarters staff, and accepts unsolicited submissions of articles targeting student readers<sup>(ACM 2010b)</sup>.

''Crossroads'' was ACM's first electronically produced publication. The magazine is distributed internationally. Issues exist for every quarter since Fall 1994, with a few extra, mid-Summer, issues <sup>(ACM 2010c)</sup>.

==List of editors-in-chief==
{| class=wikitable style="text-align:center"
! # 
! [[Editor-In-Chief]]
! Start of term
! End of term
|-
|1
|Saveen Reddy
|1994
|1994
|-
|2
|Lorrie Faith Cranor
|1994
|1996 
|-
|3
|John Cavanos
|1996
|1998 
|-
|4
|Lynellen D. S. Perry
|1998
|2001 
|-
|5
|Bill Stevenson
|2001
|2005
|-
|6
|Jerry Guo
|2006
|2009
|-
|7
|Chris Harrison
|2009
|Present<br>
|}

==Makeover==
The magazine was originally titled "Crossroads" but in May 2010, it was given a makeover and the title was replaced by the pseudo-acronym "XRDS". Prior to the makeover, the format of the magazine is similar to that of its more illustrious cousin, the [[Communications of the ACM]] where articles are summaries of interesting research papers. With the Summer 2010 issue of XRDS, ACM inaugurates a completely revamped edition of the magazine. Targeted to both graduate and undergraduate students contemplating computing careers, the newly redesigned XRDS offers breaking news and information, practical career advice, and first-hand stories and profiles of people on the front lines of the burgeoning computing field.

The new magazine and its website http://XRDS.acm.org reflect the real voices of today’s students, and will create a hub of interaction and communication for them to access.

XRDS has been designed as an easy-access resource for students who are focused on their futures. Readers now have a convenient channel to find valuable content not only on their field of study but on the student experience as well. With the magazines’ new website, students now have a central place where they can share their ideas and experiences through interactive features and by submitting articles for publication.

== References ==
*{{cite web|
author=XRDS staff|
title=Information about XRDS: Crossroads, The ACM Magazine for Students|
url=http://xrds.acm.org/about.cfm|
accessdate=2010-10-13|
year=2010|
author=ACM|
publisher=Association for Computing Machinery
}}
*{{cite web|
title=XRDS Author Guidelines|
year=2010b<!-- 10-13 -->|
accessdate=2010-10-13|
url=http://xrds.acm.org/authorguidelines.cfm |
author=XRDS editorial staff|
publisher=Association for Computing Machinery|
}}
*{{cite web|
title=XRDS: Crossroads: Magazine Archives|
year=2010c<!-- 10-13 -->||
url=http://xrds.acm.org/archives.cfm|
author=XRDS editorial staff|
publisher=Association for Computing Machinery|
accessdate=2010-10-13
}}
*{{cite web|
title=XRDS: Crossroads: About Us|
year=2010d<!-- 10-13 -->||
url=http://xrds.acm.org/aboutus.cfm|
author=XRDS editorial staff|
publisher=Association for Computing Machinery|
accessdate=2010-10-28
}}

== External links ==
* {{Officialb|=http://xrds.acm.org}}

[[Category:ACM publications|XRDS]]

[[es:ACM Crossroads]]</text>
</page>
<page>
<id>295</id>
<title>ACM International Collegiate Programming Contest</title>
<text>[[Image:Icpc logo.png|thumb|right|ACM ICPC logo]]
'''ACM International Collegiate Programming Contest''' (abbreviated as '''ACM-ICPC''' or just '''ICPC''') is an annual multi-tiered computer programming competition among the universities of the world. The contest is sponsored by [[IBM]].  Headquartered at [[Baylor University]], with autonomous regions on six continents, the ICPC is directed by Baylor Professor William B. Poucher, Executive Director, and operates under the auspices of the [[Association for Computing Machinery]] (ACM).

==History==
The ACM International Collegiate Programming Contest, [[ICPC]], traces its roots to a competition held at [[Texas A&M University]] in 1970 hosted by the Alpha Chapter of the [[Upsilon Pi Epsilon]] Computer Science Honor Society (UPE). The contest evolved into its present form as a multi-tier competition in 1977, with the first finals held in conjunction with the ACM Computer Science Conference.

From 1977 to 1989, the contest included mainly teams from [[United States|U.S.]] and [[Canada]].  Headquartered at [[Baylor University]] since 1989, with regionals established within the world's university community, operating under the auspices of ACM, and with substantial industry support, the ICPC has grown into a worldwide competition with teams from 84 countries in 2005.

Since the beginning of [[IBM]]'s sponsorship in 1997, contest participation has grown enormously. In 1997, 840 teams from 560 universities participated. In 2007, 6,700 teams from 1,821 universities participated. The number of teams keeps increasing by 10-20% every year and future competitions may be even larger.

The World Finals of the ACM International Collegiate Programming Contest World Finals, ACM-ICPC World Finals, is the final round of competition.  Over its history it has become a 4-day event held in the finest venues worldwide.  [[Upsilon Pi Epsilon|UPE]] recognizes all of the regional champions at the event. Recent World Champion teams have been recognized by their country's head of state and at the annual ACM Awards Ceremony.

==Contest rules==
The ICPC is a team competition. Current rules stipulate that each team consist of three students. Participants must be university students, who have had less than five years of university education before the contest. Students who have previously competed in two World Finals or five regional competitions are ineligible to compete again.<ref>{{cite web|url=http://icpc.baylor.edu/icpc/info/default.htm|title=Information - ACM International Collegiate Programming Contest|accessdate=2008-06-10}}</ref><ref>{{cite web|url=http://icpc.baylor.edu/icpc/Regionals/EligibilityDecisionTree.pdf|title=2008 ICPC Regionals Eligibility Decision Diagram|accessdate=2008-06-10|format=PDF}}</ref>

During contest, the teams are given 5 hours to solve between 8 and 12 programming problems (with 8 typical for regionals and 10 for finals). They must submit solutions as programs in [[C (programming language)|C]], [[C++]], or [[Java (programming language)|Java]]. Programs are then run on test data. If a program fails to give a correct answer, the team is notified about that and they can submit another program. 

The winner is the team which correctly solves most problems. If necessary to rank teams for medals or prizes among tying teams, the placement of teams is determined by the sum of the elapsed times at each point that they submitted correct solutions plus 20 minutes for each rejected submission of a problem ultimately solved.

For example, consider a situation when two teams, Red and Blue, tie by solving two problems each. The team Red submitted their solutions to A and B at 1:00 and 2:45 after the beginning of the contest. They had a rejected run on C, but it was ignored since they didn't solve C.  The team Blue submitted solutions to problems A and C at 1:20 and 2:00 after the beginning. They had one rejected run on C.  Then, the total time is 1:00+2:45=3:45 for team Red and 1:20+2:00+0:20=3:40 for team Blue.  The tie is broken in favor of Team Blue.

Compared to other programming contests (for example, [[International Olympiad in Informatics]]), the ICPC is characterized by a large number of problems (8 or more problems in just 5 hours). Another feature is that each team can use only one computer, although teams have three students. This makes the time pressure even greater. Good teamwork and ability to withstand pressure is needed to win.

==Regionals and World Finals==
The contest consists of several stages. Many universities hold local contests to determine participants at the regional level. Then, universities compete in Regional contests. Winners of Regional contests advance to the [[ACM-ICPC World Finals]]. More than one team from a university can compete in regionals, but only one may compete at the world finals.  From each region, at least one team goes to World Finals. Regions with large number of teams send multiple teams to finals (sometimes as many as 6 teams from one very large region).

* No participant can take part in more than two World Finals.
* Some large regions also hold Subregional competitions (also called Preliminaries) which are intermediate between local and regional contests.
* In ACM/ICPC, the result has seven different expressions (AC, WA, RTE, TLE, PE, MLE, CE).The result AC means the code is accepted by the system.

==2004 World Finals==
The 2004 ACM-ICPC World Finals were hosted at the Obecni Dum, [[Prague]], by [[Czech Technical University]] in Prague. 3,150 teams representing 1,411 universities from 75 countries competed in elimination rounds, with 73 of those teams proceeding to the world finals. St. Petersburg Institute of Fine Mechanics and Optics from [[Russia]] won, solving 7 of 10 problems.<ref>{{cite web|url=http://www.accessmylibrary.com/coms2/summary_0286-21344050_ITM|title=Queen's grabs glory: more than 70 teams from 31 countries gathered for the International Collegiate Programming Contest in Prague, hosted by the Association of Computing Machinery. Canadian universities took top honours.|date=2004-04-23|publisher=Computing Canada|accessdate=2008-06-09}}</ref> Gold medalists were St. Petersburg Institute of Fine Mechanics and Optics, KTH - Royal Institute of Technology (Sweden), Belarusian State University, and Perm State University (Russia).

==2005 World Finals==
[[Image:ICPC05OpenCeremony.jpg|thumb|left|200px|Opening Ceremony in 2005.]]
The 2005 world finals were held at [[Pudong Shangri-La Hotel]] in [[Shanghai]] on April 6, 2005, hosted by [[Shanghai Jiaotong University]]. 4,109 teams representing 1,582 universities from 71 countries competed in elimination rounds, with 78 of those teams proceeding to the world finals. [[Shanghai Jiaotong University]] won its second world title, with 8 of 10 problems solved. [http://web.archive.org/web/20051120072606/http://icpc.baylor.edu/icpc/finals/finals.html]  Gold medal winners were Shanghai Jiaotong, Moscow State University, St. Petersburg Institute of Fine Mechanics and Optics (Russia), and University of Waterloo (Canada).

==2006 World Finals==
The 2006 ACM-ICPC World Finals were held in [[San Antonio]], [[Texas]], and hosted by [[Baylor University]].<ref name="Sullivan">{{cite web|url=http://www.informationweek.com/news/hardware/desktop/showArticle.jhtml?articleID=184429155|title=Computing Students To Test Math, Programming Prowess|last=Sullivan |first=Laurie|date=2006-04-05|publisher=Information Week|accessdate=2008-06-09}}</ref> 5,606 teams representing 1,733 universities from 84 countries competed in elimination rounds, with 83 of those teams proceeding to the world finals. [[Saratov State University]] from [[Russia]] won, solving 6 of 10 problems.<ref>{{cite news|url=http://www.businessweek.com/magazine/content/06_18/b3982053.htm?chan=tc?campaign_id=rss_tech|title=A Red Flag In The Brain Game|date=2006-05-01|publisher=Business Week|accessdate=2008-06-09}}</ref> Gold medal winners were Saratov, Jagiellonian University (Poland), Altai State Technical University (Russia), University of Twente (The Netherlands).

==2007 World Finals==
The 2007 ACM-ICPC World Finals were held at the Tokyo Bay Hilton, in Tokyo, Japan, March 12-16, 2007. The World Finals was hosted by the ACM Japan Chapter and the IBM Tokyo Research Lab.  Some 6,099 teams competed on six continents at the regional level. Eighty-eight teams advanced to the World Finals. [[Warsaw University]] won its second world championship, solving 8 of 10 problems.  Gold Medal Winners were Warsaw University, Tsinghua University (China), St. Petersburg Institute of Fine Mechanics and Optics (Russia), and the Massachusetts Institute of Technology (United States).

==2008 World Finals==
The 2008 ACM-ICPC World Finals were held at the Fairmont Banff Springs Hotel, in Banff, Alberta, Canada, April 6-10, 2008.<ref name="earthtimes">{{cite web|url=http://www.earthtimes.org/articles/show/news_press_release,176538.shtml|title= IBM and Association for Computing Machinery Announce Global "Battle of the Brains" Software Competition|date=2007-09-12|accessdate=2008-06-09}}</ref>  The World Finals was hosted by the University of Alberta.  There were 100 teams in the World finals, out of 6700 total teams competing in the earlier rounds.<ref>{{cite web|url=http://cm2prod.baylor.edu/ICPCWiki/Wiki.jsp?page=History%20-%20ICPC%202008|title=ICPC 2008 World Finals Results|date=2009-04-01|accessdate=2009-04-13}}</ref> The [[St. Petersburg Institute of Fine Mechanics and Optics]] won their second world championship. [[Massachusetts Institute of Technology]], [[Izhevsk State Technical University]], and [[Lviv University|Lviv National University]] also received gold medals.

==2009 World Finals==
The 2009 ACM-ICPC World Finals were held in Stockholm, Sweden, April 18-22, at the Grand Hotel of Sweden, the Radisson Strand, and the Diplomat Hotel.  The World Finals was hosted by KTH - The Royal Institute of Technology.  There were 100 teams from over 200 regional sites to competing for the World Championship.  The [[St. Petersburg Institute of Fine Mechanics and Optics]] defended their championship title to win their third world championship. [[Tsinghua University]], [[St. Petersburg State University]], and [[Saratov State University]] also received gold medals.<ref>{{cite web|url=http://cm2prod.baylor.edu/ICPCWiki/Wiki.jsp?page=History%20-%20ICPC%202009|title=ICPC 2009 World Finals Results|date=2009-04-21|accessdate=2009-04-22}}</ref>

==2010 World Finals==
The 2010 ACM-ICPC World Finals were held in [[Harbin]], [[China]]. The host is [[Harbin Engineering University]]. [[Shanghai Jiao Tong University]] won the world championship.<ref>{{cite web|url=http://www.ibm.com/news/se/sv/2009/04/21/f367010a64679s25.html|title=Students from St. Petersburg won the IBM sponsored contest ACM-ICPC|date=2009-04-21|accessdate=2009-06-23}}</ref> [[Moscow State University]], [[National Taiwan University]], and [[Kiev_University|Taras Shevchenko Kiev National University]] also received gold medals.

==Winners==
{| class="wikitable sortable" align="right"
|+'''Top institutions'''
! Wins !! Institution !! Most Recent
|-

|-
| align="center"| 3 || [[Shanghai Jiao Tong University]] || 2010
|-
| align="center"| 3 || [[St. Petersburg Institute of Fine Mechanics and Optics|Saint Petersburg State University of Information Technologies, M & O]] || 2009
|-
| align="center"| 3 || [[Stanford University]] ||1991
|-
| align="center"| 2 || [[University of Warsaw]] || 2007
|-
| align="center"| 2 || [[Saint Petersburg State University]] || 2001
|-
| align="center"| 2 || [[University of Waterloo]] || 1999
|-
| align="center"| 2 || [[California Institute of Technology]] || 1988
|-
| align="center"| 2 || [[Washington University in St. Louis]] || 1980
|-
|}

* 2010 - [[Shanghai Jiao Tong University]], [[China]] 
* 2009 - [[St. Petersburg Institute of Fine Mechanics and Optics|Saint Petersburg State University of Information Technologies, Mechanics and Optics]], [[Russia]]
* 2008 - [[St. Petersburg Institute of Fine Mechanics and Optics|Saint Petersburg State University of Information Technologies, Mechanics and Optics]], [[Russia]]
* 2007 - [[University of Warsaw]], [[Poland]]
* 2006 - [[Saratov State University]], [[Russia]]
* 2005 - [[Shanghai Jiao Tong University]], [[China]] 
* 2004 - [[St. Petersburg Institute of Fine Mechanics and Optics|Saint Petersburg State University of Information Technologies, Mechanics and Optics]], [[Russia]]
* 2003 - [[University of Warsaw]], [[Poland]]
* 2002 - [[Shanghai Jiao Tong University]], [[China]]
* 2001 - [[St. Petersburg State University]], [[Russia]]
* 2000 - [[St. Petersburg State University]], [[Russia]]
* 1999 - [[University of Waterloo]], [[Canada]]
* 1998 - [[Charles University]], [[Czech Republic]]
* 1997 - [[Harvey Mudd College]], [[United States]]
* 1996 - [[University of California, Berkeley]], [[United States]]
* 1995 - [[Albert-Ludwigs-Universität]], [[Freiburg]], [[Germany]]

{| class="wikitable sortable" align="right"
|+'''By country'''
! Contests !! Country !! Most Recent
|-
| align="center"| 17 || {{flag|United States}} || 1997
|-
| align="center"| 6 || {{flag|Russia}} || 2009
|-
| align="center"| 3 || {{flag|China}} || 2010
|-
| align="center"| 2 || {{flag|Poland}} || 2007
|-
| align="center"| 2 || {{flag|Canada}} || 1999
|-
| align="center"| 1 || {{flag|Czech Republic}} || 1998
|-
| align="center"| 1 || {{flag|Germany}} || 1995
|-
| align="center"| 1 || {{flag|Australia}} || 1992
|-
| align="center"| 1 || {{flag|New Zealand}} || 1990
|-
|}

* 1994 - [[University of Waterloo]], [[Canada]]
* 1993 - [[Harvard University]], [[United States]]
* 1992 - [[University of Melbourne]], [[Australia]]
* 1991 - [[Stanford University]], [[United States]]
* 1990 - [[University of Otago]], [[New Zealand]]
* 1989 - [[University of California at Los Angeles]], [[United States]]
* 1988 - [[California Institute of Technology]], [[United States]]
* 1987 - [[Stanford University]], [[United States]]
* 1986 - [[California Institute of Technology]], [[United States]]
* 1985 - [[Stanford University]], [[United States]]
* 1984 - [[Johns Hopkins University]], [[United States]]
* 1983 - [[University of Nebraska]], [[United States]]
* 1982 - [[Baylor University]], [[United States]]
* 1981 - [[Missouri University of Science and Technology|University of Missouri–Rolla]], [[United States]]
* 1980 - [[Washington University in St. Louis]], [[United States]]
* 1979 - [[Washington University in St. Louis]], [[United States]]
* 1978 - [[Massachusetts Institute of Technology]], [[United States]]
* 1977 - [[Michigan State University]], [[United States]]

== See also ==
* [[International Olympiad in Informatics]], a similar competition for secondary school students.
* [[Online judge]], a service to practice for programming contests and run them online
* [[PC²]], the Programming Contest Control System in support of Computer Programming Contest activities
* [[SPOJ]] 
* [[TopCoder]]
* [[UVa Online Judge]]

==References==
{{Reflist|2}}

==External links==
===Official website===
* [http://cm.baylor.edu/welcome.icpc Official Website of the ACM-ICPC] - maintained at [[Baylor University]].

===ICPC Blogs===
* [http://www.acmsolver.org/ ACMSolver] - maintained by Ahmed Shamsul Arefin [http://www.daffodilvarsity.edu.bd/acmsolver/asarefin/]
* [http://shygypsy.com/acm/ Igor's UVa] - maintained by Igor Naverniouk [http://www.cs.toronto.edu/~igor/]
* [http://www.kurniady.net/ Andrian Kurniady's ICPC event blog] - maintained by Andrian Kurniady
* [http://codeforces.com/ Codeforces blogs]

===ICPC Training===
* [http://www.algorithmist.com/index.php/Main_Page Algorithmist] - maintained by Algorithmist Team
* [http://moodle.cs.uct.ac.za/course/view.php?id=31 ICPC Training wiki] - maintained by Department of Computer Science at the University of Cape Town.
* [http://www.comp.nus.edu.sg/~stevenha/programming/acmoj.html Steven Halim's Method to solve ACM UVa OJ Problems] - maintained by Steven Halim
* [http://cs.sunysb.edu/~algorith/ The Stony Brook Algorithm Repository] - maintained by Steven Skiena [http://cs.sunysb.edu/~algorith/].
* [http://www.programming-challenges.com/pg.php?page=index Programming Challenges] - maintained by Miguel Revilla
* [http://acm.uva.es/board/ UVa Online Judge Board] - maintained by [http://online-judge.uva.es/ Universidad de Valladolid Online Judge]
* [http://coj.uci.cu/ Caribbean training platform] - maintained by Xtreme Team
* [http://codechef.com/ CodeChef] - maintained by [http://directi.com/ Directi Group]
* [http://www.hello-world.co.kr Hello-World] - maintained by Sang Song

{{DEFAULTSORT:Acm International Collegiate Programming Contest}}
[[Category:Programming contests]]
[[Category:Baylor University]]

[[bn:????? ??????????? ????????? ??????????? ???????????]]
[[de:ACM International Collegiate Programming Contest]]
[[es:Competición Internacional Universitaria ACM de Programación]]
[[fa:?????? ????????]]
[[fr:ACM International Collegiate Programming Contest]]
[[ja:ACM??????????????????]]
[[pl:Akademickie Mistrzostwa Swiata w Programowaniu Zespolowym]]
[[pt:ACM International Collegiate Programming Contest]]
[[ru:????????????? ???????????? ????????? ?? ????????????????]]
[[zh:ACM???????????]]</text>
</page>
<page>
<id>297</id>
<title>ACM Portal</title>
<text>The '''ACM Portal''' is an online service of the [[Association for Computer Machinery]]. <ref name=portal>[http://portal.acm.org/ ACM Portal]</ref> Its core are two main sections: '''ACM Digital Library''' ('''ACM DL'''),  and the '''Guide to Computing Literature'''.<ref>[http://www.libs.uga.edu/research/subject/computer-science The University of Gerogia Guide to Online Resources]</ref>

The ACM Digital Library is the full-text collection of all articles published by the ACM in its articles, magazines and conference proceedings. The Guide is a bibliography in computing with over one million entries.<ref name=portal/>

==See also==
*[[IEEE Xplore]]

==References==
{{reflist}}

[[Category:Association for Computing Machinery]]
[[Category:Digital library projects]]
[[Category:Online databases]]
[[Category:Bibliographic databases]]
[[Category:Bibliographic databases in computer science]]</text>
</page>
<page>
<id>299</id>
<title>ACM SIGACT</title>
<text>'''ACM SIGACT''' or '''SIGACT''' is the [[Association for Computing Machinery]] [[Special Interest Group]] on Algorithms and Computation Theory, whose purpose is support of research in [[theoretical computer science]].

==Publications==
SIGACT publishes a quarterly print newsletter, '''''SIGACT News'''''. Its online version, ''SIGACT News Online'', is available since 1996 for SIGACT members, with unrestricted access to some features.

==Conferences==
SIGACT sponsors a number of annual conferences.

*COLT: [[Conference on Learning Theory]]
*PODC: ACM [[Symposium on Principles of Distributed Computing]] (jointly sponsored by [[SIGOPS]])
*PODS: ACM [[Symposium on Principles of Database Systems]]
*POPL: ACM [[Symposium on Principles of Programming Languages]]
*SoCG: ACM [[Symposium on Computational Geometry]] (jointly sponsored by [[SIGGRAPH]])
*SODA: ACM/SIAM [[Symposium on Discrete Algorithms]] (jointly sponsored by the [[Society for Industrial and Applied Mathematics]]). Two annual workshops held in conjunction with SODA also have the same joint sponsorship:
**ALENEX: Workshop on Algorithms and Experiments
**ANALCO: Workshop on Analytic Algorithms and Combinatorics
*SPAA: ACM [[Symposium on Parallelism in Algorithms and Architectures]]
*STOC: ACM [[Symposium on the Theory of Computing]]

COLT, PODC, PODS, POPL, SODA, and STOC are all listed as highly cited venues by both citeseerx<ref>[http://citeseerx.ist.psu.edu/stats/venues citeseerx venue impact factor], citeseerx.</ref> and libra.<ref>[http://libra.msra.cn/conf_category_24.htm Libra Conferences], LIBRA.</ref>

==Awards and prizes==
*[[Gödel Prize]], for outstanding papers in  theoretical computer science (sponsored jointly with [[EATCS]])
*[[Donald E. Knuth Prize]], for outstanding contributions to the foundations of computer science (sponsored jointly with [[IEEE Computer Society]]'s Technical Committee on the Mathematical Foundations of Computing)
*[[Edsger W. Dijkstra Prize]] in distributed computing (sponsored jointly with [[SIGOPS]], [[EATCS]], and companies)<ref>[[Symposium on Principles of Distributed Computing|PODC]] web site: [http://www.podc.org/dijkstra/ Edsger W. Dijkstra Prize in Distributed Computing].</ref>
*[[Paris Kanellakis Theory and Practice Award]], for theoretical accomplishments of significant and demonstrable effect on the practice of computing ([[Association for Computing Machinery|ACM]] Award co-sponsored by SIGACT)
*[[Eugene L. Lawler Award]] for Humanitarian Contributions within Computer Science and Informatics (ACM Award co-sponsored by SIGACT)
*[[Danny Lewin Best Student Paper Award]]
*Best Paper Award for ACM [[Symposium on Theory of Computing|STOC]] and [[Institute of Electrical and Electronics Engineers|IEEE]] [[Symposium on Foundations of Computer Science|FOCS]] conference papers
*ACM SIGACT Distinguished Service Award

==Notes==
{{reflist}}

==External links==
*[http://sigact.acm.org/ SIGACT webpage]
*[http://portal.acm.org/browse_dl.cfm?idx=J697 SIGACT News on ACM Digital Library]

[[Category:Association for Computing Machinery Special Interest Groups]]
[[Category:Theoretical computer science]]</text>
</page>
<page>
<id>300</id>
<title>ACM SIGGRAPH</title>
<text>{{about|the professional organization for computer graphics|the annual conference sponsored by this organization|SIGGRAPH}}
'''ACM SIGGRAPH''' is the New York–based [[Association for Computing Machinery]]'s [[Special Interest Group]] on Computer Graphics and Interactive Techniques. It was founded in 1969 by [[Andries van Dam|Andy van Dam]] (its direct predecessor, ACM SICGRAPH was founded two years earlier in 1967).<ref>ACM SIGGRAPH: "[http://www.siggraph.org/programs/pioneers/reception Personal Reflections on four decades of Computer Graphics]"</ref>

ACM SIGGRAPH convenes the annual [[SIGGRAPH]] conference, attended by tens of thousands of computer professionals. The organization also sponsors other conferences around the world, and regular events are held by its professional and student chapters in several countries. The organization's stated values are excellence, integrity, volunteerism, passion and cross-disciplinary interaction.

''[[Computer Graphics (publication)|Computer Graphics]]'' is the quarterly [[periodical publication]] of ACM SIGGRAPH.

==See also==
* [[Association for Computing Machinery]]
* [[ACM Transactions on Graphics]]
* [[Computer Graphics (publication)]]
* [[SIGGRAPH|SIGGRAPH Conferences]]

==References==
{{reflist}}

==External links==
*[http://wiki.siggraph.org/ ACM SIGGRAPH wiki]
*[http://www.siggraph.org/ ACM SIGGRAPH website]
*[http://www.siggraph.org/mainblog/ ACM SIGGRAPH blog]
*[http://chapters.siggraph.org/ ACM SIGGRAPH chapters]

{{compu-graphics-stub}}

{{DEFAULTSORT:Acm Siggraph}}
[[Category:Association for Computing Machinery Special Interest Groups]]
[[Category:Computer graphics organizations]]
[[Category:Organizations established in 1969]]

[[fr:Pôle Graphisme et Infographie de l'ACM]]</text>
</page>
<page>
<id>308</id>
<title>ACORD</title>
<text>'''ACORD''', the Association for Cooperative Operations Research and Development, is the [[insurance]] industry's nonprofit standards developer, a resource for information about [[object technology]], [[EDI]], [[XML]] and [[electronic commerce]] in the United States and abroad.

ACORD's most widely known accomplishment is the publication and maintenance of a huge library of standardized forms for the insurance industry.  Most claims in the U.S. are recorded or transmitted on ACORD forms.  

==External links==
*[http://www.acord.org www.acord.org]

[[Category:Computer-related organizations]]</text>
</page>
<page>
<id>317</id>
<title>AD-AS model</title>
<text>{{Cleanup|date=November 2008}}
The '''AD-AS''' or '''Aggregate Demand-Aggregate Supply model''' is a [[macroeconomic model]] that explains [[price level]] and [[output (economics)|output]] through the relationship of [[aggregate demand]] and [[aggregate supply]]. It is based on the theory of [[John Maynard Keynes]] presented in his work ''[[The General Theory of Employment, Interest, and Money]]''. One of the primary simplified representations in the modern field of [[macroeconomics]], and is used by a broad array of economists, from [[libertarian]], [[Monetarist]] supporters of [[laissez-faire]], such as [[Milton Friedman]] to [[Post-Keynesian economics|Post-Keynesian]] supporters of [[economic interventionism]], such as [[Joan Robinson]].

==Modeling==
The AD/AS model is used to illustrate the [[Keynesian economics|Keynesian]] model of the [[business cycle]]. Movements of the two curves can be used to predict the effects that various [[exogeny|exogenous]] events will have on two variables:  real [[GDP]] and the [[price level]].  Furthermore, the model can be incorporated as a component in any of a variety of dynamic models (models of how variables like the price level and others evolve over time).  The AD-AS model can be related to the [[Phillips curve]] model of wage or price inflation and unemployment.

==Aggregate demand curve==
{{main|Aggregate Demand}}
The AD curve is defined by the IS-LM equilibrium income at different potential price levels. 
The equation for the AD curve in general terms is:

: <math>Y=Y^{d}(\tfrac{M}{P}, G, T, Z_1)</math>

where Y is real [[GDP]], M is the nominal [[money supply]], G is real [[government spending]], T is an exogenous component of real taxes levied, P is the [[price level]], and Z<sub>1</sub> is a vector of other exogenous variables that affect the location of the IS curve (exogenous influences on any component of spending) or the LM curve (exogenous influences on money demand).  The real money supply has a positive effect on aggregate demand, as does real government spending (meaning that when the independent variable changes in one direction, aggregate demand changes in the same direction); the exogenous component of taxes has a negative effect on it.

==Aggregate supply curve==
{{main|Aggregate supply}}
The aggregate supply curve may reflect either labor market disequilibrium or labor market equilibrium. In either case, it shows how much output is supplied by firms at various potential price levels.

The equation for the aggregate supply curve in general terms for the case of excess supply in the labor market, called the short-run aggregate supply curve, is  
:<math>Y=Y^{s}(W/P, \ \  P/P^{e}, \ \  Z_2)</math>

where W is the nominal wage rate (exogenous due to stickiness in the short run), P<sup>e</sup> is the anticipated (expected) price level, and Z<sub>2</sub> is a vector of exogenous variables that can affect the position of the labor demand curve (the capital stock or the current state of technological knowledge).  The real wage has a negative effect on firms' employment of labor and hence on aggregate supply.  The price level relative to its expected level has a positive effect on aggregate supply because of firms' mistakes in production plans due to mis-predictions of prices.

The long-run aggregate supply curve refers not to a time frame in which the capital stock is free to be set optimally (as would be the terminology in the micro-economic theory of the firm), but rather to a time frame in which wages are free to adjust in order to equilibrate the labor market and in which price anticipations are accurate.  In this case the nominal wage rate is endogenous and so does not appear as an independent variable in the aggregate supply equation.  The long-run aggregate supply equation is simply
:<math>Y=Y^{s}(Z_2)</math>

and is vertical at the full-employment level of output. In this long-run case, Z<sub>2</sub> also includes factors affecting the position of the labor supply curve (such as population), since in labor market equilibrium the location of labor supply affects the labor market outcome.

==Shifts of aggregate demand and aggregate supply==
The following summarizes the exogenous events that could shift the aggregate supply or aggregate demand curve to the right.  Of course, exogenous events happening in the opposite direction would shift the relevant curve in the opposite direction.

===Shifts of aggregate demand===
The following exogenous events would shift the aggregate demand curve to the right.  As a result, the price level would go up.  In addition if the time frame of analysis is the short run, so the aggregate supply curve is upward sloping rather than vertical, real output would go up; but in the long run with aggregate supply vertical at full employment, real output would remain unchanged.

Aggregate demand shifts emanating from the IS curve:
* An exogenous increase in consumer spending
* An exogenous increase in investment  spending on [[physical capital]]
* An exogenous increase in intended inventory investment 
* An exogenous increase in government spending on goods and services
* An exogenous increase in [[transfer payments]] from the government to the people
* An exogenous decrease in taxes levied
* An exogenous increase in purchases of the country's exports by people in other countries
* An exogenous decrease in imports from other countries

Aggregate demand shifts emanating from the LM curve:
* An exogenous increase in the nominal money supply
* An exogenous decrease in the demand for money (in liquidity preference)

===Shifts of aggregate supply===
The following exogenous events would shift the short-run aggregate supply curve to the right.  As a result, the price level would drop and real GDP would increase.
* An exogenous decrease in the wage rate
* An increase in the physical capital stock
* Technological progress &mdash; improvements in our knowledge of how to transform capital and labor into output

The following events would shift the long-run aggregate supply curve to the right:
* An increase in population
* An increase in the physical capital stock
* Technological progress

==See also==
* [[IS/LM model]]
* [[AD-IA Model]]
* [[DAD-SAS model]]

==External links==
{{commonscat|Aggregate supply and demand curves}}
* [http://www.sparknotes.com/economics/macro/aggregatesupply/section3.rhtml Sparknotes: Aggregate Supply and Aggregate Demand] brief explanation of the AD-AS model
* [http://ingrimayne.com/econ/optional/ISLM/Aggregate.html "Aggregate Demand and Aggregate Supply" in ''CyberEconomics'' by Robert Schenk] explains the AD-AS model and explains its relation to the IS/LM model
* [http://www.whitenova.com/thinkEconomics/simul.html "ThinkEconomics: Macroeconomic Phenomena in the AD/AS Model"] includes an interactive graph demonstrating inflationary changes in a graph based on the AD-AS model
* [http://www.whitenova.com/thinkEconomics/adas.html  "ThinkEconomics: The Aggregate Demand and Aggregate Supply Model"] includes an interactive AD-AS graph that tests one's knowledge of how the AD and AS curves shift under different conditions

===Scholarly articles===
* Dutt, Amitava K.and Skott, Peter.  [http://www.umass.edu/economics/publications/2005-11.pdf "Keynesian Theory and the AD-AS Framework: A Reconsideration,"] Working Papers 2005-11, University of Massachusetts Amherst, Department of Economics. 2005.
*  Palley, Thomas I. [http://findarticles.com/p/articles/mi_qa3620/is_199710/ai_n8761314 "Keynesian theory and AS/AD analysis"]. ''Eastern Economic Journal'',  Fall 1997.
* Amitava Krishna Dutt and Skott, Peter. [http://www.findarticles.com/p/articles/mi_qa3620/is_199607/ai_n8742630 "Keynesian Theory and the Aggregate-Supply/Aggregate-Demand Framework: A Defense,"] Eastern Economic Journal, Eastern Economic Association, vol. 22(3), pages 313-331, Summer 1996.

[[Category:Macroeconomics]]
[[Category:Economics models]]
[[Category:Economics curves]]

{{Link GA|de}}

[[da:AD-AS-modellen]]
[[de:AS-AD-Modell]]
[[it:Modello AD-AS]]
[[lv:AD/AS modelis]]
[[lt:AS-AD modelis]]
[[ru:?????? AD-AS]]
[[vi:Mô hình t?ng c?u và t?ng cung]]</text>
</page>
<page>
<id>321</id>
<title>ADAPA</title>
<text>{{Fanpov|date=August 2010}}

:''This article is about a decision engine. For the Babylonian and Summerian god of wisdom, see [[Adapa]].'' 

'''ADAPA''' is intrinsically a predictive decisioning platform. It combines the power of [[predictive analytics]] and [[business rules]] to facilitate the tasks of managing and designing automated decisioning systems. 

==Automated decisions==
When first released, ADAPA (Adaptive Decision And Predictive Analytics) was purely a scoring engine, used to produce scores out of [[statistical model]]s expressed in [[PMML]] (Predictive Model Markup Language) format. With the addition of a rules engine to its core, ADAPA is now able to seamlessly combine rules and predictive models, which enables businesses to manage and design automated decisioning systems. In this way, ADAPA allows for the concretization of [[Enterprise Decision Management]] (EDM) solutions.

==PMML support and predictive analytics==
[[Predictive analytics]] comprises a series of modeling techniques which can be used to extract relevant patterns present in large amounts of data to better predict the future.

ADAPA is able to generate scores out of a variety of predictive modeling techniques expressed in [[PMML]]. PMML provides a standard way for the expression of predictive models. In this way, proprietary issues and incompatibilities are no longer a barrier to the exchange of models between applications. 

Currently, ADAPA supports the following PMML elements:

[[File:ADAPA3.0 TwoinOne.png|right|350px|H3|]]

* [[Decision tree learning|Decision Trees]]
* [[Neural Networks]]
* Clustering Models
* Naive Bayes Classifiers
* [[Support Vector Machines]]
* Ruleset Models
* Linear and [[Logistic regression]] as well as all general regression PMML models:
** Multinomial Logistic
** General Linear
** Ordinal Multinomial
** Simple Regression
** [[Generalized linear model]]
** Cox Regression Models

as well as a variety of elements involved in data pre- and post-processing:

* Built-in Functions (logic and arithmetic operators as well as IF-THEN-ELSE)
* Normalization
* Discretization
* Value Mapping
* Functions
* Targets/Scaling
* Outputs
* Model Verification (which in ADAPA can also take the form of a CSV file)

Once a model is uploaded in ADAPA, it can be executed in batch and real-time. ADAPA is a PMML consumer, therefore it is able to execute PMML code exported from tools such as R, SPSS, IBM, SAS, KNIME, KXEN, RapidMiner, etc. 

Besides offering a web-based console to manage models and rule sets, ADAPA includes capabilities to test these under its decision and validation framework.

==Business rules==

[[Business rules]] allow for business process and logic to be expressed outside of programming code. With ADAPA, the integration of predictive analytics and rules is seamless. Simply put, ADAPA allows both data-driven and expert knowledge to be combined into a single and concise solution, executed in real-time or in batch-mode. 

ADAPA allows for business knowledge to be expressed in simple tabular format. In ADAPA, rules can be used to manage the execution of different predictive models depending on the business context. They can also incorporate scores generated by different predictive models throughout the business process. The acting together of the two technologies has the potential to significantly extend the precision of any decision logic. 

ADAPA rules leverage the power of the leading Java [[open-source]] rules engine [[Drools]] which is supported by a strong community of developers and JBoss, a division of [[Red Hat]]. This fast, highly efficient rules engine has proven its excellence in numerous commercial installations. 

All decisions in ADAPA are readily available by the use of [[Web Services]].

==ADAPA To Go==
===PMML Converter===
[[Zementis Inc]] (the maker of ADAPA) has released a PMML converter as an iGoogle gadget. This allows for users to convert older PMML models (versions 2.0, 2.1, 3.0, 3.1, and 3.2) to version 4.0. Besides schema validation, the PMML Converter automatically corrects known issues with PMML code from several sources/vendors. The aim is to successfully validate code in older versions of PMML and convert them to PMML 4.0. Files in PMML 4.0 can also be passed through the converter so that they can be corrected and validated against the 4.0 schema.

The PMML Converter is also embedded in ADAPA itself. And so, if you use ADAPA, there is no need to convert your files, ADAPA will automatically do that for you.

===Software as a Service on the Amazon Cloud===
ADAPA predictive analytics is available through the [[Amazon Elastic Compute Cloud]] (Amazon EC2). It provides the first [[SaaS]] (Software as a Service) predictive decisioning platform. The user can upload and manage several rule sets as well as models expressed in PMML and score data in real-time through the use of web-service calls (ADAPA will automatically convert older versions of PMML to version 3.2 and correct any known issues from different vendors). ADAPA as a Service empowers people, since it allows for anyone anywhere to deploy and use state of the art data mining models.

===ADAPA Add-in for Microsoft Office Excel===
To make the process of executing predictive models even simpler, Zementis also offers the ADAPA add-in for Excel 2007 and 2010 (available for free). With the add-in, anyone in the enterprise is able to score data in Excel by executing models previously deployed in the Cloud.

ADAPA allows for real-time data scoring at any time a new event occurs since it can be used from inside any application via Web Service Calls. Excel is just one such application which happens to be a very well known tool (used by many). This is remarkable, since it frees users from having to deal with all the technology required for scoring their data whenever necessary. With the Excel add-in, all one has to do is to select which data records to score (or the columns and rows containing the relevant data) and pressing on the “Score” button in Excel … et voila’ … new predictions are generated automatically for all selected records.

==ADAPA Flavors==
ADAPA is currently being offered in two ways:
* [http://www.zementis.com/on-the-cloud.htm On the Cloud]: launch your own private instances of ADAPA on the Amazon Cloud.  
* [http://www.zementis.com/site-tour.htm On Site]: ADAPA is also available for deployment on site or on your private cloud.

==References==
* R. Nisbet, J. Elder, and G. Miner. ''Handbook of Statistical Analysis and Data Mining Applications''. Academic Press, 2009.
* A. Guazzelli, M. Zeller, W. Lin, and G. Williams. [http://journal.r-project.org/2009-1/RJournal_2009-1_Guazzelli+et+al.pdf PMML: An Open Standard for Sharing Models]. ''The R Journal'', Volume 1/1, May 2009.
* A. Guazzelli, K. Stathatos, M. Zeller. [http://www.sigkdd.org/explorations/issues/11-1-2009-07/p5V11n1.pdf Efficient Deployment of Predictive Analytics through Open Standards and Cloud Computing]. ''The ACM SIGKDD Explorations Newsletter'', Volume 11/1, July 2009.
* A. Guazzelli, W. Lin, T. Jena (2010). [http://www.amazon.com/dp/1452858268 PMML in Action: Unleashing the Power of Open Standards for Data Mining and Predictive Analytics]. CreateSpace.

==External links==
*[http://smartenoughsystems.com/wp/2008/06/20/buying-predictive-analytics-like-books-zementis-adapa/ Buying predictive analytics like books] - Smart Enough Systems blog on the ADAPA Amazon EC2 offering.
*[http://www.google.com/ig/adde?hl=en&moduleurl=hosting.gmodules.com/ig/gadgets/file/115640297026242314759/converterwidget.xml PMML Converter iGoogle gadget] - gadget to convert older versions of PMML to PMML 3.2.
*[http://adapasupport.zementis.com ADAPA support] - blogs providing support for the ADAPA demo and the PMML converter gadgets as well as the paid version of ADAPA - Amazon EC2.
*[http://www.zementis.com/index.htm ADAPA product page] - contains information about ADAPA on the Cloud, on Site, and the add-in for Excel.
*[http://www.zementis.com/newsletter.htm Deploy! Newsletter] - monthly newsletter containing the latest news on ADAPA and predictive analytics.
*[http://www.zementis.com/pmml.htm PMML] - PMML resources page including examples and conversion tool.
*[http://www.zementis.com/videos.htm Videos] - on-line video tutorials about ADAPA, Excel add-in, PMML, ...
*[http://www.dmg.org/ Data Mining Group (DMG)] - describes PMML, the Predictive Modeling Markup Language, as well as gives information on all the companies currently supporting the standard. 
*[http://labs.jboss.com/drools/ Drools homepage]
*[http://adapasupport.zementis.com/2009/06/pmml-40-is-here.html PMML 4.0 is here!] - gives a short summary of the new features of the latest release of PMML.
*[http://www.amazon.com/dp/1452858268 PMML in Action] - PMML book available on Amazon (NEW).
*[http://www.youtube.com/watch?v=zm9DseCv2T0 Zoey tells it all!] - YouTube video in which Zoey describes PMML, ADAPA, and Zementis.

{{DEFAULTSORT:Adapa}}
[[Category:Statistical software]]
[[Category:Business intelligence]]
[[Category:Data analysis software]]</text>
</page>
<page>
<id>352</id>
<title>AGRICOLA</title>
<text>{{Infobox Bibliographic Database
|title = AGRICOLA
|image =
|caption =
|producer = [[United States Department of Agriculture]]
|country = [[United States|USA]]
|history =
|languages = [[English language|English]]
|providers = [[United States Department of Agriculture]]
|cost = Free
|disciplines = [[Agriculture]]
|depth = Index, some abstracts
|formats = Journals, Books, Audiovisual, other
|temporal = 1600s - present
|geospatial =
|number =
|updates = Daily
|p_title =
|p_dates =
|ISSN =
|web = http://agricola.nal.usda.gov/
|titles =  http://riley.nal.usda.gov/nal_display/index.php?info_center=8&tax_level=2&tax_subject=157&topic_id=2010
}}

'''''AGRICOLA (AGRICultural OnLine Access)''''' is a database created and maintained by the [[United States Department of Agriculture]].  The database serves as the catalog and index for the collections of the [[United States National Agricultural Library]], but it also provides public access to information on [[agriculture]] and allied fields.<ref>{{cite web|url=http://agricola.nal.usda.gov/help/aboutagricola.html|title=About the NAL Catalog: AGRICOLA|publisher=National Agricultrual Library|accessdate=2009-10-16}}</ref>

==Coverage==

AGRICOLA indexes a wide variety of publications covering agriculture and its allied fields, including, "[[animal science|animal]] and [[veterinary science]]s, [[entomology]], [[plant science]]s, [[forestry]], [[aquaculture]] and [[fisheries]], [[farming]] and [[farming systems]], [[agricultural economics]], [[agricultural extension|extension]] and [[education]], [[food science|food]] and [[human nutrition]], and [[earth science|earth]] and [[environmental science]]s."<ref>{{cite web|url=http://agricola.nal.usda.gov/help/aboutagricola.html|title=About the NAL Catalog: AGRICOLA|publisher=National Agricultrual Library|accessdate=2009-10-16}}</ref>

==External links==
* [http://riley.nal.usda.gov/nal_display/index.php?info_center=8&tax_level=2&tax_subject=157&topic_id=2010 Journals Indexed in AGRICOLA]

==References==
<references/>

{{DEFAULTSORT:Agricola}}
[[Category:Bibliographic databases]]
[[Category:United States Department of Agriculture]]


{{database-stub}}</text>
</page>
<page>
<id>357</id>
<title>AI@50</title>
<text>'''AI@50''', formally known as the "'''Dartmouth Artificial Intelligence Conference: The Next Fifty Years'''" (July 13–15, 2006), was a conference commemorating the 50th anniversary of the [[Dartmouth Conferences]] which effectively inaugurated the [[history of artificial intelligence]].  Five of the original ten attendees were present: [[Marvin Minsky]], [[Ray Solomonoff]], [[Oliver Selfridge]], [[Trenchard More]], and [[John McCarthy (computer scientist)|John McCarthy]].<ref>{{Cite book| publisher = Cambridge University Press| isbn = 0521122937| author=Nilsson, Nils J.| last = Nilsson| first = Nils J.| authorlink=Nils Nilsson (researcher)| title = The Quest for Artificial Intelligence| year = 2009}} pp. 80-81</ref>

While sponsored by [[Dartmouth College]], [[General Electric]], and the [[Frederick Whittemore Foundation]], a $200,000 grant from the [[DARPA|Defense Advanced Research Projects Agency (DARPA)]] called for a report of the proceedings that would:

* Analyze progress on AI's original challenges during the first 50 years, and assess whether the challenges were "easier" or "harder" than originally thought and, why

* Document what the AI@50 participants believe are the major research and development challenges facing this field over the next 50 years, and identify what breakthroughs will be needed to meet those challenges

* Relate those challenges and breakthroughs against developments and trends in other areas such as control theory, signal processing, information theory, statistics, and optimization theory.<ref>{{cite news|last=Knapp|first=Susan|title=Dartmouth receives grant from DARPA to support AI@50 conference |url=http://www.dartmouth.edu/~news/releases/2006/07/06.html|accessdate=2010-06-11|newspaper=Dartmouth College Office of Public Affairs|date=2006-07-06}}</ref>  

A summary report by the conference director, James Moor, was published in [[AI Magazine]]<ref>{{Cite journal
| volume = 27 | issue = 4 | pages = 87–91 | last = Moor | first = James | title = The Dartmouth College Artificial Intelligence Conference: The Next Fifty Years| journal = AI Magazine | year = 2006| url = http://www.aaai.org/ojs/index.php/aimagazine/article/view/1911/1809
| format=PDF}}</ref> .

== Conference Program and links to published papers ==

* [[James Moor]], conference Director, Introduction
* [[Carol Folt]] and [[Barry Scherr]], Welcome<ref>{{cite news|last=Knapp|first=Susan|title=Artificial Intelligence: Past, Present, and Future |url=http://www.dartmouth.edu/~vox/0607/0724/ai50.html|accessdate=2010-06-11|newspaper=Vox of Dartmouth|date=2006-07-24}}</ref>
* [[Carey Heckman]], Tonypandy and the Origins of Science

=== AI: Past, Present, Future ===

* [[John McCarthy (computer scientist)|John McCarthy]], What Was Expected, What We Did, and AI Today 
* [[Marvin Minsky]], [[The Emotion Machine]]

=== The Future Model of Thinking ===

* [[Ron Brachman]] and [[Hector Levesque]],  A Large Part of Human Thought
* [[David Mumford]], What is the Right Model for 'Thought'?
* [[Stuart Russell]], The Approach of Modern AI<ref>{{cite web|last=Russell|first=Stuart|title=The Approach of Modern AI|url=http://www.cs.berkeley.edu/~russell/talks/russell-dartmouth06.ppt|accessdate=2010-06-11|authorlink=Stuart Russell|format=PPT|date=2006-07-12}}</ref>

=== The Future of Network Models ===

* [[Geoffrey Hinton]] & [[Simon Osindero]], From Pandemonium to Graphical Models and Back Again
* [[Rick Granger]], From Brain Circuits to Mind Manufacture

=== The Future of Learning & Search ===

* [[Oliver Selfridge]], Learning and Education for Software: New Approaches in Machine Learning 
* [[Ray Solomonoff]], Machine Learning — Past and Future <ref>{{cite news | url = http://world.std.com/~rjs/dart.pdf  | title = Machine Learning -- Past and Future | author = [[Ray Solomonoff|Solomonoff, Ray J.]] | date = [[2006]] | accessdate = 2008-07-25 |format=PDF}}</ref>
* [[Leslie Pack Kaelbling]], Learning to be Intelligent  
* [[Peter Norvig]], Web Search as a Product of and Catalyst for AI

=== The Future of AI ===

* [[Rod Brooks]], Intelligence and Bodies 
* [[Nils Nilsson (researcher)|Nils Nilsson]], Routes to the Summit
* [[Eric Horvitz]], In Pursuit of Artificial Intelligence: Reflections on Challenges and Trajectories

=== The Future of Vision ===

* [[Eric Grimson]], Intelligent Medical Image Analysis: Computer Assisted Surgery and Disease Monitoring
* [[Takeo Kanade]], Artificial Intelligence Vision: Progress and Non-Progress 
* [[Terry Sejnowski]], A Critique of Pure Vision

=== The Future of Reasoning ===

* [[Alan Bundy]], Constructing, Selecting and Repairing Representations of Knowledge 
* [[Edwina Rissland]], The Exquisite Centrality of Examples
* [[Bart Selman]], The Challenge and Promise of Automated Reasoning

=== The Future of Language and Cognition ===

* [[Trenchard More]] The Birth of Array Theory and Nial 
* [[Eugene Charniak]], Why Natural Language Processing is Now Statistical Natural Language Processing 
* [[Pat Langley]], Intelligent Behavior in Humans and Machines <ref>{{cite news | url = http://cll.stanford.edu/~langley/papers/ai50.dart.pdf | title = Intelligent Behavior in Humans and Machines | author = [[Pat Langley|Langley, Pat]] | date = [[2006]] | accessdate = 2008-07-25 |format=PDF}}</ref>

=== The Future of the Future ===

* [[Ray Kurzweil]], Why We Can Be Confident of Turing Test Capability Within a Quarter Century <ref>{{cite news | url = http://www.kurzweilai.net/meme/frame.html?main=/articles/art0683.html | title = Why We Can Be Confident of Turing Test Capability Within a Quarter Century | author = [[Ray Kurzweil|Kurzweil, Ray]] | date = 2006-07-14 | accessdate = 2006-07-25 }}</ref>
* [[George Cybenko]], The Future Trajectory of AI 
* [[Charles Holland]], DARPA's Perspective

=== AI and Games ===

* [[Jonathan Schaeffer]], Games as a Test-bed for Artificial Intelligence Research" 
* [[Danny Kopec]], Chess and AI 
* [[Shay Bushinsky]], Principle Positions in Deep Junior's Development

=== Future Interactions with Intelligent Machines ===

* [[Daniela Rus]], Making Bodies Smart 
* [[Sherry Turkle]], From Building Intelligences to Nurturing Sensibilities

=== Selected Submitted Papers: Future Strategies for AI ===

* [[J. Storrs Hall]], Self-improving AI: An Analysis<ref>{{cite journal | title = Self-improving AI: An Analysis | journal = Minds and Machines | year = 2007 | first = J. Stoors | last = Hall | volume = 17 | issue = 3 | pages = 249–259| id =  {{doi | 10.1007/s11023-007-9065-3}} | url = http://www.springerlink.com/content/0n70u4l8q7235840/ | accessdate = 2010-06-10 |authorlink= J. Storrs Hall| quote = Self-improvement was one of the aspects of AI proposed for study in the 1956 Dartmouth conference. Turing proposed a “child machine” which could be taught in the human manner to attain adult human-level intelligence. In latter days, the contention that an AI system could be built to learn and improve itself indefinitely has acquired the label of the bootstrap fallacy. Attempts in AI to implement such a system have met with consistent failure for half a century. Technological optimists, however, have maintained that a such system is possible, producing, if implemented, a feedback loop that would lead to a rapid exponential increase in intelligence. We examine the arguments for both positions and draw some conclusions. }} [http://mol-eng.com/bootstrap.pdf Self-archive]</ref>  
* [[Selmer Bringsjord]], The Logicist Manifesto<ref>{{cite journal|last=Bringsjord|first=Selmer|title=The Logicist Manifesto: At Long Last Let Logic-Based AI Become a Field Unto Itself|journal=Journal of Applied Logic|year=2008|month=December|volume=6|issue=4|pages=502–525| id = {{doi |10.1016/j.jal.2008.09.001}} |url=http://www.sciencedirect.com/science?_ob=ArticleURL&_udi=B758H-4THJGN7-1&_user=10&_coverDate=12%2F31%2F2008&_rdoc=6&_fmt=high&_orig=browse&_srch=doc-info%28%23toc%2312927%232008%23999939995%23700611%23FLA%23display%23Volume%29&_cdi=12927&_sort=d&_docanchor=&_ct=15&_acct=C000050221&_version=1&_urlVersion=0&_userid=10&md5=7fc83ceaf3be566605e0e9d8a24b9283|accessdate=2010-06-10|authorlink=Selmer Bringsjord|quote=This paper is a sustained argument for the view that logic-based AI should become a self-contained field, entirely divorced from paradigms that are currently still included under the AI “umbrella”—paradigms such as connectionism and the continuous systems approach. The paper includes a self-contained summary of logic-based AI, as well as rebuttals to a number of objections that will inevitably be brought against the declaration of independence herein expressed.}}[http://kryten.mm.rpi.edu/SB_LAI_Manifesto_091808.pdf Self-archive]</ref>
* [http://www.typos.de/ Vincent C. Müller], Is There a Future for AI Without Representation?<ref>{{cite journal|last=Müller|first=Vincent C.|title=Is There a Future for AI Without Representation? |journal=Minds and Machines|year=2007|month=March|volume=17|issue=1|pages=101–115|doi=10.1007/s11023-007-9067-1|url=http://www.springerlink.com/content/t65jk1h2705383l8/|accessdate=2010-06-10|quote=This paper investigates the prospects of Rodney Brooks’ proposal for AI without representation. It turns out that the supposedly characteristic features of “new AI” (embodiment, situatedness, absence of reasoning, and absence of representation) are all present in conventional systems: “New AI” is just like old AI. Brooks proposal boils down to the architectural rejection of central control in intelligent agents—Which, however, turns out to be crucial. Some of more recent cognitive science suggests that we might do well to dispose of the image of intelligent agents as central representation processors. If this paradigm shift is achieved, Brooks’ proposal for cognition without representation appears promising for full-blown intelligent agents—Though not for conscious agents.}} [http://www.typos.de/pdf/2007_AI_without_representation_M&M.pdf Self-archive]</ref>
* [[Kristinn R. Thórisson]], Integrated A.I. Systems<ref>{{cite journal|last=Thórisson|first=Kristinn R. |title=Integrated A.I. systems |journal=Minds and Machines|year=2007|month=March|volume=17|issue=1|pages=11–25|doi=10.1007/s11023-007-9055-5|url=http://www.springerlink.com/content/y04485h9j3u8x431/|accessdate=2010-06-10|quote=The broad range of capabilities exhibited by humans and animals is achieved through a large set of heterogeneous, tightly integrated cognitive mechanisms. To move artificial systems closer to such general-purpose intelligence we cannot avoid replicating some subset—quite possibly a substantial portion—of this large set. Progress in this direction requires that systems integration be taken more seriously as a fundamental research problem. In this paper I make the argument that intelligence must be studied holistically. I present key issues that must be addressed in the area of integration and propose solutions for speeding up rate of progress towards more powerful, integrated A.I. systems, including (a) tools for building large, complex architectures, (b) a design methodology for building realtime A.I. systems and (c) methods for facilitating code sharing at the community level. }}</ref>

=== Selected Submitted Papers: Future Possibilities for AI ===

* [[Eric Steinhart]], Survival as a Digital Ghost<ref>{{cite journal|last=Steinhart|first=Eric|title=Survival as a Digital Ghost|journal=Minds and Machines|year=2007|month=October|volume=17|issue=3|pages=261–271|doi=10.1007/s11023-007-9068-0 |url=http://www.springerlink.com/content/w581g20mq8t68063/|accessdate=2010-06-10|quote=You can survive after death in various kinds of artifacts. You can survive in diaries, photographs, sound recordings, and movies. But these artifacts record only superficial features of yourself. We are already close to the construction of programs that partially and approximately replicate entire human lives (by storing their memories and duplicating their personalities). A digital ghost is an artificially intelligent program that knows all about your life. It is an animated auto-biography. It replicates your patterns of belief and desire. You can survive after death in a digital ghost. We discuss a series of digital ghosts over the next 50 years. As time goes by and technology advances, they are progressively more perfect replicas of the lives of their original authors. }}</ref> 
* [[Colin T. A. Schmidt]], Did You Leave That 'Contraption' Alone With Your Little Sister?<ref>{{cite journal|last=Schmidt|first=Colin T. A. |title=Children, Robots and... the Parental Role |journal=Minds and Machines|year=2007|month=October|volume=17|issue=3|pages=273–286|doi=10.1007/s11023-007-9069-z |url=http://www.springerlink.com/content/0j221030365x6127/?p=5f3b3d3214054a4395ec97df598c8683&pi=2|accessdate=2010-06-10|quote=The raison d’être of this article is that many a spry-eyed analyst of the works in intelligent computing and robotics fail to see the essential concerning applications development, that of expressing their ultimate  goal. Alternatively, they fail to state it suitably for the lesser-informed public eye. The author does not claim to be able to remedy this. Instead, the visionary investigation offered couples learning and computing with other related fields as part of a larger spectre to fully simulate people in their embodied image. For the first time, the social roles attributed to the technical objects produced are questioned, and so with a humorous illustration. }}</ref>
* [[Michael Anderson]]{{dn}} & [[Susan Leigh Anderson]], The Status of Machine Ethics<ref>{{cite journal|last=Anderson|first=Michael|coauthors=Susan Leigh Anderson|title=The status of machine ethics: a report from the AAAI Symposium |journal=Minds and Machines|year=2007|month=March|volume=17|issue=1|pages=	1–10|doi=10.1007/s11023-007-9053-7|url=http://www.springerlink.com/content/e502572456857542/|accessdate=2010-06-10|quote=This paper is a summary and evaluation of work presented at the AAAI 2005 Fall Symposium on Machine Ethics that brought together participants from the fields of Computer Science and Philosophy to the end of clarifying the nature of this newly emerging field and discussing different approaches one could take towards realizing the ultimate goal of creating an ethical machine. }}</ref> 
* [[Marcello Guarini]], Computation, Coherence, and Ethical Reasoning<ref>{{cite journal|last=Guarini|first=Marcello|title=	 Computation, Coherence, and Ethical Reasoning |journal=Minds and Machines|year=2007|month=March|volume=17|issue=1|pages=27–46|doi=10.1007/s11023-007-9056-4|url=http://www.springerlink.com/content/f125963057mu225g/|accessdate=2010-06-10|quote=Theories of moral, and more generally, practical reasoning sometimes draw on the notion of coherence. Admirably, Paul Thagard has attempted to give a computationally detailed account of the kind of coherence involved in practical reasoning, claiming that it will help overcome problems in foundationalist approaches to ethics. The arguments herein rebut the alleged role of coherence in practical reasoning endorsed by Thagard. While there are some general lessons to be learned from the preceding, no attempt is made to argue against all forms of coherence in all contexts. Nor is the usefulness of computational modelling called into question. The point will be that coherence cannot be as useful in understanding moral reasoning as coherentists may think. This result has clear implications for the future of Machine Ethics, a newly emerging subfield of AI. }}</ref>

== References ==

<!--See http://en.wikipedia.org/wiki/Wikipedia:Footnotes for an explanation of how to generate footnotes using the <ref(erences/)> tags-->
<references />

== External links ==
* [http://www.dartmouth.edu/%7Eai50/homepage.html Dartmouth Artificial Intelligence Conference: The Next Fifty Years], conference Web site
* [[Peter Norvig]], [http://pn.smugmug.com/Other-Events/AI50-Dartmouth-Conference/ Pictures from AI@50]

=== Notes and comments ===

* Meg Houston Maker [http://www.engagingexperience.com/], conference notes:

* AI@50 Opening [http://www.engagingexperience.com/2006/07/ai50_opening.html] 

* AI — Past, Present Future [http://www.engagingexperience.com/2006/07/ai50_ai_past_pr.html] — Brief abstracts of papers by John McCarthy and [[Marvin Minsky]]

:* The Future Model of Thinking [http://www.engagingexperience.com/2006/07/ai50_the_future.html] — Brief abstracts of papers by [[Ron Brachman]] , [[David Mumford]], and [[Stuart Russell]]

:* The Future of Network Models [http://www.engagingexperience.com/2006/07/ai50_the_future_1.html] — Brief abstracts of papers by [[Geoffrey Hinton]] and [[Simon Odinero]], and [[Rick Granger]]

:* The Future of Learning and Search [http://www.engagingexperience.com/2006/07/ai50_the_future_2.html] — Brief abstracts of papers by [[Oliver Selfridge]], [[Ray Solomonoff]], [[Leslie Pack Kaelbling]], and [[Peter Norvig]]

:* The Future of AI [http://www.engagingexperience.com/2006/07/ai50_the_future_3.html] — Brief abstracts of papers by [[Rod Brooks]], [[Nils Nilsson (researcher)|Nils Nilsson]], [[Eric Horvitz]]

:* The Future of Vision [http://www.engagingexperience.com/2006/07/ai50_the_future_4.html] — Brief abstracts of papers by [[Eric Grimson]], [[Takeo Kanade]], and [[Terry Sejnowski]]

:* The Future of Reasoning [http://www.engagingexperience.com/2006/07/ai50_the_future_5.html] :* Brief abstracts of papers by [[Alan Bundy]], [[Edwina Rissland]], and [[Bart Selman]]

:* The Future of Language and Cognition [http://www.engagingexperience.com/2006/07/ai50_the_future_6.html] — Brief abstracts of papers by [[Trenchard More]], [[Eugene Charniak]], and [[Pat Langley]]

:* The Future of the Future [http://www.engagingexperience.com/2006/07/ai50_the_future_7.html] :* Brief abstract of [[Ray Kurzweil]]'s paper

:* AI and Games [http://www.engagingexperience.com/2006/07/ai50_ai_and_gam.html] — Brief abstracts of papers by [[Jonathan Schaeffer]] and [[Danny Kopec]]

:* Future Interactions with Intelligent Machines [http://www.engagingexperience.com/2006/07/ai50_future_int.html] — Brief abstracts of papers by [[Daniela Rus]] and [[Sherry Turkle]]

:* Selected Submitted Papers: Future Strategies for AI [http://www.engagingexperience.com/2006/07/ai50_selected_s.html] — Brief abstracts of papers by [[J. Storrs Hall]] and [[Selmer Bringsjord]]

:* Selected Submitted Papers: Future Possibilities for AI [http://www.engagingexperience.com/2006/07/ai50_selected_s_1.html] — Brief abstracts of papers by [[Eric Steinhart]], [[C. T. A. Schmidt]], and [[Michael Anderson]]{{dn}} and [[Susan Leigh Anderson]]

:* First Polling Question [http://www.engagingexperience.com/2006/07/ai50_first_poll.html]

:* Second Polling Question [http://www.engagingexperience.com/2006/07/ai50_second_pol.html]

:* Third Polling Question [http://www.engagingexperience.com/2006/07/ai50_third_poll.html]

:* Fourth Polling Question [http://www.engagingexperience.com/2006/07/ai50_fourth_pol.html]

:* Fifth Polling Question [http://www.engagingexperience.com/2006/07/ai50_fifth_poll.html]

:* Sixth Polling Question [http://www.engagingexperience.com/2006/07/ai50_sixth_poll.html] and [http://engaging.typepad.com/my_weblog/2006/07/ai50_sixth_poll_1.html]

:* Final Polling Question [http://www.engagingexperience.com/2006/07/ai50_final_poll.html]
{{Dartmouth College}}

{{DEFAULTSORT:Ai@50}}
[[Category:Artificial intelligence conferences]]
[[Category:Dartmouth College history]]
[[Category:History of artificial intelligence]]</text>
</page>
<page>
<id>358</id>
<title>AIBO</title>
<text>{{Out of date|date=May 2010}}
{{Unreferenced|date=September 2007}}
[[File:AIBO.JPG|thumb|right|The AIBO ERS-7]]'''AIBO''' ('''A'''rtificial '''I'''ntelligence ro'''BO'''t, homonymous with "pal" or "partner" in Japanese) was one of several types of [[robot]]ic [[pet]]s designed and manufactured by [[Sony]]; there have been several different models since their introduction on May 11, 1999. AIBO was discontinued in 2006.

==Overview==
Being able to walk, "see" its environment via camera and recognize spoken commands in Spanish and English; AIBO robotic pets are considered to be [[autonomous robot]]s since they are able to learn and mature based on external stimuli from their owner or environment, or from other AIBOs. Artist [[Hajime Sorayama]] created the initial designs for the AIBO.

The original designs are part of the permanent collections of MoMA and the [[Smithsonian Institution]].  The design won Sony and artist Sorayama the highest design award that may be conferred by Japan. On January 26, 2006 Sony announced that it would discontinue AIBO and several other products as of March, 2006 in Sony's effort to make the company more profitable. It also stopped development of the [[QRIO]] robot. AIBO will still be supported until 2013 (ERS7 model) and AIBO technology will continue to be developed for use in other consumer products.<ref> [http://www.sony.net/SonyInfo/IR/info/presen/05q3/qfhh7c000008adfe.html] [http://www.jp.aibo.com/support/clinic_info/notice_58.html]</ref>
[[File:AiboKids.jpg|thumb|left|AIBO playing with children]]
AIBOware (the name is a trademark of Sony corporation), is the title given to the [[software]] the AIBO runs on its pink [[Memory Stick]]. The ''Life'' AIBOware allows the robot to be raised from pup to fully grown adult while going through various stages of development as its owner interacts with it. The ''Explorer'' AIBOware allows the owner to interact with a fully mature robot able to understand (though not necessarily willing to obey) 100 voice commands. Without the AIBOware, the AIBO will run in what is called "clinic mode" and can only perform basic actions.

Many AIBO owners enjoy teaching their pets new behaviors by reprogramming them (in Sony's special 'R-CODE' language). However, in October 2001, Sony sent a cease-and-desist notice to the webmaster of Aibopet, demanding that he stop distributing code that was retrieved by bypassing the [[copy protection]] mechanisms of the robot.  Eventually, in the face of many outraged AIBO owners, Sony released a programmer's kit for 'non-commercial' use.  The kit has now been expanded into three distinct tools:  R-CODE, AIBO Remote Framework, and the OPEN-R SDK.  These three tools are combined under the name AIBO Software Development Environment.  All of these tools are free to download and can be used for commercial or non-commercial use (Except for the OPEN-R SDK, which is specifically for non-commercial use). Since the first release of OPEN-R, several AIBO programming tools have been developed by university labs, including URBI <ref>[http://www.urbiforge.com/ URBI]</ref>, Tekkotsu <ref>[http://www.cs.cmu.edu/~tekkotsu/ Tekkotsu]</ref>, Pyro<ref>[http://pyrorobotics.org/ Pyro]</ref> and AiBO+<ref>[http://aiboplus.sourceforge.net AiBO+ home page]</ref>. The Open-R and gcc based toolchain has been updated by the community to use gcc 4.1.2, binutils 2.17 and newlib 2.15. The packaged version of the old and updated Aibo toolchain is available for Ubuntu in a PPA<ref>[http://launchpad.net/~csaba-kertesz/+archive/aiboplus Ubuntu PPA with Aibo toolchain]</ref>.

AIBO's complete vision system uses the [[Scale-invariant feature transform|SIFT]] algorithm, to recognise its charging station. The newest versions are equipped with a [[Wi-Fi]] connection, allowing them to send the pictures they take via email which led to the [[Roblog]].

AIBO's sounds were programmed by Japanese DJ/avant-garde composer [[Nobukazu Takemura]], fusing mechanic and organic concepts.{{Citation needed|date=July 2008}} The bodies of the "3x" series (Latte and Macaron, the round-headed AIBOs released in 2001) were designed by visual artist [[Katsura Moshino]].

==RoboCup==

The AIBO has seen use as an inexpensive platform for [[artificial intelligence]] research, because it integrates a computer, vision system, and articulators in a package vastly cheaper than conventional research robots. The [[RoboCup]] autonomous [[soccer]] [[:Category:Robotics competitions|competition]] had a "RoboCup Four-Legged Robot Soccer League" in which numerous institutions from around the world would participate. Competitors would [[Computer program|program]] a team of AIBO robots to play games of autonomous robot soccer against other competing teams.  The Four-Legged League ran from 1999 to 2008, although in the final year, many big-name universities did not compete as they had moved to the new NAO platform.  The University of New South Wales <ref>[http://cgi.cse.unsw.edu.au/~robocup/2010site/]</ref> was the most successful team in the League, making the final six times and winning three times.

==International AIBO Convention==
The International AIBO Convention takes place every year at Sony Robotics Tower in the Shinjuku prefecture. The first convention took place in 1999, on May 15. It was then set to May 2 to May 4. The 2009 convention, being in its tenth year, set attendance records. The convention usually features AIBO advertisements, free posters, free accessories, freeware/open-source downloads, an acoustic performance from best friends Mark Linn-Baker and Larry Sweeney, and "AIBO Shows".

==Breed lineage==
After model name: body color choices; release date; units sold.
===First generation models===
[[File:AIBO ERS111 210.jpg|thumb|250px|AIBO models ERS-210 (left) and ERS-111 (right)]]

*ERS-110: silver; began sales 1 June 1999 for delivery in August; limited production of 3,000 for Japan and 2,000 for the USA
*ERS-111: grey and black; November 1999; 60,000 (estimated)

===Second generation models===
*ERS-210: black, silver, gold, red, blue, green, white (3 hues), champagne, etc.; 2001
*ERS-210A: several colors; 2002
*ERS-220: silver; 2002 (also available as a conversion kit for the ERS-210)
*ERS-311 "Latte": cream; 2001
*ERS-311b "Latte": cream; 2002
*ERS-312 "Macaron": black; 2001
*ERS-31L "Pug": brown; 2002
*ERS-210A: cyber blue; 2003
Estimated sales for all second generation models: 60,000

===Third Generation models===
*ERS-7: white; November 2003
*ERS-7M2: white and black; November 2004
*ERS-7M3: white, black, and champagne brown (called honey brown in Japan); October 2005
Estimated sales for all third generation models: 40,000 to 50,000

==See also==
{{Portal|Robotics}}
*[[Domestic robot]]
*[[i-Cybie]], another robotic dog.
*[[Furby]], a robot toy made by Tiger Electronics.
*[[Sony CISC]], which gives telephone technical support for AIBO.
*[[QRIO]], a humanoid robot also developed by [[Sony]]
*[[ASIMO]], a humanoid robot created by Honda.
*[[Pleo]], robotic dinosaur.
*[[Nao (robot)|Nao]], a humanoid robot replacing AIBO in Robocup competitions.
*[[Genibo]], a robotic dog from Dasarobot.
*[http://www.robocup.cl/uchilsim/ UCHILSIM], a physics based simulator of AIBO robots competing in RoboCup.

==References==
{{Reflist}}

==External links==
*[http://www.electronicpets.org/sony-aibo-ers7~p14.html Official Listing at ElectronicPets.org]
*[http://www.sony.net/SonyInfo/News/Press_Archive/199806/98-052/ Sony Develops OPEN-R Architecture for Entertainment Robots]
*[http://www.sony.net/SonyInfo/News/Press_Archive/199905/99-046/ Sony Launches Four-Legged Entertainment Robot]
*[http://www.aiboworld.com/ Aiboworld forums, blogs, etc]
*[http://www.aibo-life.org/ AIBO-Life: forums, faq, help]
*[http://www.robotonline.net/en/list/robots/p=1&m=Sony&t=Animal-like&o=title&od=asc List of AIBO Dogs]


[[Category:Robot Hall of Fame]]
[[Category:Virtual pets]]
[[Category:Robotics at Sony]]
[[Category:Entertainment robots]]
[[Category:Biomorphic robots]]
[[Category:1999 introductions]]
[[Category:Artistic and performing robots]]
[[Category:1990s fads and trends]]

[[de:Aibo]]
[[es:Aibo]]
[[eo:Aibo]]
[[fr:Aibo]]
[[hr:AIBO]]
[[id:Aibo]]
[[it:Aibo]]
[[lb:AIBO]]
[[lt:AIBO]]
[[nl:AIBO]]
[[ja:AIBO]]
[[pl:AIBO]]
[[pt:Aibo]]
[[ru:AIBO]]
[[sk:Aibo]]
[[fi:AIBO]]
[[sv:AIBO]]
[[tr:AIBO]]
[[zh:AIBO]]</text>
</page>
<page>
<id>369</id>
<title>AI Shogi 3</title>
<text>{{Unreferenced|date=September 2008}}
{{Infobox VG| title = AI Shogi 3
| image = [[File:AI Shogi 3 Cover.jpg]]
| developer = [[I4 (company)|I4]]
| publisher = [[I4 (company)|I4]] 
| engine =
| released = {{vgrelease|JP=December 18, 1998}} 
| genre = [[Board game]]
| modes = [[Single-player]], [[multiplayer]]
| ratings = {{vgratings|ESRB=Everyone}}
| platforms = [[Nintendo 64]]
| media = 
| requirements =
}}

{{nihongo|'''''AI Shogi 3'''''|AI??3}} is a Japanese virtual board game for the [[Nintendo 64]], it was released only in Japan in [[1998]]. Versions of the game have recently been released for the [[Nintendo DS]] and [[PlayStation Portable]]. The AI standing for [[Artificial intelligence]].

[[Category:1998 video games]]
[[Category:Video board games]]
[[Category:Japan-exclusive video games]]
[[Category:Nintendo 64 games]]

{{board-videogame-stub}}

[[ca:A.I. Shogi 3]]
[[fr:AI Shogi 3]]
[[it:AI Shogi 3]]
[[pt:AI Shogi 3]]</text>
</page>
<page>
<id>372</id>
<title>AJAX.OOP</title>
<text>{{Notability|date=November 2009}}
{{Primary sources|date=November 2009}}
{{Portal|Free software}}
'''AJAX.OOP''' is an [[open source]] [[JavaScript]] framework distributed under [[MIT License]]. Providing with [[Object-oriented programming|OOP]]-style coding engine and [[AJAX]] requests handling functionality to create [[web2.0]] components. Due to OOP paradigm AJAX.OOP library can be easily extended with additional functionality or used as core for other projects.

==The JavaScript OOP Library==

AJAX.OOP is a fast and scalable JavaScript Library for creating JavaScript/AJAX components in an object oriented way.

Main feature - strong [[Object-oriented programming|OOP]] paradigm implementation.AJAX.OOP engine allows the programmer to:

* Create classes with object-like defining syntax
* Inherit classes (both AJAX.OOP-style defined and created with native JavaScript code)
* Aggregate classes (including aggregation of self and parent class with special operators this.$_self and this.$_super)
* Define constructors as they are (name = 'constructor')
* Override parent class properties and methods (but call parent if you need by using special access operator this.$super)
* Access/call any parent properties and/or methods from any method of child class (just use this.$super accessor whenever you need to access parent properties and methods)
* Use strict defined objects with workable 'instanceof' operator on them when instantiating an exemplar of AJAX.OOP classes

==External links==
* [http://ajaxoop.org/ AJAX.OOP Official Website]
* [http://code.google.com/p/ajaxoop/downloads/list AJAX.OOP - Download]
* [http://ajaxoop.org/documentation AJAX.OOP - Documentation]

{{DEFAULTSORT:Ajax.Oop}}
[[Category:Ajax (programming)]]
[[Category:JavaScript libraries]]
[[Category:Web 2.0 neologisms]]
[[Category:JavaScript]]
[[Category:Software using the MIT license]]

[[pl:AJAX.OOP]]
[[ru:AJAX.OOP]]</text>
</page>
<page>
<id>374</id>
<title>AKARI Project</title>
<text>The '''AKARI Architecture Design Project''' ('''AKARI Project''') is a large project for designing New Generation Network Architecture and is supported by the [[National Institute of Information and Communications Technology]] (NICT) of Japan. The name comes from the Japanese word '''AKARI''', which means "A small light (in the dark pointing to the future)". Launched in May 2006, the AKARI Project aims to build technologies for new generation network by 2015, developing a network architecture and creating a network design based on that architecture. AKARI is also denoted as a [[Future Internet]] project.

The members of the AKARI Project come from NICT and some other famous universities or companies such as [[Tokyo University]], [[Keio University]], [[Osaka University]], [[Tokyo Institute of Technology]] and NTT etc. So far they have produced a Conceptual Design Book, which describes their philosophy to pursue an ideal solution by researching new network architectures from a clean slate without being impeded by existing constraints. They have identified three major design principles as: KISS (Keep It Simple, Stupid), Sustainable and Evolutionary, and Reality Connection. 

To some extent, the AKARI Project is similar to the [[Global Environment for Network Innovations]] ('''GENI''') facility of USA and the [[Seventh Framework Programme]] (FP7) of EU. As a matter of fact, there are strong relationships among all these projects.

== See also ==

* [[Future Internet]]
* [[Seventh Framework Programme]]

== References ==
* [http://akari-project.nict.go.jp/eng/concept-design/AKARI_fulltext_e_translated_version_1_1.pdf "New Generation Network Architecture AKARI Conceptual Design (ver1.1)"], June 2008.

==External links==
* [http://akari-project.nict.go.jp/eng/index2.htm "AKARI Architecture Design Project for New Generation Network"]

[[Category:Computer networking|Architecture]]
[[Category:Network architecture]]</text>
</page>
<page>
<id>379</id>
<title>ALCOR</title>
<text>'''ALCOR''' is an early computer language definition created by the '''ALCOR Group''', a consortium of universitites, research institutions and manufacturers in Europe and the USA which was founded in 1959 and which had 60 members in 1966. The group had the aim of a common [[compiler]] specification for a subset of [[ALGOL 60]] after the ALGOL meeting in Copenhagen in 1958.  ALCOR is an acronym, from '''AL'''GOL '''Co'''nverte'''r'''.

In Europe, a high level machine architecture for [[ALGOL 60]] was devised which was emulated on various real computers, among them the Siemens 2002 and the [[IBM 7090]]. An ALGOL manual was published which provided a detailed introduction of all features of the language with many program snippets, and four appendixes:{{SpecialChars
| alt        = Decimal Exponent Symbol
| link       = http://mailcom.com/unicode/DecimalExponent.ttf
| special    = Unicode 5.2 "[http://www.unicode.org/charts/PDF/U2300.pdf Miscellaneous Technical]" characters
| fix        = Unicode#External_links
| characters = something like "<sub>10</sub>" ([http://mailcom.com/unicode/DecimalExponent.ttf Decimal Exponent Symbol] U+23E8)
}}
# Revised Report on the Algorithmic Language ALGOL 60 
# Report on Subset ALGOL 60 (IFIP)
# Report on Input-Output Procedures for ALGOL 60
# an early "standard" character set for representing [[ALGOL 60]] code on paper and paper tape. 
::This character set included the unusual "&#x16ed;" <!-- "?" --> ([http://www.fileformat.info/info/unicode/char/16ed/index.htm iron/runic cross]) character for multiplication and the "?" ([http://mailcom.com/unicode/DecimalExponent.ttf Decimal Exponent Symbol]) for floating point notation.  <!-- lower 10 has no [[unicode]] 5.1 equivalent -->

==References==
* Baumann, R. (1961) Baumann, R. "ALGOL Manual of the ALCOR Group, Pts. 1, 2 & 3" Elektronische Rechenanlagen No. 5 (Oct. 1961), 206-212; No. 6 (Dec. 1961), 259-265; No. 2 (Apr. 1962); (in German)
* http://www.science.uva.nl/museum/DWcodes.html#A001
* http://homepages.cwi.nl/~dik/english/codes/5tape.html#alcor
==External links==
* [http://hopl.murdoch.edu.au/showlanguage.prx?exp=360 ALCOR in The Encyclopedia of Computer Languages]

[[Category:Algol programming language family]]
[[Category:Systems programming languages]]
[[Category:Procedural programming languages]]
[[Category:Character encoding]]
[[Category:Character sets]]

{{compu-lang-stub}}</text>
</page>
<page>
<id>382</id>
<title>ALGO</title>
<text>'''ALGO''' is an [[algebra]]ic [[programming language]] developed between 1959 and 1961 for the [[Bendix G-15]] [[computer]].

ALGO was one of several programming languages inspired by the ''Preliminary Report on the International Algorithmic Language'' written in Zürich in 1958. This report underwent several modifications before becoming the Revised Report on which most ALGOL implementations are based. As a result, ALGO and other early "ALGOLs" have a very different syntax from [[ALGOL 60]].

Other languages developed from the Zürich report include [[BALGOL]], [[MAD programming language|MAD]] (Michigan Algorithm Decoder) and [[NELIAC]].

==Example==
Here is the [[Trabb Pardo-Knuth algorithm]] in ALGO:

<pre>
1. TITLE TRABB PARDO-KNUTH ALGORITHM
2. SUBSCript I,J
3. DATA A(11)
4. FORMAt FI(2DT), FLARGE(3D)
5. PROCEdure F(T=Z)
6. BEGIN
7. Z=SQRT(ABS(T))+5*T^3
8. END
9. FOR I=0(1)10
10. A[I]=KEYBD
11. FOR J=0(1)10 BEGIN
11. I=J-10
12. F(A[I]=Y)
13. PRINT(FI)=I
14. IF Y > 400
15. GO TO LARGE
16. PRINT(FL)=Y
17. GO TO NEXT
18. LARGE: PRINT(FLARGE)=999
19. NEXT: CARR(1) END
20. END
</pre>

===Remarks===
* 1. A title is the only type of comment allowed. Line numbers were inserted by the editor.
* 2. Integer data type. The lower-case letters are not typos, but reflect the way in which ALGO code was presented in the original documentation.
* 3. Only the size of an array can be specified, lower bound is always zero.
* 4. The first format calls for a two-digit number followed by a tab, the second for a three digit number.
* 5. The syntax of ALGO's procedure implementations is slightly different from that given in the Zurich report. Functions as defined by the Zürich report are not implemented.
* 9. The syntax here is from the Zürich report and is also consistent with various 1950s-era autocodes.
* 10. KEYBD reads a numeric value from the terminal.

== See also ==
* [[ALGOL 58]]
* [[ALGOL 60]]

==External links==
*[http://www.piercefuller.com/collect/bendix/algo6008.pdf ALGO manual (PDF)]
*[http://members.iinet.net.au/~dgreen/docs.html Other documents on ALGO and the G-15]

[[Category:Algol programming language family]]

[[pt:ALGO]]</text>
</page>
<page>
<id>385</id>
<title>ALGOL 60</title>
<text>{{about|the programming language family||Algol (disambiguation)}}
{{Infobox programming language
| name = ALGOL 60
| paradigm = [[procedural programming|procedural]], [[imperative programming|imperative]], [[structured programming|structured]]
| year = 1960
| designer = [[Friedrich L. Bauer|Bauer]], [[Hermann Bottenbruch|Bottenbruch]], [[Heinz Rutishauser|Rutishauser]], [[Klaus Samelson|Samelson]], [[John Backus|Backus]], [[Charles Katz|Katz]], [[Alan Perlis|Perlis]], [[Joseph Henry Wegstein|Wegstein]], [[Peter Naur|Naur]], [[Bernard Vauquois|Vauquois]], [[Adriaan van Wijngaarden|van Wijngaarden]],  [[Michael Woodger|Woodger]], [[Julien Green (computer scientist)|Green]], [[John McCarthy (computer scientist)|McCarthy]] 
| influenced_by = [[ALGOL 58]]
| influenced = Most subsequent imperative languages (so-called ''ALGOL-like'' languages) <br> e.g. [[Simula]], 
[[Combined Programming Language|CPL]], [[Pascal (programming language)|Pascal]], [[Ada (programming language)|Ada]]<br>[[Agena (programming language)|Agena]], [[C (programming language)|C]]
}}
'''ALGOL 60''' (short for '''ALGO'''rithmic '''L'''anguage 1960) The name [[ALGOL]] of the family is sometimes given in mixed case ([http://www.masswerk.at/algol60/report.htm ''Algol 60'']), and sometimes in all uppercase ([http://burks.brighton.ac.uk/burks/language/other/a68rr/rrtoc.htm ''ALGOL 68'']). Gave rise to many other programming languages, including [[BCPL]], [[B (programming language)|B]], [[Pascal (programming language)|Pascal]], [[Simula]], [[C (programming language)|C]], and many others. [[ALGOL 58]] introduced code blocks and the <code>begin</code> and <code>end</code> pairs for delimiting them.  ALGOL 60 was the first language implementing [[nested function]] definitions with [[lexical scope]]. 

[[Niklaus Wirth]] based his own [[ALGOL W]] on ALGOL 60 before moving to develop [[Pascal (programming language)|Pascal]]. Algol-W was intended to be the next generation ALGOL but the [[ALGOL 68]] committee decided on a design that was more complex and advanced rather than a cleaned simplified ALGOL 60. The official ALGOL versions are named after the year they were first published.

Note: [[ALGOL 68]] is substantially different from Algol 60 but was not well received so that in general "Algol" means dialects of Algol 60.

==Standardization==
ALGOL 60 - with [[COBOL]] - were the first languages to seek standardization.
* ISO 1538:1984, Programming language Algol 60 (now withdrawn)
* ISO TR 1672:1977, Algol 60 Hardware Representation (now withdrawn)

==History==
ALGOL 60 was used mostly by research computer scientists in the United States and in Europe. Its use in commercial applications was hindered by the absence of standard input/output facilities in its description and the lack of interest in the language by large computer vendors. ALGOL 60 did however become the standard for the publication of algorithms and had a profound effect on future language development.

[[John Backus]] developed the [[Backus–Naur Form|Backus normal form]] method of describing programming languages specifically for ALGOL 58. It was revised and expanded by [[Peter Naur]] for ALGOL 60, and at [[Donald Knuth]]'s suggestion renamed [[Backus–Naur Form]].<ref>Knuth, Donald E. (1964) Backus Normal Form vs Backus Naur Form. Communications of the ACM 7(12):735-736</ref>

Peter Naur: "As editor of the ALGOL Bulletin I was drawn into the international discussions of the language and was selected to be member of the European language design group in November 1959. In this capacity I was the editor of the ALGOL 60 report, produced as the result of the ALGOL 60 meeting in Paris in January 1960."<ref name="naur_acm">[http://awards.acm.org/citation.cfm?id=1024454&srt=all&aw=140&ao=AMTURING&yr=2005 ACM Award Citation / Peter Naur], 2005</ref>

The following people attended the meeting in Paris (from January 1 to 16):
* [[Friedrich L. Bauer]], [[Peter Naur]], [[Heinz Rutishauser]], [[Klaus Samelson]], [[Bernard Vauquois]], [[Adriaan van Wijngaarden]], and [[Michael Woodger]] (from Europe)
* [[John Backus|John W. Backus]], [[Julien Green (computer scientist)|Julien Green]], [[Charles Katz]], [[John McCarthy (computer scientist)|John McCarthy]], [[Alan Perlis|Alan J. Perlis]], and [[Joseph Henry Wegstein]] (from the USA).
Alan Perlis gave a vivid description of the meeting: "The meetings were exhausting, interminable, and exhilarating. One became aggravated when one's good ideas were discarded along with the bad ones of others. Nevertheless, diligence persisted during the entire period. The chemistry of the 13 was excellent."

Both John Backus and Peter Naur served on the committee which created ALGOL 60 as did [[Wally Feurzeig]], who later created [[Logo (programming language)|Logo]].

ALGOL 60 inspired many languages that followed it. [[C. A. R. Hoare]] remarked: "Here is a language so far ahead of its time that it was not only an improvement on its predecessors but also on nearly all its successors."<ref>[http://www.eecs.umich.edu/~bchandra/courses/papers/Hoare_Hints.pdf "Hints on Programming Language Design"], C.A.R. Hoare, December 1973. Page 27. (This statement is sometimes erroneously attributed to [[Edsger W. Dijkstra]], also involved in implementing the first ALGOL 60 [[compiler]].)</ref>  The [[Scheme (programming language)|Scheme]] programming language, a variant of [[Lisp (programming language)|Lisp]] that adopted the block structure and lexical scope of ALGOL, also adopted the wording "Revised Report on the Algorithmic Language Scheme" for its standards documents in homage to ALGOL.<ref name="r3rs">{{cite web
| author=Jonathan Rees and William Clinger (Editors), Hal Abelson, R. K. Dybvig et al.
| title=Revised(3) Report on the Algorithmic Language Scheme, (Dedicated to the Memory of ALGOL 60)
| url=http://groups.csail.mit.edu/mac/ftpdir/scheme-reports/r3rs-html/r3rs_toc.html
|accessdate=2009-10-20
}}</ref>

===ALGOL 60 implementations timeline===
To date there have been at least 70 augmentations, extensions, derivations and sublanguages of Algol 60.<ref>[http://hopl.murdoch.edu.au/showlanguage.prx?exp=1807 The Encyclopedia of Computer Languages<!-- Bot generated title -->]</ref>

{|class="wikitable" border="1" style="border-collapse: collapse;"
|-
!|Name
!|Year
!|Author
!|State
!|Description
!|Target CPU
|-
|[[Elliott ALGOL]]|| 1960s || [[C. A. R. Hoare]] || UK || Subject of the famous [[Turing Award|Turing]] lecture|| [[Elliott 803]] & the Elliott 503
|-
|[[Burroughs large systems#ALGOL|Burroughs Algol]] <br> (Several variants)|| 1961 || [[Burroughs Corporation]] (with participation by Hoare, [[Edsger W. Dijkstra|Dijkstra]], and others) || USA || Basis of the [[Burroughs Corporation|Burroughs]] (and now [[Unisys]] [[Burroughs MCP|MCP]] based) computers || [[Burroughs large systems]] <br>and their midrange as well.
|-
|[[Case ALGOL]]|| 1961 || || USA || [[Simula]] was originally contracted as a simulation extension of the Case ALGOL || [[UNIVAC 1107]]
|-
|[[GOGOL]]|| 1961 || [[Bill McKeeman]] || USA || For [[Odin|ODIN]] time-sharing system || [[PDP-1]]
|-
|[[X1 Algol 60]]|| 1961 || [[Edsger W. Dijkstra]] and J.A. Zonneveld || Netherlands || Mathematical Centre, Amsterdam || [[Electrologica X1|X1]]
|-
|[[RegneCentralen ALGOL]]|| 1961 || [[Peter Naur]], [[Jørn Jensen]] || Denmark || Implementation of full Algol 60 || DASK at Regnecentralen
|-
|[[Dartmouth ALGOL 30]]|| 1962 || [[Thomas Eugene Kurtz]] et al. || USA || || [[LGP-30]]
|-
|[[USS 90 Algol]]|| 1962 || [[L. Petrone]] <!-- ? --> || Italy ||
|-
| Algol Translator || 1962 || G. van der Mey and [[Willem van der Poel|W.L. van der Poel]] || Netherlands || Staatsbedrijf der Posterijen, Telegrafie en Telefonie || [[ZEBRA (computer)|ZEBRA]]
|-
|[[Kidsgrove Algol]]|| 1963 || [[F. G. Duncan]] <!-- ? --> || UK || || [[English Electric|English Electric Company]] [[English Electric KDF9|KDF9]]
|-
|[[VALGOL]]|| 1963 || [[Val Schorre]] || USA || A test of the [[META II]] compiler compiler
|-
|FP6000 Algol || 1963 || [[Roger Moore (computer scientist)|Roger Moore]] || Canada || written for [[SaskPower | Saskatchewan Power Corp]] || [[Ferranti-Packard 6000 | FP6000]] 
|-
|[[Whetstone (benchmark)|Whetstone]]|| 1964 || [[Brian Randell]] and L J Russell || UK || Atomic Power Division of English Electric Company. Precursor to [[Ferranti Pegasus]], National Physical Laboratories [[Automatic Computing Engine|ACE]] and [[English Electric DEUCE]] implementations. || English Electric Company [[English Electric KDF9|KDF9]]
|-
|[[NU ALGOL]]|| 1965 || || Norway || || [[UNIVAC]]
|-
|ALGEK|| 1965 || || [[Soviet Union|USSR]] || [[Minsk family of computers|Minsk-22]] || ?????, based on ALGOL-60 and [[COBOL]] support, for economical tasks
|-
|[[MALGOL]]|| 1966 || publ. A. Viil, M Kotli & M. Rakhendi, || [[Estonian Soviet Socialist Republic|Estonian SSR]] || [[Minsk family of computers|Minsk-22]]
|-
|[[ALGAMS]]|| 1967 || GAMS group (????, ?????? ????????????? ???????????????? ??? ????? ???????? ??????), cooperation of Comecon Academies of Science || [[Comecon]] || [[Minsk family of computers|Minsk-22]], later [[ES EVM]], [[BESM]]
|-
|[[ALGOL/ZAM]]|| 1967 || || Poland || || Polish [[ZAM (computer)|ZAM]] computer
|-
|[http://hopl.murdoch.edu.au/showlanguage.prx?exp=7288&language=Chinese%20Algol Chinese Algol]|| 1972 || || China || Chinese characters, expressed via the Symbol system
|-
|[[DG/L]]|| 1972 || || USA || || DG [[Data General Eclipse|Eclipse]] family of  Computers
|}

The Burroughs dialects included special Bootstrapping dialects such as [[ESPOL]] and [[NEWP]].

==Properties==
ALGOL 60 as officially defined had no I/O facilities; implementations defined their own in ways that were rarely compatible with each other. In contrast, ALGOL 68 offered an extensive library of ''transput'' (ALGOL 68 parlance for Input/Output) facilities.

ALGOL 60 allowed for two [[evaluation strategy|evaluation strategies]] for [[Parameter (computer science)|parameter]] passing: the common call-by-value, and call-by-name. Call-by-name had certain limitations in contrast to call-by-reference, making it an undesirable feature in imperative language design. For example, it is impossible in ALGOL 60 to develop a procedure that will swap the values of two parameters if the actual parameters that are passed in are an integer variable and an array that is indexed by that same integer variable.<ref>
{{cite book
| last=Aho
| first=Alfred V.
| authorlink=Alfred V. Aho
| coauthors=[[Ravi Sethi]], [[Jeffrey Ullman|Jeffrey D. Ullman]]
| title=[[Dragon Book (computer science)|Compilers: Principles, Techniques, and Tools]]
| year=1986
| edition=1st
| publisher=Addison-Wesley
| isbn=0-201-10194-7}}, Section 7.5, and references therein</ref>
However, call-by-name is still beloved of ALGOL implementors for the interesting "[[thunk]]s" that are used to implement it. [[Donald Knuth]] devised the "[[man or boy test]]" to separate compilers that correctly implemented "recursion and non-local references." This test contains an example of call-by-name.

===ALGOL 60 Reserved words and restricted identifiers===
There are 35 such reserved words in the standard [[Burroughs large systems]] sub-language: 

{|
|
*<code>ALPHA</code>
*<code>ARRAY</code>
*<code>BEGIN</code>
*<code>BOOLEAN</code>
*<code>COMMENT</code>
|
*<code>CONTINUE</code>
*<code>DIRECT</code>
*<code>DO</code>
*<code>DOUBLE</code>
*<code>ELSE</code>
|
*<code>END</code>
*<code>EVENT</code>
*<code>FALSE</code>
*<code>FILE</code>
*<code>FOR</code>
|
*<code>FORMAT</code>
*<code>GO</code>
*<code>IF</code>
*<code>INTEGER</code>
*<code>LABEL</code>
|
*<code>LIST</code>
*<code>LONG</code>
*<code>OWN</code>
*<code>POINTER</code>
*<code>PROCEDURE</code>
|
*<code>REAL</code>
*<code>STEP</code>
*<code>SWITCH</code>
*<code>TASK</code>
*<code>THEN</code>
|
*<code>TRUE</code>
*<code>UNTIL</code>
*<code>VALUE</code>
*<code>WHILE</code>
*<code>ZIP</code>
|}

There are 71 such restricted identifiers in the standard Burroughs large systems sub-language: 
{|
|
*<code>ACCEPT</code>
*<code>AND</code>
*<code>ATTACH</code>
*<code>BY</code>
*<code>CALL</code>
*<code>CASE</code>
*<code>CAUSE</code>
*<code>CLOSE</code>
*<code>DEALLOCATE</code>
*<code>DEFINE</code>
|
*<code>DETACH</code>
*<code>DISABLE</code>
*<code>DISPLAY</code>
*<code>DIV</code>
*<code>DUMP</code>
*<code>ENABLE</code>
*<code>EQL</code>
*<code>EQV</code>
*<code>EXCHANGE</code>
*<code>EXTERNAL</code>
|
*<code>FILL</code>
*<code>FORWARD</code>
*<code>GEQ</code>
*<code>GTR</code>
*<code>IMP</code>
*<code>IN</code>
*<code>INTERRUPT</code>
*<code>IS</code>
*<code>LB</code>
*<code>LEQ</code>
|
*<code>LIBERATE</code>
*<code>LINE</code>
*<code>LOCK</code>
*<code>LSS</code>
*<code>MERGE</code>
*<code>MOD</code>
*<code>MONITOR</code>
*<code>MUX</code>
*<code>NEQ</code>
*<code>NO</code>
|
*<code>NOT</code>
*<code>ON</code>
*<code>OPEN</code>
*<code>OR</code>
*<code>OUT</code>
*<code>PICTURE</code>
*<code>PROCESS</code>
*<code>PROCURE</code>
*<code>PROGRAMDUMP</code>
*<code>RB</code>
|
*<code>READ</code>
*<code>RELEASE</code>
*<code>REPLACE</code>
*<code>RESET</code>
*<code>RESIZE</code>
*<code>REWIND</code>
*<code>RUN</code>
*<code>SCAN</code>
*<code>SEEK</code>
*<code>SET</code>
|
*<code>SKIP</code>
*<code>SORT</code>
*<code>SPACE</code>
*<code>SWAP</code>
*<code>THRU</code>
*<code>TIMES</code>
*<code>TO</code>
*<code>WAIT</code>
*<code>WHEN</code>
*<code>WITH</code>
*<code>WRITE</code> 
|}

and also the names of all the intrinsic functions.

==Examples and portability issues==
===Code sample comparisons===
====ALGOL 60====
(The way the bold text has to be written depends on the implementation, e.g. 'INTEGER' (including the quotation marks) for '''integer'''; this is known as [[stropping (syntax)|stropping]].)

 '''procedure''' Absmax(a) Size:(n, m) Result:(y) Subscripts:(i, k);
     '''value''' n, m; '''array''' a; '''integer''' n, m, i, k; '''real''' y;
 '''comment''' The absolute greatest element of the matrix a, of size n by m 
 is transferred to y, and the subscripts of this element to i and k;
 '''begin''' '''integer''' p, q;
     y := 0; i := k := 1;
     '''for''' p:=1 '''step''' 1 '''until''' n '''do'''
     '''for''' q:=1 '''step''' 1 '''until''' m '''do'''
         '''if''' abs(a[p, q]) > y '''then'''
             '''begin''' y := abs(a[p, q]);
             i := p; k := q
             '''end'''
 '''end''' Absmax

Here's an example of how to produce a table using Elliott 803 ALGOL.<ref>[http://www.billp.org/ccs/A104/ "803 ALGOL"], the manual for Elliott 803 ALGOL</ref>

  FLOATING POINT ALGOL TEST'
  BEGIN REAL A,B,C,D'
 
  READ D'
 
  FOR A:= 0.0 STEP D UNTIL 6.3 DO
  BEGIN
    PRINT PUNCH(3),££L??'
    B := SIN(A)'
    C := COS(A)'
    PRINT PUNCH(3),SAMELINE,ALIGNED(1,6),A,B,C'
  END'
  END'

PUNCH(3) sends output to the teleprinter rather than the tape punch.<br>
SAMELINE suppresses the carriage return + line feed normally printed between arguments.<br>
ALIGNED(1,6) controls the format of the output with 1 digit before and 6 after the decimal point

====ALGOL 60 family====
Since ALGOL 60 had no I/O facilities, there is no portable [[hello world program]] in ALGOL.  The following program could (and still will) compile and run on an ALGOL implementation for a Unisys A-Series mainframe, and is a straightforward simplification of code taken from [http://www.engin.umd.umich.edu/CIS/course.des/cis400/index.html The Language Guide] at the [[University of Michigan]]-Dearborn Computer and Information
Science Department [http://www.engin.umd.umich.edu/CIS/course.des/cis400/algol/hworld.html Hello world! ALGOL Example Program page].

 BEGIN
   FILE F(KIND=REMOTE);
   EBCDIC ARRAY E[0:11];
   REPLACE E BY "HELLO WORLD!";
   WRITE(F, *, E);
 END.

A simpler program using an inline format:

 BEGIN
   FILE F(KIND=REMOTE);
   WRITE(F, <"HELLO WORLD!">);
 END.

An even simpler program using the Display statement:

 BEGIN DISPLAY("HELLO WORLD!") END.

An alternative example, using Elliott Algol I/O is as follows.  Elliott Algol used different characters for "open-string-quote" and "close-string-quote", represented here by ‘ and ’.

  '''program''' HiFolks;
  '''begin'''
     '''print''' ‘Hello world’;
  '''end''';

Here's a version for the Elliott 803 Algol (A104) The standard Elliott 803 used 5 hole paper tape and thus only had upper case.  The code lacked any quote characters so £ (UK Pound Sign) was used for open quote and ? (Question Mark) for close quote.  Special sequences were placed in double quotes (e.g. ££L?? produced a new line on the teleprinter).   

   HIFOLKS'
   BEGIN
      PRINT £HELLO WORLD£L??'
   END'

The [[ICT 1900]] Algol I/O version allowed input from paper tape or punched card.  Paper tape 'full' mode allowed lower case.  Output was to a line printer.
   'PROGRAM' (HELLO)
   'BEGIN'
      'COMMENT' OPEN QUOTE IS '(', CLOSE IS ')', PRINTABLE SPACE HAS TO
                BE WRITTEN AS % BECAUSE SPACES ARE IGNORED;
      WRITE TEXT('('HELLO%WORLD')');
   'END'
   'FINISH'

==See also==
{{col-begin}}
{{col-3}}
* [[ALGOL]]
* [[ALGOL 58]]
* [[ALGOL N]]
* [[ALGOL 68]]
* [[ALGOL W]]
{{col-3}}
* [[Atlas Autocode]]
* [[Coral 66]]
* [[Edinburgh IMP]]
* [[Jensen's Device]]
* [[ISWIM]]
{{col-3}}
* [[JOVIAL]]
* [[NELIAC]]
* [[Simula]]
* [[S-algol]]
* [[Scheme (programming language)]]
{{col-end}}

==References==
{{Reflist|2}}

==Further reading==
* B. Randell and L.J. Russell, ''ALGOL 60 Implementation: The Translation and Use of ALGOL 60 Programs on a Computer''. Academic Press, 1964. The design of the '''Whetstone Compiler'''. One of the early published descriptions of implementing a compiler. See the related papers: [http://www.cs.ncl.ac.uk/research/pubs/articles/papers/427.pdf Whetstone Algol Revisited], and [http://www.cs.ncl.ac.uk/publications/books/papers/124.pdf The Whetstone KDF9 Algol Translator] by B. Randell
* E. W, Dijkstra, ''Algol 60 translation: an algol 60 translator for the x1 and making a translator for algol 60'', report MR 35/61. Mathematisch Centrum, Amsterdam, 1961. [http://www.cs.utexas.edu/users/EWD/MCReps/MR35.PDF]

===Comparisons with other languages===
* [http://www2.research.att.com/~kfisher/cs242/2008/Slides/AlgolAndHaskell.pptx The Algol Family and Haskell (pptx)] - Kathleen Fisher <!-- retrieved 13 Apr 2010 -->

==External links==
* [http://www.masswerk.at/algol60/report.htm Revised Report on the Algorithmic Language Algol 60] by Peter Naur, et al. ALGOL definition
* A BNF [http://www.lrz.de/~bernhard/Algol-BNF.html syntax summary] of ALGOL 60
* [http://www.cs.ucsb.edu/~ravenben/papers/coreos/Hoa81.pdf "The Emperor's Old Clothes"] - Hoare's 1980 ACM Turing Award speech, which discusses ALGOL history and his involvement
* [http://www.gnu.org/software/marst/ MARST], a free Algol-to-C translator
* [http://rogerdmoore.ca/JOUR/ AN IMPLEMENTATION OF ALGOL 60 FOR THE FP6000] Discussion of some implementation issues.
* [http://portal.acm.org/ft_gateway.cfm?id=808370&type=pdf&coll=&dl=ACM&CFID=15151515&CFTOKEN=6184618 "The European Side of the Last Phase of the Development of ALGOL 60" by Peter Naur]
* Edinburgh University wrote compilers for Algol60 (later updated for Algol60M) based on their Atlas Autocode compilers initially bootstrapped from the Atlas to the KDF-9. The Edinburgh compilers generated code for the ICL1900, the ICL4/75 (an IBM360 clone), and the ICL2900. Here is the [http://history.dcs.ed.ac.uk/archive/os/emas/users/ercc07/emas-2900/algolps9.txt BNF for Algol60] and the [http://history.dcs.ed.ac.uk/archive/os/emas/emas2/compilers/algol/algol60fs.imp.html ICL2900 compiler source], [http://history.dcs.ed.ac.uk/archive/os/emas/emas2/compilers/algol/bsyslib.txt-view.html library documentation], and [http://history.dcs.ed.ac.uk/archive/os/emas/users/ercc07/emas-2900/ a considerable test suite] including [http://history.dcs.ed.ac.uk/archive/os/emas/users/ercc07/emas-2900/wichtests_pete1.txt Brian Wichmann's tests.] Also there is a rather superficial [http://history.dcs.ed.ac.uk/archive/os/emas/users/ercc07/emas-2900/palgcons.txt Algol60 to Atlas Autocode source-level translator].
* [[Eric S. Raymond]]'s [http://www.catb.org/retro/ Retrocomputing Museum], among others a link to the NASE Algol-60 interpreter written in C.
* [http://www.bertnase.de/a60 The NASE interpreter]
* Stories about Burrough's B5000 [http://ed-thelen.org/comp-hist/B5000-AlgolRWaychoff.html]

{{DEFAULTSORT:Algol}}
[[Category:ALGOL 60 dialects]]
[[Category:Articles with example ALGOL 60 code]]
[[Category:Procedural programming languages]]
[[Category:Structured programming languages]]
[[Category:Systems programming languages]]

[[Category:Algol programming language family]]

[[bn:??????? ??]]
[[de:Algol 60]]
[[et:Algol-60]]
[[nl:Algol-60]]
[[pt:ALGOL 60]]
[[sk:ALGOL 60]]</text>
</page>
<page>
<id>390</id>
<title>ALGOL 68S</title>
<text>'''ALGOL 68S'''<ref name="SIGPLAN">''A Sublanguage of ALGOL 68'', P.G. Hibbard, SIGPLAN Notices 12(5), May 1977</ref> was designed as a subset of [[ALGOL 68]] in order to permit single-pass compilation. It was mostly for numerical computation.

==Implementations==
A compiler for ALGOL 68S was available for the [[PDP-11]], written in [[BLISS (programming language)|BLISS]]. The multiprocessor version designed for the [[C.mmp]]<ref name="Cmmp">[http://vestein.arb-phys.uni-dortmund.de/~wb/a68s.txt] Description of C.mmp A68S implementation.</ref> has been preserved at the [[PUPS]] archive of the PDP11 Unix Heritage society, c.f. [http://www.tuhs.org/Archive/PDP-11/Applications/algol68.tar.gz].

[[Charles H. Lindsey]] has another ALGOL 68 implementation called ALGOL 68S for [[Sun3]], Sun [[Sparc]] (under [[SunOS]] 4.1), Sun Sparc (under [[Solaris (operating system)|Solaris]] 2), [[Atari ST]] (under [[Atari ST|GEMDOS]]) and [[Acorn Archimedes]] (under [[RISCOS]]), c.f. [http://www.cs.man.ac.uk/~chl#ALGOL%2068]

==Chief differences from ALGOL 68==
* no '''union'''
* no '''flex''' but '''string'''s are handled specially
* no arrays inside structures (but references to arrays would be allowed) and a similar restriction on arrays of arrays (multidimensional arrays are nonetheless permitted)
* limitations on use of '''long''' and '''short''' to facilitate implementation on small computers
* no '''heap'''
* no parallel processing
* restrictions on the order of declaration and other small syntactic differences to make single pass compilation possible
* no '''format'''s
(summarised from Appendix 4 of the Informal Introduction<ref name="II">''Informal Introduction to Algol 68'', C.H. Lindsey and S.G. van der Meulen, North-Holland 1977</ref>)

==References==
<references/>

{{DEFAULTSORT:Algol 68s}}
[[Category:ALGOL 68 implementation|Subset]]

{{compu-lang-stub}}</text>
</page>
<page>
<id>395</id>
<title>ALGOL Y</title>
<text>'''ALGOL Y''' was the name given to a speculated successor for the [[ALGOL 60 programming language]] that incorporated some radical features that were rejected for [[ALGOL 68]] and [[ALGOL X]]. ALGOL Y was intended to be a "radical reconstruction" of ALGOL.

One such feature was the possibility to construct new <code>proc mode</code>'s at [[run-time]], which was criticized as the ability to ''modify its own programs at run time'' while, on the other hand, it would have brought ALGOL Y to the same level of expressiveness as [[LISP]].

==References==
* http://archive.computerhistory.org/resources/text/algol/ACM_Algol_bulletin/1061688/p8-de_morgan.pdf

== See also ==  
* [[ALGOL 60]]
* [[ALGOL 68]]

[[Category:Algol programming language family]]

{{compu-lang-stub}}</text>
</page>
<page>
<id>402</id>
<title>ALynx</title>
<text>{{no footnotes|date=December 2010}}
'''ALynx''' is an [[ASCII]]-[[Web browser]] for [[Amiga]] / ([[AmiTCP]] | MLink | AS225) which is a port of [[Lynx (web browser)|Lynx]] version 2.4-FM. 

The current stable version of ALynx is 1.29 and is still available for downloaded from the Amiga Aminet Repository.

Version 1.31 is also available.

== History ==
ALynx: Amiga port of Lynx was ported to Amiga in 1995 by P. Marquardt. It was a porting of Lynx, which is a general-purpose distributed information browser and is part of the World Wide Web project. Lynx was designed to support a Campus Wide Information System (CWIS), but can be used for many other applications.

This browser is no longer being developed on Amiga.

== See also ==
* [[AMosaic (web browser)|AMosaic]]
* [[AWeb (web browser)|AWeb]]
* [[IBrowse (web browser)|IBrowse]]
* [[NetSurf]]
* [[Origyn Web Browser]]
* [[Sputnik browser|Sputnik]]
* [[TimberWolf Browser|TimberWolf]]
* [[Voyager (web browser)|Voyager]]

== External links ==
* [http://www.molgen.mpg.de/~alynx/ ALynx homepage]
* [http://www.molgen.mpg.de/~alynx/ALynx/history.HTML History]
* [http://aminet.net/ Aminet]

{{Earlybrowsers}}
{{Web browsers}}
{{AmigaOS}}

{{DEFAULTSORT:Alynx}}
[[Category:Text-based web browsers]]
[[Category:Amiga software]]
[[Category:Web browsers for AmigaOS]]
[[Category:Discontinued web browsers]]


{{web-software-stub}}</text>
</page>
<page>
<id>416</id>
<title>AMPL</title>
<text>{{Infobox programming language
| name                   = AMPL
| logo                   = [[Image:Ampl.jpg]]
| caption                = 
| paradigm               = 
| year                   = 1990
| designer               = [[Robert Fourer]]<br/> David Gay<br/> [[Brian Kernighan]]<br/>[[Bell Labs]]
| developer              = 
| latest_release_version = 20100928
| latest_release_date    = September 28, 2010
| latest_test_version    = 
| latest_test_date       =  
| turing-complete        = 
| typing                 = 
| implementations        = 
| dialects               = 
| influenced_by          = [[AWK]], [[C (programming language)|C]]
| influenced             = 
| operating_system       = [[Cross-platform|Cross-platform (multi-platform)]]
| license                = [[Proprietary software|Proprietary]]
| genre                  = [[Algebraic modeling language|Algebraic Modeling Language (AML)]]
| website                = [http://www.ampl.com AMPL home page]
| file_ext               = .mod .dat .run
}}

'''AMPL''', an acronym for '''"A Mathematical Programming Language"''', is an [[algebraic modeling language]] for describing and solving high-complexity problems for large-scale mathematical computation (i.e. large-scale optimization and scheduling-type problems)
<ref>
{{cite book
| title = AMPL: A Modeling Language for Mathematical Programming
| last = Fourer
| first = Robert
| authorlink = Robert Fourer
| coauthors = David M. Gay, [[Brian Kernighan|Brian W. Kernighan]]
| year = 2002
| publisher = Duxbury Press
| isbn = 978-0534388096}}
</ref>.
It was developed by [[Robert Fourer]], [[David Gay]] and [[Brian Kernighan]] at [[Bell Labs|Bell Laboratories]].
AMPL does not solve problems directly; instead, it calls appropriate external [[solver]]s (such as [[CPLEX]], [[FortMP]], [[MINOS (solver)|MINOS]], [[IPOPT]], [[SNOPT]], [[KNITRO]], and so on) to obtain solutions. Problems are passed to solvers as [[nl (format)|nl files]].

One particular advantage of AMPL is the similarity of its syntax to the mathematical notation of [[Optimization (mathematics)|optimization]] problems. This allows for a very concise and readable definition of problems in the domain of [[mathematical programming|optimization]]. Many modern solvers available on the NEOS <ref name="neos">http://www-neos.mcs.anl.gov/neos/</ref> server hosted at the [[Argonne National Laboratory]] accept AMPL input. According to the NEOS statistics AMPL is the most popular format for representing mathematical programming problems.

==Availability==

AMPL is available for many popular 32- and 64-bit platforms including [[Linux]], [[Mac OS X]] and [[Windows]].
It is a proprietary software currently maintained by AMPL Optimization LLC. However there exist several online services <ref name="neos"/><ref>http://www.ampl.com/TRYAMPL/</ref> providing free modeling and solving facilities using AMPL. Also a free student version with limited functionality is available <ref>http://www.ampl.com/DOWNLOADS/index.html</ref>.

==Optimization problems supported==

AMPL handles a wide range of problem types, among them:
* [[Linear programming]]
* [[Quadratic programming]]
* [[Nonlinear programming]]
* [[Linear_programming#Integer_unknowns|Mixed-integer programming]]
* Mixed-integer quadratic programming with or without [[Convex function|convex]] quadratic constraints
* Mixed-integer nonlinear programming
* [[Global optimization]]
* [[Semidefinite programming]] problems with [[Bilinear form|bilinear]] matrix inequalities
* [[Complementarity theory|Complementarity problems]] (MPECs) in discrete or continuous variables

==Timeline==

* 1990 Paper describing the AMPL modeling language was published in [[Management Science: A Journal of the Institute for Operations Research and the Management Sciences|Management Science]]<ref>
{{Cite journal
  | authorlink = Robert Fourer
  | authorlink = David M. Gay
  | authorlink = Brian W. Kernighan
  | title = A Modeling Language for Mathematical Programming
  | journal = Management Science
  | volume = 36
  | pages = 519–554–83
  | year = 1990
  | url = http://www.ampl.com/REFS/amplmod.pdf}}
</ref>
* 1991 AMPL supports [[nonlinear programming]] and [[automatic differentiation]]
* 1995 Extensions for representing [[piecewise linear function|piecewise-linear]] and network structures
* 1998 AMPL supports [[complementarity theory|complementarity problems]]
* 2000 Relational database access

==A sample model==

A transportation problem from [[George Dantzig]] is used to provide a sample AMPL model. This problem finds the least cost shipping schedule that meets requirements at markets and supplies at factories.

Dantzig, G B, Chapter 3.3. In Linear Programming and Extensions. Princeton University Press, Princeton, New Jersey, 1963.

 set Plants;
 set Markets;
 
 # Capacity of plant p in cases
 param Capacity{p in Plants};
 
 # Demand at market m in cases
 param Demand{m in Markets};
 
 # Distance in thousands of miles
 param Distance{Plants, Markets};
 
 # Freight in dollars per case per thousand miles
 param Freight;
 
 # Transport cost in thousands of dollars per case
 param TransportCost{p in Plants, m in Markets} =
     Freight * Distance[p, m] / 1000; 
 
 # Shipment quantities in cases
 var shipment{Plants, Markets} >= 0;
 
 # Total transportation costs in thousands of dollars
 minimize cost:
     sum{p in Plants, m in Markets} TransportCost[p, m] * shipment[p, m];
 
 # Observe supply limit at plant p
 s.t. supply{p in Plants}: sum{m in Markets} shipment[p, m] <= Capacity[p];
 
 # Satisfy demand at market m
 s.t. demand{m in Markets}: sum{p in Plants} shipment[p, m] >= Demand[m];
 
 data;
 
 set Plants := seattle san-diego;
 set Markets := new-york chicago topeka;
 
 param Capacity :=
     seattle   350
     san-diego 600;
 
 param Demand :=
     new-york 325
     chicago  300
     topeka   275;
 
 param Distance : new-york chicago topeka :=
     seattle        2.5      1.7     1.8
     san-diego      2.5      1.8     1.4;
 
 param Freight := 90;

==See also==
* [[APMonitor]]
* [[General Algebraic Modeling System]] (GAMS)
* [[MPS (format)]]
* [[nl (format)]]
* [[GLPK]] - free open source system based on a subset of AMPL

==References==
<references/>

==External links==
* [http://www.ampl.com AMPL home page]
* [http://www.iems.northwestern.edu/~4er Prof. Fourer's home page] at [[Northwestern University]]

{{DEFAULTSORT:Ampl}}
[[Category:Computer algebra systems]]
[[Category:Mathematical optimization software]]
[[Category:Numerical programming languages]]
[[Category:Operations research]]

[[de:AMPL]]
[[it:AMPL]]
[[ru:AMPL (???? ????????????????)]]
[[sv:AMPL]]</text>
</page>
<page>
<id>420</id>
<title>AMSRefs</title>
<text>{{orphan|date=April 2010}}

The '''AMSRefs''' package is an extension package for [[LaTeX]] that facilitates the creation of [[bibliography|bibliographies]] and [[citation]]s in LaTeX documents. Use of AMSRefs allows for the retention of rich [[markup language|markup]] that makes references easier to reuse in other publishing environments, such as on the [[Internet|Web]], in other book or journal formats, or with citation services. The package is available for free on the [[American Mathematical Society]]'s website.

The purpose of AMSRefs is to provide a simpler, more flexible way to use many of the bibliography and citation features that users of LaTeX and [[BibTeX]] have come to expect. AMSRefs has been designed to encourage the preservation of structured markup of the
bibliography throughout the entire lifetime of a document, from rough draft to final archival version. It does this by replacing the unstructured [[.bbl]] file format of LaTeX by a fully structured format. The package is compatible with the “showkeys”, “hyperref”, and “backrefs” packages and implements the functionality of the “cite” package. AMSRefs provides that the bibliography style is controlled completely through LaTeX instead of being determined partly by a BibTeX style file and partly through LaTeX. The same data format is used in the database file and in the LaTeX document. Thus an AMSRefs-format database is a valid LaTeX document that can be printed directly.  Also, an author can send an article with embedded references to a publisher without any loss of internal structural information about the entries. It is possible to use the AMSRefs package without abandoning one’s existing BibTeX database files.

== External links ==
* [http://www.ams.org/tex/author-info.html Author Packages for Publishing with the AMS]
* [http://www.ams.org/tex/amsrefs.html The amsrefs package]
* [ftp://ftp.ams.org/pub/tex/amsrefs/amsrdoc.pdf User’s Guide to the amsrefs Package]
* PDF file [http://amath.colorado.edu/documentation/LaTeX/reference/faq/bibstyles.pdf bibstyles.pdf] illustrates how several bibliographic styles appear with citations and reference entries, generated using BibTeX

===References===
* [http://www.ams.org/notices/200409/inside.pdf Inside the AMS], Notices of the AMS, volume 51, number 9, p. 1079.

[[Category:Page description languages]]
[[Category:Free TeX software]]
[[Category:Declarative markup languages]]


{{digital-typography-stub}}</text>
</page>
<page>
<id>428</id>
<title>AN/FSQ-31V</title>
<text>{{Redirect|Q31|the airport with that [[FAA]] [[location identifier]]|Sequoia Field}}
<!-- This is a work in progress - I am attempting to find sources for the information which, since the machines were in a classified environment it was impossible to take photographs of the machines -->

The '''AN/FSQ-31V''' was a [[computer]] made by [[IBM]] (International Business Machines) in 1960 and 1961 for the United States Air Force [[Strategic Air Command]] (SAC). The IBM Model name for the machine was the 4020<ref>{{cite web
 | url = http://bitsavers.org/pdf/ibm/4020/4020_Military_Computer_General_Info_Oct59.pdf
 | title = The IBM 4020 Military Computer
 | year = 1959
 | publisher = International Business Machines
 | accessdate = September 28, 2009
 }}</ref>.
Three '''Q-31''' units were built. They were used as the Data Processing Center (DPC) portion of the [[SAC Automated Command and Control System]]<ref>{{cite web
 | last = Wohlman
 | first = John
 | authorlink =
 | coauthors =
 | year = 1968
 | url = http://www.airpower.maxwell.af.mil/airchronicles/aureview/1968/jan-feb/wohlman.html
 | title = Computer-Generated Map Data
 | subtitle = An Aid to Command and Control
 | work =
 | publisher = Air University Review
 | accessdate = June 20, 2006
 }}</ref>.

==Locations==

Two (DPC 1 and DPC 2) were installed at SAC headquarters (Bldg 500) at [[Offutt Air Force Base]] outside [[Omaha, Nebraska]]. One (DPC 3) was installed in the Headquarters 15th Air Force Combat Operations Center at [[March Air Force Base]], near [[Riverside, California]]. Another machine, designated the [[AN/FSQ-32]], was installed at [[System Development Corporation]] (SDC) headquarters, [[Santa Monica, California]] and was used as a development machine for the compiler and operational software for the '''Q-31'''s.

===Architecture===

The system was divided into functional sections:
:# [[Central Processing Unit]]
:# Memory
:# High-Speed Input/Output
:# Low-Speed Input/Output
:# Operations Console

====Central Processing Unit====

Memory was addressed by words, which were 48 [[bit]]s long. Each half word (24 bits) had a parity bit, for a total storage size of 50 bits. Depending on addressing mode, each word could be viewed as either 1 48-bit word, 2-24 bit half-words, 6 8-bit characters ([[EBCDIC]] encoded) or 8 6-bit bytes. A 6-bit byte, as opposed to the 8-bit [[byte]] in common use today, was common in IBM and other scientific computers of the time. The address space provided a maximum of 256K words.

The [[Instruction set|ISA]] was rather complicated for its time. The instructions were a fixed length of one word providing 24 bits for the operation and 24 bits for the address. The address consisted of 18 bits (3 bytes) for the memory address, with other bits used for the specification of index registers and indirect addressing.

The operation field provided the operation code and a variety of modifiers. Some modifiers allowed instructions to operate only on specific bytes of a word or on specific bits of a byte without separate masking operations. Other modifiers allowed the single 48-bit [[Arithmetic logic unit|ALU]] to operate on a pair of 24-bit operands to facilitate vector operations.

Other parts of the CPU were some sense switches, which could be used to control various software functions, the run/halt switch, and a switch, amplifier, and speaker assembly, which could be used to provide audio feedback or even play music, by
connecting one of four bits in the main accumulator which could then be toggled under software control at an appropriate rate to produce whatever tones one wanted. Someone in the software development division had produced a card deck on which was stored an executive that allowed selecting from a whole list of songs, including Christmas Carols, by setting the sense switches to a particular code, which would be printed out on the I/O Typewriter if a certain sense switch was on when the program was started.

====Memory====

The '''Q-31'''s were equipped with four 16 [[word (computing)|kiloword]] memory banks. The memory bank was oil and water cooled. Also considered as part of the memory subsystem in that they were addressed via fixed reserved memory addresses, were four 48 position switch banks, in which a short program could be inserted, and a [[plugboard]], similar to the one used in [[IBM]] [[unit record equipment]], that had the capacity of 32 [[word (computing)|word]]s, so longer [[bootstrap]] or diagnostic programs could be installed in plug panels which could then be inserted into the receptacle and used. This served as a primitive [[Read-Only Memory|ROM]].

====High-Speed Input/Output====

The High-Speed I/O section provided interfaces to the Drum Memory system, which consisted of a control system, and two vertical drum memory devices. Each drum read and wrote 50 bits at a time in parallel so transferring data could be done quickly. The drums were organized as 17 fields with 8192 words per field for a total capacity of 139264 words. The motors that rotated the drums required 208 VAC at 45 Hz so a motor generator unit was required to change the frequency from 60 Hz. This added to the noise level in the computer room.

====Low-Speed Input/Output====

The Low-Speed I/O section interfaced to several different devices:
:* [[SACCS EDTCC]], which then interfaced to the rest of the [[SAC Automated Command and Control|SACCS]] system.
:* Tape Controllers 1 and 2, connected to 16 [[IBM 729]]-V Tape Drives
:* Disk File Controller, which was a modified Tape Controller, connected to the
:** Bryant PH 2000 Disk File, which had 24 disks that were 39 inches in diameter, 125 read/write heads that were hydraulically actuated, and had a total capacity of 26 [[megabyte|MB]]
:* [[IBM 1401]], which controlled data transfers from unit-record equipment:
:** [[IBM 1402]] Card Reader/Punch
:** [[IBM 1403]] Line Printer
:** 2 [[IBM 729]]-V Tape Drives
:* 2 [[IBM Selectric]] Typewriters, (I/O Typewriters) one of which was used for operational messages and the other for diagnostic messages and maintenance activities.

<!--
The computers were part of the SAC command and control system. SDC developed the system software using [[JOVIAL]] (Jules Own Version of the International Algebraic Language), one of the first high level complied programming languages.
-->

==References==
{{Portal|United States Air Force}}
{{Reflist}}

==External links==
* [http://bitsavers.org/pdf/ibm/4020/ Bitsavers.org IBM 4020 documentation]

{{DEFAULTSORT:An/Fsq-31v}}
[[Category:Military computers]]
[[Category:Military electronics of the United States]]
[[Category:Equipment of the United States Air Force]]
[[Category:IBM transistorized computers]]
[[Category:Joint Electronics Type Designation System]]</text>
</page>
<page>
<id>447</id>
<title>ANIMAL (image processing)</title>
<text>'''ANIMAL''' (first implementation: 1988 - revised: 2004) is an interactive environment for [[Image processing]] that is oriented toward the rapid prototyping, testing, and modification of algorithms. To create ANIMAL (AN IMage ALgebra), [[XLISP]] of David Betz was extended with some new types: sockets, arrays, images, masks, and drawables.
The theoretical framework and the implementation of the working environment is described in the paper [http://tev.fbk.eu/people/modena/Papers/BruMod_AF_1989.pdf ANIMAL: AN IMage ALgebra]<ref>R. Brunelli and C. M. Modena, "ANIMAL: AN IMage ALgebra", High Frequency, 1989, LVIII:3:255-259</ref>.

In the theoretical framework of ANIMAL a [[digital image]] is a boundless matrix with its ''history''. However, in the implementation it is bounded by a rectangular region in the discrete plane and the elements outside the region have a constant value. The size and position of the region in the plane (focus) is defined by the coordinates of the rectangle. In this way all the [[pixel]]s, including those on the border, have the same number of neighbors (useful in local operators, such as [[digital filter]]s). Furthermore, pixelwise [[commutative operation]]s 
remain commutative on image level, independently on focus (size and position of the rectangular regions). The ''history'' is a list which tracks the operations and parameters applied to the matrix. This mechanism is useful to document algorithms and generate new functions.

ANIMAL has been ported to [[R (programming language)|R]], a freely available language and environment for statistical computing and graphics.
[http://tev.fbk.eu/TM/AnImAl.tgz  The new implementation]   is free  and is used in a recent book<ref>R. Brunelli, ''Template Matching Techniques in Computer Vision: Theory and Practice'', Wiley, ISBN 978-0-470-51706-2, 2009 ''([http://eu.wiley.com/WileyCDA/WileyTitle/productCd-0470517069.html] TM book)''</ref>  to illustrate the use of template matching techniques in computer vision  (see the [http://tev.fbk.eu/TM/html/tmCodeCompanionli2.html#x3-2000 preface] of the [http://tev.fbk.eu/TM/html book code companion]).

==References==
<references/>

{{DEFAULTSORT:Animal (Image Processing)}}
[[Category:Lisp programming language family]]
[[Category:Computer vision software]]
[[Category:Image processing]]</text>
</page>
<page>
<id>450</id>
<title>ANOVA-simultaneous component analysis</title>
<text>{{multiple issues|context=November 2010|wikify=November 2010|onesource=November 2010}}

'''ASCA''', '''ANOVA-SCA''', or '''analysis of variance – simultaneous component analysis''' is a method that partitions variation and enables interpretation of these partitions by SCA, a method that is similar to [[Principal components analysis|PCA]]. This method is a multi or even megavariate extension of [[ANOVA]]. The variation partitioning is similar to Analysis of variance (ANOVA). Each partition matches all variation induced by an effect or factor, usually a treatment regime or experimental condition. The calculated effect partitions are called effect estimates. Because even the effect estimates are multivariate, interpretation of these effects estimates is not intuitive. By applying SCA on the effect estimates one gets a simple interpretable result. In case of more than one effect this method estimates the effects in such a way that the different effects are not correlated. See also references ([http://dx.doi.org/10.1093/bioinformatics/bti476], [http://dx.doi.org/10.1002/cem.952] and [http://dx.doi.org/10.1186/1471-2105-8-322]).

== Details ==

Many research areas see increasingly large numbers of variables in only few samples. The low sample to variable ratio creates problems known as [[multicollinearity]] and singularity. Because of this, most traditional multivariate statistical methods cannot be applied.

== ASCA algorithm ==

This section details how to calculate the ASCA model on a case of two main effects with one interaction effect. It is easy to extend the declared rationale to more main effects and more interaction effects. If the first effect is time and the second effect is dosage, only the interaction between time and dosage exist. 
We assume there are four time points and three dosage levels. 

Let X be a matrix that holds the data. X is mean centered, thus having zero mean columns. A1, A2, A3 and A4, as B1, B2 and B3 indicate the levels in time and dosage. A and B are required to be balanced if the effect estimates need to be orthogonal and the partitioning unique. Matrix E holds the information that is not assigned to any effect. The partitioning gives the following notation:

: <math>X = A+B+AB+E \,</math>

== Calculating main effect estimate A (or B) ==

Find all rows that correspond to effect A level 1 and averages these rows. The result is a vector. Repeat this for the other effect levels. Make a new matrix of the same size of X and place the calculated averages in the matching rows. That is, give all rows that match effect (i.e.) A level 1 the average of effect A level 1. 
After completing the level estimates for the effect, perform an SCA. The scores of this SCA are the sample deviations for the effect, the important variables of this effect are in the weights of the SCA loading vector.

== Calculating interaction effect estimate AB ==

Estimating the interaction effect is similar to estimating main effects. The difference is that for interaction estimates the rows that match effect A level 1 are combined with the effect B level 1 and all combinations of effects and levels are cycled through. In our example setting, with four time point and three dosage levels there are 12 interaction sets {A1-B1, A1B2, A2B1, A2B2 and so on}. It is important to deflate (remove) the main effects before estimating the interaction effect.

== SCA on partitions A, B and AB ==

Simultaneous component analysis is mathematically identical to [[Principal components analysis|PCA]], but is semantically different in that it models different objects or subjects at the same time. 
The standard notation for a SCA – and PCA – model is:

: <math>X=TP^{'}+E \,</math>

where ''X'' is the data, ''T'' are the component scores and ''P'' are the component loadings. ''E'' is the residual or error matrix. Because ASCA models the variation partitions by SCA, the model for effect estimates looks like this:

: <math>A=T_{a}P_{a}^{'}+E_{a} \,</math>

: <math>B=T_{b}P_{b}^{'}+E_{b} \,</math>

: <math>AB=T_{ab}P_{ab}^{'}+E_{ab} \,</math>

: <math>E=T_{e}P_{e}^{'}+E_{e} \,</math>

Note that every partition has its own error matrix. However, algebra dictates that in a balanced mean centered data set every two level system is of rank one. This results in zero errors, since any rank 1 matrix can be written as the product of a single component score and loading vector.

The full ASCA model with two effects and interaction including the SCA looks like this:

Decomposition:

: <math>X=A+B+AB+E \,</math>

: <math>X=T_{a}P_{a}^{'}+T_{b}P_{b}^{'}+T_{ab}P_{ab}^{'}+T_{e}P_{e}^{'}+E_{a}+E_{b}+E_{ab}+E_{e}+E \,</math>

== Time as an Effect ==

Because 'time' is treated as a qualitative factor in the ANOVA decomposition preceding ASCA, a nonlinear multivariate time trajectory can be modeled. An example of this is shown in Figure 10 of this reference ([http://www3.interscience.wiley.com/journal/121356309/abstract]).

== References ==

* [http://dx.doi.org/10.1093/bioinformatics/bti476]  ANOVA-Simultaneous Component Analysis (ASCA): a new tool for analyzing designed metabolomics data;<br /><small>Age K. Smilde, Jeroen J. Jansen, Huub C. J. Hoefsloot, Robert-Jan A. N. Lamers, Jan van der Greef and Marieke E. Timmerman</small>

* [http://dx.doi.org/10.1002/cem.952]  ASCA: analysis of multivariate data obtained from an experimental design; <br /><small>Jeroen J. Jansen, Huub C. J. Hoefsloot, Jan van der Greef, Marieke E. Timmerman, Johan A. Westerhuis, Age K. Smilde</small>

* [http://dx.doi.org/10.1186/1471-2105-8-322]  Statistical validation of megavariate effects in ASCA;<br /><small>Daniel J Vis, Johan A Westerhuis, Age K Smilde and Jan van der Greef</small>

* [http://www3.interscience.wiley.com/journal/121356309/abstract] The geometry of ASCA;<br /><small>Age K. Smilde, Huub. C.J. Hoefsloot, Johan. A. Westerhuis</small>

[[Category:Analysis of variance]]
[[Category:Bioinformatics]]
[[Category:Data analysis]]</text>
</page>
<page>
<id>452</id>
<title>ANSI/ISO C Specification Language</title>
<text>{{Infobox programming language
| name                   = ANSI/ISO C Specification Language
| paradigm               = [[declarative programming|declarative]] with few [[imperative programming|imperative]] features.
| year                   = 2008
| designer               = [[Commissariat à l'Énergie Atomique]] and [[INRIA]]
| developer              = [[Commissariat à l'Énergie Atomique]] and [[INRIA]]
| latest release version = [[2008]]
| latest release date    = December 2008
| typing                 = [[Type system|static]]
| implementations        = an implementation is in the [[Frama-C]] platform.
| influenced_by          = [[Java Modeling Language|JML]]
}}

The '''ANSI/ISO C Specification Language '''('''ACSL''') is a specification language for [[C program]]s, using Hoare style pre- and postconditions and invariants, that follows the design by contract paradigm. Specifications are written as C annotation comments to the C program, which hence can be compiled with any C compiler.

The current verification tool for ACSL is [[Frama-C]].

== Overview ==

ACSL is a Behavioral Interface Specification Language (BISL). It aims at specifying behavioral properties of C source code. The main inspiration for this language comes from the specification language of the Caduceus tool for deductive verification of behavioral properties of [[C program]]s. The specification language of Caduceus is itself inspired from [[JML]] which aims at similar goals for Java source code.

One difference with [[JML]], is that ACSL aims at static verification and deductive verification whereas [[JML]] aims both at runtime assertion checking and static verification using for instance the [[ESC/Java]] tool.

== Syntax ==

Let us consider the following example for the prototype of a function named <code>incrstar</code>:

 /*@ requires \valid(p);
   @ assigns *p;
   @ ensures *p == \old(*p) + 1;
   @*/
 void incrstar (int *p);

The contract is given by the comment which starts with <code>/*@</code>. Its meaning is as follows:
* the first line is a precondition: it states that function <code>incrstar</code> must be called with a pointer <code>p</code> that points to a safely allocated memory location.
* Second line is a frame clause, stating that function <code>incrstar</code> does not modify any memory location but the one pointed to by <code>p</code>.
* Finally, the <code>ensures</code> clause is a postcondition, which specifies that the value <code>*p</code> is incremented by one.

== Tool support ==

Most of the features of ACSL are supported by [[Frama-C]].

== References ==

* [http://www.springerlink.com/content/r4480863w8726723/ Example of ACSL usage] Sufficient Preconditions for Modular Assertion Checking in VMCAI 2008 pages 188-202.
* A tutorial [http://www.first.fraunhofer.de/uploads/tx_wfproject/acsl-by-example-5_1_0_05.pdf ACSL By Example] was written as part of the [http://www.first.fraunhofer.de/en/projects/devicesoft_deduktive_verifikation_fuer_sicherheitskritische_software_eingebetteter_systeme DEVICE-SOFT] project at  [http://www.first.fraunhofer.de/en/home Fraunhofer FIRST]
* Report mentioning the use of ACSL in teaching [http://www.it-education.ru/2009/reports/Petrenko_Khoroshilov.htm], ???????? ????? ?????????? and ????????? ??????? ????????????.

== External links ==

Complete ACSL specification is available from http://frama-c.cea.fr/download.html

[[Category:Specification languages]]
[[Category:C programming language]]</text>
</page>
<page>
<id>455</id>
<title>ANSI art</title>
<text>'''ANSI art''' is a computer artform that was widely used at one time on [[Bulletin board system|BBSes]]. It is similar to [[ASCII art]], but constructed from a larger set of 256 letters, numbers, and symbols &mdash; all codes found in IBM [[code page 437]], often referred to as [[extended ASCII]] and used in [[MS-DOS]] and [[Unix]]<ref>http://www.cplusplus.com/doc/ascii/</ref> environments. ANSI art also contains special [[ANSI escape code|ANSI escape sequence]]s that color text with the 16 foreground and 8 background colours offered by [[ANSI.SYS]], an MS-DOS [[device driver]] loosely based upon the [[American National Standards Institute|ANSI]] X3.64 standard for [[text terminal]]s. Some ANSI artists take advantage of the cursor control sequences within ANSI X3.64 in order to create animations, commonly referred to as ''[[ANSImation]]s''.  ANSI art and text files which incorporate ANSI codes carry the ''de facto'' <tt>.ANS</tt> [[filename extension|file extension]].
__TOC__
ANSI art is considerably more flexible than ASCII art, because the particular character set it uses contains symbols intended for drawing, such as a wide variety of box-drawing characters and block characters that [[dithering|dither]] the foreground and background color. It also adds accented characters and math symbols that often find creative use among ANSI artists.

The popularity of ANSI art encouraged the creation of a powerful shareware package called [[TheDraw]] coded by Ian E. Davis in 1986. Not only did it considerably simplify the process of making an ANSI art screen from scratch, but it also included a variety of "fonts", large letters constructed from box and block characters, and transition animations such as ''dissolve'' and ''clock''. No new versions of TheDraw emerged after version 4.63 in 1993, but in later years a number of other ANSI editors appeared, some of which are still maintained today.

The decline of both BBSes and DOS users has made it difficult for many users to even view ANSI animations. As a consequence, this form of art is no longer practiced to the degree it once was.

[[File:Zzt.png|thumb|right|250px|Entry ANSI art screen for [[ZZT]] ]]
The popular game creation system (GCS) ''[[ZZT]]'' used ANSI graphics exclusively. A later GCS based on the same concept, ''[[MegaZeux]]'', allowed users to modify the extended ASCII character set as well.

[[Trade Wars 2002]], a multiplayer BBS game that remains popular 20 years after its release in 1986, used ANSI graphics to depict ships, planets, and important locations, and included cutscenes and even a cinema with ANSI animations.  Many of these ANSI graphics were created by Drew Markham, who went on to form [[Xatrix]]/[[Gray Matter Interactive]] and develop ''[[Redneck Rampage]]'' and ''[[Return to Castle Wolfenstein]]'', among other titles.

[[Dwarf Fortress]] is another game, first released in 2002, leveraging ANSI graphics. Dwarf Fortress' default graphics is exclusively ANSI [[code page 437]] characters.

In [[1987]] [[Amiga]] program ''Skyline BBS'' was the first BBS management program featuring an extension to ANSI Art as a true form of script [[markup language]] communication protocol. It was called [[Skypix]] and was capable to give the user a complete graphical interface, featuring rich graphic content, changeable fonts, mouse-controlled actions, animations and sound.<ref name=Skyline>{{cite web | title = BBSDocumentary, An Overview of BBS Programs | url = http://www.bbsdocumentary.com/software/expanded.html | publisher = [[Jason_Scott_Sadofsky|Jason Scott]] for [[Wired (magazine)|Wired]] Magazine (?) | author = Scott Lee | accessdate = 2005}}</ref>

==See also==
{{multicol}}
* [[ANSI escape code]]
* [[List of text editors#ASCII_and_ANSI_art]]
{{col-break}}
* [[TMDC]]
* [[TheDraw]]
{{col-end}}

==References==
{{Reflist}}

==Bibliography==
* Scott, Jason.  ''"BBS: The Documentary"'' (DVD).  Boston, MA: Bovine Ignition Systems, 2005.  
* Danet, Brenda.  ''"Cyberpl@y: Communicating Online"''.  Oxford, UK: Berg, 2001.  ISBN 1-85973-424-3.
* ''"Dark Domain: the artpacks.acid.org collection"'' (DVD-ROM).  San Jose, CA, USA: ACiD Productions, LLC, 2004.  ISBN 0-9746537-0-5.
* [[Kim Zetter|Zetter, Kim]].  ''[http://www.wired.com/news/culture/0,1284,67776,00.html How Humble BBS Begat Wired World]''.  [[Wired News]].  June 8, 2005.

==External links==
*[http://sixteencolors.net/ Sixteen Colors ANSI Art and ASCII Art Archive] - A web viewable archive of current and past ANSI and ASCII [[Artpack|packs]] released by the [[computer art scene]]
*[http://ansinerator.sourceforge.net/ Ansinerator - a PHP library for processing ANSI art and graphics for web design]
*[http://www.microsoft.com/globaldev/reference/oem/437.htm A detailed table of the character set in IBM code page 437]
*[http://www.zeh.com.br/v12/downloads/dos437.zip Perfect DOS VGA 437] (direct download): A True Type font that recreates the font characters used on ANSI artwork displayed on a VGA screen pixel-by-pixel
*[http://vaperized.com/ansiexpress.htm ANSI Express] is a freeware ANSI file viewer for Windows, which supports baud-rate emulation, ideal for playing back ANSImations.
*[http://www.flashterm.com FlashTerm] Flash telnet client capable of rendering ansi.
*http://aminet.net/package/docs/hyper/ansiguide112 - Ansi/Skypix Specs and Tutorials at Amiga [[Aminet]] official repository (in [[AmigaGuide]] and text format).

{{DEFAULTSORT:Ansi Art}}
[[Category:ASCII art]]
[[Category:Bulletin board systems]]

[[pl:ANSI art]]
[[ru:ANSI-???????]]
[[fi:ANSI-taide]]
[[sv:ANSI-konst]]</text>
</page>
<page>
<id>467</id>
<title>AOL Radio</title>
<text>{{Update|date=February 2010}}

{{Infobox software
| name = AOL Radio
| logo = [[File:AOL Radio logo.png]]
| collapsible = no
| company_slogan = Online Radio - Free Internet Radio Stations.
| author =
| developer = [[AOL LLC]]
| released = 2001
| latest release version =
| latest release date =
| latest preview version =
| latest preview date =
| operating system = [[Mac OS X]], [[Microsoft Windows|Windows]], [[iPhone OS]], [[Linux]]
| platform =
| language =
| status =
| genre = [[Internet Radio]] player, [[Broadcasting]] - [[Radio]]
| license =
| website = [http://radio.aol.com/ AOL Radio]
| screenshot = [[Image:AOL Radio Mac SL.png|250px]]
| caption =   AOL Radio player on running Mac OS X 10.6.1
}}

'''AOL Radio powered by CBS Radio''', (formerly '''AOL Radio featuring XM'''), is an online [[radio]] service.

== History ==
AOL Radio can trace its roots to two companies it acquired on June 1, 1999, for $400 million: Spinner.com and Nullsoft.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,666492,00.html Nullsoft and Spinner acquisition announcement</ref>  Spinner.com was formerly known as TheDJ.com.  Nullsoft was the maker of the popular [[Winamp]] and [[SHOUTcast]] products.  Both new organizations operated out of the same office in [[San Francisco]].  The Spinner.com brand was retired in July 2003, but exists today as an AOL Music blog and a series of channels on AOL Radio.

AOL Radio launched as Radio@AOL, essentially a re-branded Spinner.com, using technology from [[Real Networks]] on October 16, 2001 as part of the AOL 7.0 software announced that same day.<ref>[http://www.timewarner.com/corp/newsroom/pr/0,20812,669020,00.html] AOL Radio Announcement</ref>

In its first month of operation, AOL reported that 2.2 million members accessed Radio@AOL, making it one of AOL's most popular features.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,669108,00.html AOL Radio Launch Announcement</ref>

Initially, Radio@AOL was available only to AOL Members.  On May 22, 2002, AOL released the free Radio@Netscape for non-members<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,669336,00.html Free AOL Radio Press Release</ref> as part of the new Netscape 7.0 browser.  On August 22, 2002, AOL released Radio@Netscape Plus.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,669435,00.html  Radio@Netscape Plus announcement</ref>  Beginning in 2004, AOL started metering Radio@Netscape to allow only two hours of usage per day.  AOL did this to avoid paying copyright royalties and to encourage users to become AOL Members.<ref>http://www.theinquirer.net/?article=15639 AOL Metering Radio@Netscape article at The Inquirer</ref>

On 28 November 2007, AOL announced that they may shut down their web radio services after a 38 percent increase in royalties to air music. Yahoo! and AOL discontinued directing users to their radio sites after [[SoundExchange]], the non-profit performance rights organization that collects royalties on the behalf of sound recording copyright owners (SRCOs) and featured artists for non-interactive digital transmissions, began collecting the higher fees in July.<ref>http://www.bloomberg.com/apps/news?pid=20601103&sid=a0pKOrcpw6yE&refer=us Article concerning royalties issues</ref>

On April 30, 2008, XM and AOL Radio ended their partnership due to the change in Internet royalty rates.<ref>http://journals.aol.com/theradioblog/aolradio/entries/2008/04/30/aol-radio--xm-update-430/1681 04-30-2008 AOL Radio announces end of partnership with XM</ref> On June 10, 2008, a new AOL Radio player debuted with 150 streaming [[CBS Radio]] stations.

On February 4, 2010, AOL Radio banned users outside the U.S. from streaming online radio. An error message points to Last FM. "We're sorry, this station is unavailable from your current location. Instead, enjoy listening to...."<ref>http://www.aolradioblog.com/2010/02/01/a-message-for-international-radio-listeners Announcement concerning international radio listeners</ref>

== Marketing ==

On November 18, 2002, AOL introduced Broadband Radio@AOL.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,669580,00.html Broadband Radio@AOL Announcement</ref>  Broadband Radio@AOL was built into the AOL 8.0 software, and was the first AOL Radio offering based on the AOL streaming technology [[Ultravox (software)|Ultravox]].  By 2003, AOL had migrated most of its AOL Radio products to Ultravox.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,669962,00.html Ultravox Technology press release</ref> It was released in the UK on October 20, 2003.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,670097,00.html UK Release Announcement</ref>

On April 11, 2005, AOL and [[XM Satellite Radio]] joined together to create Radio@AOL featuring XM.<ref>http://www.timewarner.com/corp/newsroom/pr/0,20812,1047989,00.html Radio@AOL featuring AM Announcement</ref>  At the same time, AOL consolidated Radio@AOL and Radio@Netscape as "Radio@AOL featuring XM."  This service was available to AOL members and non-members alike, with twenty XM channels offered (fifty more XM channels require a paying AOL subscription).  Later in 2005, AOL changed the name of Radio@AOL to AOL Radio to align itself with the AOL Music branding.  In July 2005, a web version of AOL Radio was introduced for non-members with unlimited listening.  At the end of 2005, Radio@Netscape was officially retired, with AOL Radio being the official brand.

On April 30, 2008, AOL and [[XM Satellite Radio]] announced the end of their partnership<ref>[http://journals.aol.com/theradioblog/aolradio/entries/2008/04/30/aol-radio--xm-update-430/1681 AOL Radio & XM Update: 4/30<!-- Bot generated title -->]</ref> and the beginning of the new partnership between [[AOL]] and [[CBS Radio]]. The partnership between AOL and CBS Radio would give AOL access to over 150 of CBS Radio's terrestrial stations.

On June 10, 2008 the AOL CBS player for AIM was released. On June 11, 2008, the new AOL CBS Radio player for the web was released.

== Technology ==

AOL Radio powered by CBS Radio is supported on Adobe Flash 9 and is compatible with [[web browser]]s that support Flash 9 on [[Windows 2000]] through [[Windows Vista]] and [[Mac OS X]].

Listeners can connect to AOL Radio through the web, AOL Client, and AOL Radio for Mac. On July 10, 2008 AOL released a client for Apple's [[iPhone]] and [[iPod Touch]] via the [[App Store]] offering mobile streaming of all stations though WiFi, EDGE and 3G cellular connections. AOL Radio is now also available through the [[AOL Instant Messenger]] service, and [[Winamp]].

==Limits==

*Commercial breaks every hour
*There is no rewind, fast-forward, or playback.
*Local radio stations are limited to CBS affiliates
*There is no play-on-demand service
*No direct channel customization, though rating influences the songs played.
*Songs cannot be banned entirely, though giving them a 1-star rating will have them played very rarely.
*Banner ads, which cannot be blocked.
*A maximum of six skips per station per hour. Changing stations, refreshing the page, or reloading the player will use a skip.
*As of 2010, there is no premium subscription to remove the ads or skip limits.

== Notable DJs / Mixers / Personalities ==

*[[DJ AM]]<ref>[http://music.aol.com/artist/adam-dj-am-goldstein/1495380 Adam "DJ Am" Goldstein - AOL Music<!-- Bot generated title -->]</ref>

==See also==
{{Portal|Radio}}
* [[Live365]]
* [[LAUNCHcast]]
* [[SHOUTcast]]

==External links==
* [http://music.aol.com/radioguide/bb AOL Online Radio Guide]
* [http://www.aolradioblog.com AOL Radio Blog]

{{CBS Radio}}
{{AOL Inc.}}
{{CBS}}

==References==
{{Reflist}}

{{coord missing|United States}}

{{DEFAULTSORT:Aol Radio}}
[[Category:Internet radio stations in the United States]]
[[Category:AOL|Radio]]
[[Category:IOS software]]
[[Category:Mac OS X software]]
[[Category:Windows software]]
[[Category:Apple Design Award winners]]</text>
</page>
<page>
<id>474</id>
<title>APC Smart-UPS</title>
<text>{{orphan|date=December 2008}}
The '''Smart-UPS''' is a series of enterprise-level [[uninterruptible power supply|uninterruptible power supplies]] (UPS) made by [[American Power Conversion]] (APC).<ref>[http://www.apc.com/products/family/index.cfm?id=165 APC - Smart-UPS - Product Information<!-- Bot generated title -->]</ref>  The units have a ''Smart Slot'' which accepts an optional interface card providing features ranging from network connectivity to temperature and humidity monitoring.<ref name="SmartSlot">[http://www.apc.com/products/family/index.cfm?id=98 APC - UPS Network Management Cards - Product Information<!-- Bot generated title -->]</ref>  With the exception of the RT series, Smart-UPS units are [[Uninterruptible power supply#Line-interactive|line-interactive]] UPS systems, only running their inverters when grid power is unavailable.

All Smart-UPS units work with APC's PowerChute software which is available for a variety of OS'. Legacy Smart=UPS (Not SMX, SMT, or SURTD series) can also work with Network UPS Tools (NUT), a third party application, under Linux.<ref>[http://eu1.networkupstools.org/compat/stable.html Network UPS Tools: UPS hardware compatibility list (stable)<!-- Bot generated title -->]</ref>  The software is designed to safely and automatically shut down any connected computers before the batteries are depleted.

== Models ==

There are a few different variations in the Smart-UPS lineup.

{|class="wikitable"
!Model!!Characteristics
|-
|[http://www.apc.com/products/family/index.cfm?id=165 Smart-UPS]||The standard model, supporting true sine-wave power.
|-
|[http://www.apc.com/products/family/index.cfm?id=251 Smart-UPS SC]||A simplified version of the Smart-UPS, with [[modified square wave]] output (and thus incompatible with many [[active PFC]] PC power supplies.<ref>[http://www.apc.com/prod_docs/results.cfm?DocType=App%20Note&Query_Type=3&Value=251 APC - Product Information<!-- Bot generated title -->]</ref>)
|-
|[http://www.apc.com/products/family/index.cfm?id=164 Smart-UPS XL]||An "extended run" series, with an [[DC_connector#Anderson Powerpole connectors|Anderson]] DC connector allowing up to 10 external battery packs to be daisy-chained to the main unit.
|-
|[http://www.apc.com/products/family/index.cfm?id=223 Smart-UPS RT]||A [[Uninterruptible power supply#Double-conversion / online|double-conversion / online]] variant providing no switchover delay during a power loss.
|-
|[http://www.apc.com/products/family/index.cfm?id=250 Smart-UPS VT]||Three-phase power for larger installations.
|}

== Smart Slot ==

[[Image:Smartups-2200xlrm3u-inside.jpg|right|thumb|Inside a rack mountable '''Smart-UPS''' 2200XL]]

Most Smart-UPS units have at least one Smart Slot, with the larger (and in many cases older) models supporting two.  Installing an add-on card into the Smart Slot will provide the UPS with additional features, beyond the default serial or USB connectivity.<ref name="SmartSlot"/>  The base AP9617 card provides fairly advanced features, such as e-mail notification and [[Simple Network Management Protocol|SNMP]] monitoring, as well as allowing remote control of the UPS via a web browser or telnet (to remotely switch off the load, for example.)<ref>[http://www.apc.com/resource/include/techspec_index.cfm?base_sku=AP9617 UPS Network Management Card<!-- Bot generated title -->]</ref>  The Smart Slot is powered by the battery even when the UPS is switched off, allowing the UPS to be remotely cold-started even in a power loss situation (providing the network infrastructure is still powered up and functioning.)  The card will also continue to work for a short while after the UPS has switched off due to a low battery condition.{{Fact|date=July 2008}}

=== SmartSlot card models ===

{|class="wikitable"
!Model!!Characteristics
|-
|[http://www.apc.com/resource/include/techspec_index.cfm?base_sku=AP9617 AP9617]||Base model, adding 10/100 [[Ethernet]] connectivity over [[Category 5 cable|Cat5]].
|-
|[http://www.apc.com/resource/include/techspec_index.cfm?base_sku=AP9619 AP9619]||Same as AP9617 but with environmental monitoring and additional input/output contacts and relay controls.
|}

== References ==
<references />

[[Category:Electric power systems components]]
[[Category:Uninterruptible power supply]]</text>
</page>
<page>
<id>481</id>
<title>APLX</title>
<text>'''APLX''' is a modern, second generation, [[cross-platform]] [[programming language dialect|dialect]] of the [[APL programming language]]. APLX is targeted at applications such as financial planning, market research, statistics, management information, and various kinds of scientific and engineering work. APLX is based on [[IBM]]'s [[APL (programming language)#APL2|APL2]], but includes a number of extensions. APLX is created by MicroAPL. Version 3 of APLX was released in April and May of 2005. It is available on [[Microsoft Windows]], [[Linux]], and [[Mac OS]]. Though APLX keeps APL's extended character set, APLX is a bit more verbose, due to the prevalence of system functions with long names and the use of structured-control keywords. The use of explicit loops is a major deviation from earlier versions of APL, as well as other APL derivatives.

==External links==
*[http://www.microapl.co.uk/apl/ MicroAPL website]

[[Category:APL programming language family]]
[[Category:Array programming languages]]

{{compu-lang-stub}}</text>
</page>
<page>
<id>482</id>
<title>APL (codepage)</title>
<text>The '''APL''' [[code page]] is an [[EBCDIC]] based code page used specifically to write programs written in the [[APL (programming language)|APL]] programming language.

==Character set==
APL has always been criticized for its choice of a unique, non-standard character set. The observation that some who learn it usually become ardent adherents shows that there is some weight behind [[Kenneth E. Iverson|Iverson]]'s idea that the notation used does make a difference. In the beginning, there were few terminal devices which could reproduce the APL character set—the most popular ones employing the [[IBM]] [[Selectric]] print mechanism along with a special APL type element. Over time, with the universal use of high-quality graphic display, printing devices and [[Unicode]] support, the APL character font problem has largely been eliminated; however, the problem of entering APL characters requires the use of [[input method editor]]s or special keyboard mappings, which may frustrate beginners accustomed to other languages.

From a user's standpoint, the additional characters can give APL a special elegance and concision not possible in other languages, using symbols visually mnemonic of the functions they represent.  On the other hand, it can lead to a ridiculous degree of complexity and unreadability, like when the symbols are strung together into a single mass without any comments.  It can be unreasonably difficult and time consuming to enter then later edit those APL statements.

All APL symbols are present in [[Unicode]], in the [[Miscellaneous Technical (Unicode)|Miscellaneous Technical]] range,<ref>{{cite web |url=http://unicode.org/charts/PDF/U2300.pdf |format=PDF|title=The Unicode Standard 5.1 Code Charts: Techinical Symbols U+2300-U+23FF |accessdate=October 12, 2008 |work=Unicode Standard 5.1 |publisher=[[Unicode Consortium]] |date= }}</ref> although some APL products may not yet feature unicode, and some APL symbols may be unused or unavailable in a given vendor's implementation.

==Keyboard layout==
Note the mnemonics associating an APL character with a letter: ''question mark'' on ''Q'', ''power'' on ''P'', ''rho'' on ''R'', ''base value'' on ''B'', ''eNcode'' on ''N'', ''modulus'' on ''M'' and so on. This makes it easier for an English-language speaker to type APL on a non-APL keyboard providing one has visual feedback on one's screen. Also, decals have been produced for attachment to standard keyboards, either on the front of the keys or on the top of them.
:[[Image:APL-keybd2.svg|600px]]

A more up to date keyboard diagram, applicable for APL2 and other modern implementations, is available:  [http://www.users.on.net/~farnik/upload/APL2union.gif Union layout for windows].

Additional APL characters were available by [[Overstrike|overstriking]] one character over another.  For example, the ''log'' symbol was formed by overstriking shift-''P'' with shift-''O''.  This complicated correcting mistakes and editing program lines.  This may have ultimately been the reason for early APL programs to have a certain dense style - they were difficult to edit.

Many overstrikes, although appealing, are not actually used.  New overstrikes were introduced by vendors as they produced versions of APL tailored to specific hardware, system features, file system, and so on.  Further, printing terminals and early APL cathode-ray terminals were capable of displaying arbitrary overstrikes, but as personal computers rapidly replaced terminals as a data-entry device, APL character support was now provided as an ''APL Character Generator ROM'' or a soft character set rendered by the display device.  With the advent of Windows, APL characters were defined as just another complete font, thus the distinction between overstruck characters and standard characters having been eliminated.

Later IBM terminals, notably the [[IBM 3270]] display stations, had an alternate keyboard arrangement which is the basis for some of the modern APL keyboard layouts in use today.  Better terminals, namely display devices instead of printers, encouraged the development of better full screen editors, which had a measurable improvement in productivity and program readability.

==See also==
*[[APL syntax and symbols]]

==References==
<references/>

==External links==
*[http://www.ibm.com/software/globalization/cp/cp00293.jsp IBM code page 293] aka the APL code page on [[Mainframe computer|mainframe]]s
*[http://www-03.ibm.com/systems/resources/systems_i_software_globalization_pdf_cp00907z.pdf IBM code page 907] aka the APL ASCII code page

[[Category:APL programming language family]]
[[Category:Character sets]]

{{character encoding}}</text>
</page>
<page>
<id>494</id>
<title>ARACNE</title>
<text>{{Notability|date=December 2008}}
{{Refimprove|date=December 2008}}

'''ARACNE''' (Algorithm for the Reconstruction of Accurate Cellular Networks) is a method for reconstructing biological networks from [[microarray]] data developed at [[Columbia University]].  The method uses [[information theory|information theoretic]] methods to reduce false positives which are predicted through indirect interactions<ref name="Margolin2006">{{cite journal |author= Margolin, A., Nemenman, I., Basso, K., Wiggins, C., Stolovitzky, G., Favera, R. and Califano, A. |title= ARACNE: an Algorithm for the Reconstruction of Gene Regulatory Networks in a Mammalian Cellular Context |journal=BMC bioinformatics |volume=7 |issue=Suppl 1 |pages=S7 |year=2006}}</ref><ref name="aracneweb">{{cite web |url= http://wiki.c2b2.columbia.edu/califanolab/index.php/Software/ARACNE|title=Software/ARACNE - Califano Lab|accessdate=18 August 2010}}</ref>.

== References ==
{{reflist}}

{{comp-sci-stub}}

[[Category:Microarrays]]</text>
</page>
<page>
<id>500</id>
<title>ARIA (cipher)</title>
<text>{{This|the block cipher|Aria (disambiguation)}}
{{Infobox block cipher
| name          = ARIA
| designers     =
| publish date  = 2003
| derived from  = [[Advanced Encryption Standard|AES]]
| derived to    =
| related to    =
| certification = [[South Korea]]n standard
| key size      = 128, 192, or 256 bits
| block size    = 128 bits
| structure     = [[Substitution-permutation network]]
| rounds        = 12, 14, or 16
| cryptanalysis = [[Meet-in-the-middle attack]] on 8 rounds with data complexity 2<sup>56</sup>
}}
In [[cryptography]], '''ARIA''' is a [[block cipher]] designed in 2003 by a large group of [[South Korea]]n researchers. In 2004, the [[Korean Agency for Technology and Standards]] selected it as a standard cryptographic technique.

The algorithm uses a [[substitution-permutation network]] structure based on [[Advanced Encryption Standard|AES]]. The interface is the same as AES: 128-bit [[block size (cryptography)|block size]] with [[key size]] of 128, 192, or 256 bits. The number of rounds is 12, 14, or 16, depending on the key size. ARIA uses two 8&times;8-bit [[substitution box|S-boxes]] and their inverses in alternate rounds; one of these is the [[Rijndael S-box]].

The [[key schedule]] processes the [[key (cryptography)|key]] using a 3-round 256-bit [[Feistel cipher]], with the binary expansion of 1/[[pi|''p'']] as a source of "[[nothing up my sleeve number]]s".

==References==
* {{cite paper
    | author = [[Alex Biryukov|A. Biryukov]], C. De Cannière, J. Lano, [[Bart Preneel|B. Preneel]], S. B. Örs
    | title = Security and Performance Analysis of ARIA
    | version = Version 1.2&mdash;Final Report
    | publisher = [[Katholieke Universiteit Leuven]]
    | date = January 7, 2004
    | url = http://www.cosic.esat.kuleuven.be/publications/article-500.ps
    | format = [[PostScript]]
    | accessdate = March 2, 2007}}
* {{cite paper
    | author = Wenling Wu, Wentao Zhang, and Dengguo Feng
    | title = Impossible Differential Cryptanalysis of ARIA and Camellia
    | date = 2006
    | url = http://eprint.iacr.org/2006/350
    | format = [[PDF]]
    | accessdate = January 19, 2007}}
* {{cite paper
    | author = Xuehai Tang, Bing Sun, Ruilin Li, Chao Li
    | title = A Meet-in-the-Middle Attack on ARIA
    | date = March 30, 2010
    | url = http://eprint.iacr.org/2010/168
    | format = PDF
    | accessdate = April 24, 2010}}

==External links==
* [http://210.104.33.10/ARIA/index-e.html ARIA home]
* [http://cartman-cipher.narod.ru/mirror/aria-pas.zip Lazarus/Delphi port of ARIA]

{{crypto-stub}}
{{Crypto navbox | block}}
[[Category:Block ciphers]]

[[ko:??? (??)]]
[[it:ARIA (cifrario)]]
[[ru:ARIA (????????????)]]</text>
</page>
<page>
<id>503</id>
<title>ARITH-MATIC</title>
<text>:''You may have been looking for [[arithmetic]], a branch of [[mathematics]].''
'''ARITH-MATIC''' is an extension of [[Grace Hopper]]'s  [[A-2 (programming language)|A-2]] [[programming language]], developed around 1955. ARITH-MATIC was originally known as A-3, but was renamed by the marketing department of [[Remington Rand]] [[UNIVAC]].

<!--How was A-2 extended?-->

==References==
{{FOLDOC}}

==See also==
* [[A-0 System]]

==External links==
* [http://cispom.boisestate.edu/cis221emaxson/hophtm.htm Website at Boise]

{{compu-lang-stub}}

[[Category:Numerical programming languages]]</text>
</page>
<page>
<id>505</id>
<title>ARKive</title>
<text>{{Infobox Website
| name           = ARKive - Images of Life on Earth
| logo           = [[Image:ARKive-logo.jpg|260px]]
| screenshot     = [[Image:Arkivescreenshot.jpg|260px]]
| caption        = 
| url            = [http://www.arkive.org www.arkive.org]
| commercial     = 
| type           = [[Encyclopedia]]
| language       = [[English language|English]]
| registration   = 
| owner          = 
| launch date    = 2003-05-01
| current status = 
| author         = [[Wildscreen]], [[Christopher Parsons]] and [[David Attenborough]]
| alexa          = 
}}
'''ARKive''' is a global initiative to locate and gather [[films]], [[photographs]] and [[sound|audio]] [[recordings]] of the world's [[species]] into one centralised [[digital]] [[library]] for the benefit of present and future [[generations]]. As such, it is sometimes described as the new [[Noah’s Ark]], or the Noah’s Ark of the online era.

==History==

[[Image:David Attenborough.jpg|thumb|260px|left|[[David Attenborough]] and the ARKive]]
The project was launched in May [[2003]]{{Citation needed|date=October 2009}}<!-- ARKive already had a publically visible website before 2000, the first HP-sponsored site re-launched at the 2000 Wildscreen Festival and a further site in 2002 --> by its patron, the [[UK]]-based natural history presenter, [[Sir David Attenborough]],<ref>{{cite news|url=http://www.guardian.co.uk/conservation/story/0,,969572,00.html|publisher=''The Guardian''|title=Arkive sets sail on the web|accessdate=2007-07-02 | location=London | first=Ashley | last=Davies | date=2003-05-20}}</ref> a long-standing colleague and friend of its chief instigator, the late [[Christopher Parsons]], a former Head of the [[BBC Natural History Unit]].

Parsons identified a need to provide a centralised safe haven for wildlife films and photographs after discovering that many such records are held in scattered, non-indexed, collections, often with little or no public access, and sometimes in conditions that could lead to loss or damage.<ref>{{cite news|url=http://www.guardian.co.uk/obituaries/story/0,,839405,00.html|publisher=''The Guardian''|title=Christopher Parsons|accessdate=2007-07-02 | location=London | date=2002-11-14 | first=Barry | last=Paine}}</ref>
He believed the records could be a powerful force in building environmental awareness by bringing [[scientific]] names to life. He also saw their [[film preservation|preservation]] as an important educational resource and conservation tool, not least because extinction rates and habitat destruction could mean that images and sounds might be the only legacy of some species’ existence.

His vision of a permanent, accessible, refuge for audio-visual wildlife material won almost immediate support from many of the world’s major broadcasters; leading film and photographic libraries, international conservation organisations and academic institutes. 

Work on building ARKive began as part of the UK’s [[Millennium]] [[2000]] celebrations, using advanced computerised storage and retrieval technology devised for the project by [[Hewlett Packard]] Laboratories Europe. By the launch date, the project team had researched, catalogued, copied, described and authenticated image, sound and fact files of 1,000 [[animal]]s, [[plant]]s and [[fungi]], many of them critically [[endangered]]. More multi-media profiles are added every month, starting with British [[flora]] and [[fauna]] and with species included on the [[Red List]] – that is, species that are believed to be closest to [[extinction]], according to research by the [[World Conservation Union]]. By January [[2006]], the database had grown to 2,000 species, 15,000 still images and more than 50 hours of video.<ref>{{cite web|url=http://www.arkive.org/pressReleases/suntimes010106.html|publisher=''ARKive''|title=ARKive named as Sunday Times website of the year|accessdate=2007-07-02 |archiveurl = http://web.archive.org/web/20070609145850/http://www.arkive.org/pressReleases/suntimes010106.html <!-- Bot retrieved archive --> |archivedate = 2007-06-09}}</ref>.   

The ARKive project is an initiative of [[Wildscreen]], a UK-registered educational charity, based in [[Bristol]], and working globally to increase the public’s understanding and appreciation of biodiversity, through the power of wildlife imagery.

==See also==

*[[Catalogue of Life]]
*[[Encyclopedia of Life]]
*[[List of online encyclopedias]]
*[[Macroscopic Observatory]]
*[[Nature documentary]]

==References==

<references/>

==External links==
* [http://www.arkive.org Official ARKive site.]
* [http://www.wildscreen.org Official Wildscreen site.]

{{DEFAULTSORT:Arkive}}
[[Category:Scientific classification]]
[[Category:Virtual museums]]
[[Category:Online encyclopedias]]
[[Category:Biological databases]]

[[af:ARKive]]
[[ca:ARKive]]
[[hu:ARKive – Veszélyeztetett fajok]]</text>
</page>
<page>
<id>506</id>
<title>ARLOGO</title>
<text>{{Multiple issues|notability = December 2010|unreferenced = December 2010}}

'''ARLOGO''' is the [[Arabic language]] [[Logo programming language|Logo]] Project. It is based on UCBLogo and is an attempt to create the first [[open-source]] Arabic programming language.
At the moment, UCBLogo Arabic Beta 1 is available only for Microsoft Windows.

==External links==
{{Portal|Free software}}
*[http://www.sourceforge.net/projects/arlogo Project web page on Sourceforge]

{{DEFAULTSORT:Arlogo}}
[[Category:Free compilers and interpreters]]
[[Category:Non-English-based programming languages]]
[[Category:Logo programming language family]]


{{programming-software-stub}}</text>
</page>
<page>
<id>507</id>
<title>ARM11</title>
<text>{{Refimprove|date=February 2010}}
'''ARM11''' is an [[ARM architecture]] [[32-bit]] [[Reduced instruction set computer|RISC]] [[microprocessor]] family which introduced the ARMv6 architectural additions. These include  [[SIMD]] media instructions, [[multiprocessor]] support and a new cache architecture.  The implementation included significantly improved instruction processing pipeline, compared to previous [[ARM9]] or [[ARM10]] families, and is used in [[smartphones]] from [[Apple Inc.|Apple]], [[Nokia]], and others.  The initial ARM11 core (ARM1136) was released to licensees in late 2002.

The ARM11 family are currently the only ARMv6-architecture cores.  There are however Thumb2-only ARMv6-M cores (Cortex-M0 and Cortex-M1), addressing [[microcontroller]] applications; ARM11 cores target more demanding applications.

==Differences from ARM9==
In terms of instruction set, the ARM11 builds on the preceding [[ARM9]] generation.  It incorporates all ARM926EJ-S features and adds the ARMv6 instructions for media support (SIMD) and accelerating IRQ response.

Microarchitecture improvements in ARM11 cores<ref>"The ARM11 Microarchitecture", ARM Ltd, 2002</ref> include:

* SIMD instructions which can double [[MPEG-4]] and audio [[digital signal processing]] [[algorithm]] speed
* Cache is physically addressed, solving many cache aliasing problems and reducing context switch overhead
* Unaligned and mixed-endian data access is supported
* Reduced heat production and lower overheating risk
* Redesigned pipeline, supporting faster clock speeds (target up to 1 GHz)
** Longer: 8 stages vs 5
** Out-of-order completion
** Dynamic branch prediction/folding (like [[XScale]])
** Cache misses don't block execution of non-dependent instructions
** Load/Store parallelism
** [[arithmetic and logic unit|ALU]] parallelism
* [[64-bit]] data paths

[[JTAG]] debug support (for halting, stepping, breakpoints, and watchpoints) was simplified.  The EmbeddedICE module was replaced with an interface which became part of the ARMv7 architecture.  The hardware tracing modules (ETM and ETB) are compatible, but updated, versions of those used in the ARM9.  In particular, trace semantics were updated to address parallel instruction execution and data transfers.

Also of note was ARM's effort to promote good [[Verilog]] coding styles and techniques to ensure semantically rigorous designs, preserving identical semantics throughout the chip design flow, which included extensive use of [[formal verification]] techniques.  This is because ARM cores are integrated into many different designs, using a variety of [[logic synthesis]] tools and chip manufacturing processes, so the impact of its RTL quality is magnified many times<ref name="X">''The Dangers of Living with an X (bugs hidden in your Verilog)'', Version 1.1 (14th October, 2003).</ref>.  Without such attention, integrating an ARM11 with third party designs could risk exposing hard-to-find latent bugs.  (The ARM11 generation focussed more heavily on synthesis than previous generations, making such concerns be more of an issue.)

==ARM11 cores==
There are currently four ARM11 cores:

* ARM1136<ref name="arm1136">[http://infocenter.arm.com/help/topic/com.arm.doc.ddi0211k/DDI0211K_arm1136_r1p5_trm.pdf ARM1136JF-S and ARM1136J-S Technical Reference Manual] Revision: r1p5; ARM DDI 0211K</ref> (probably the most widely used core)
* ARM1156 introducing Thumb2 instructions
* ARM1176 introducing security extensions
* ARM11MPcore introducing multicore support

==ARM11-based devices==
{{expand list|date=December 2010}}
* [[Texas Instruments]] [[OMAP|OMAP2]] series, with a [[Texas Instruments TMS320|TMS320]] C55x or C64x [[digital signal processor|DSP]] as a second core
* [[Freescale]] i.MX3x series, such as [[i.MX31]], [[i.MX35]]
* [[Nvidia Tegra]]
* [[Samsung]] S3C64x0
* [[Qualcomm]] MSM720x
* [[Qualcomm]] MSM7627

==ARM11-based products==
{{expand list|date=December 2010}}<!-- how far do we really want to expand this list?? -->
[[GeeksPhone]]
* [http://www.geeksphone.com/en/moviles/especificaciones.php GeeksPhone ONE]

[[HTC]]
* [[HTC Aria]]
* [[HTC Dream]]
* [[HTC Wildfire]]
* [[HTC Hero]]
* [[HTC Magic]]
* [[HTC Legend]]
* [[HTC Passion]] (Nexus One)
* [[HTC Bravo]] (Desire)
* [[HTC Touch Diamond]]
* [[HTC Touch Pro]]
* [[HTC Touch Diamond 2]] (HTC Topaz)
* [[HTC Touch Pro 2]] (HTC Rhodium)
* [[HTC TyTN II]]
* [[myTouch 3G Slide]] (HTC Espresso)

[[Apple Inc.]]
* [[iPhone]] (2G and 3G)
* [[iPod Touch]] (1G & 2G)

[[Amazon.com|Amazon]]
* All models of [[Amazon Kindle]]

[[Motorola]]
* [[Motorola RIZR Z8]]
* [[Motorola Q|Motorola Q9 Series]]

[[Nintendo]]
* [[Nintendo 3DS]]

[[Nokia]]
* [[Nokia 5130 XpressMusic]]
* [[Nokia 5230]]
* [[Nokia 5320 XpressMusic]]
* [[Nokia 5700 XpressMusic]]
* [[Nokia 5800 XpressMusic]]
* [[Nokia 5530 XpressMusic]]
* [[Nokia X6]]
* [[Nokia 6120 Classic]]
* [[Nokia 6210 Navigator]]
* [[Nokia 6220 Classic]]
* [[Nokia 6290]]
* [[Nokia 6700 Classic]]
* [[Nokia 6710 Navigator]]
* [[Nokia 6720 Classic]]
* [[Nokia C5-00]]
* [[Nokia C5-03]]
* [[Nokia C6-00]]
* [[Nokia C6-01]]
* [[Nokia C7]]
* [[Nokia E5]]
* [[Nokia E51]]
* [[Nokia E52]]
* [[Nokia E55]]
* [[Nokia E63]]
* [[Nokia E71]]
* [[Nokia E72]]
* [[Nokia E73 Mode]]
* [[Nokia E75]]
* [[Nokia E90 Communicator]]
* [[Nokia N79]]
* [[Nokia N81]]
* [[Nokia N82]]
* [[Nokia N86 8MP]]
* [[Nokia N93]]
* [[Nokia N95]]
* [[Nokia N97]]
* [[Nokia N97 mini]]
* [[Nokia N8]]
* [[Nokia N800]] [[Internet Tablet]]

[[Palm, Inc.|Palm]]
* [[Palm Pixi]]

[[Samsung]]
* [[Samsung SGH-i627]]
* [[Samsung I5700]] (Samsung Galaxy Spica/Portal/Lite)
* [[Samsung i7500]] (Samsung i7500 Galaxy)
* [[Samsung SGH-T939]](Samsung Behold II)
* [[Samsung Omnia II]]
* [[Samsung SPH-M900]] (Samsung Moment)
* [[Samsung M910 Intercept|Samsung SPH-M910]] (Samsung Intercept)

[[Sony Ericsson]]
* [[Sony Ericsson Xperia X1]]
* [[Sony Ericsson Elm]]
* [[Sony Ericsson W995]]

[[Microsoft]]
* [[Zune HD]]
* [[Kin One]]

[[Smart Devices]]
* [[SmartQ 5]]
* [[Pandigital Novel (White Version)]]

[[Zeebo]]
* [[Zeebo]] (Game Console)

* Some [[digital picture frame]]s/digital media frames also use the ARM11.

==See also==
* [[ARM9]]
* [[ARM7]]
* [[ARMulator]]

==References==
<references/>

{{DEFAULTSORT:Arm11}}
[[Category:ARM architecture]]

[[ru:ARM11]]</text>
</page>
<page>
<id>509</id>
<title>ARM9</title>
<text>'''ARM9''' is an [[ARM architecture]] [[32-bit]] [[Reduced instruction set computer|RISC]] [[Central processing unit|CPU]] family.  With this design generation, ARM moved from a [[von Neumann architecture]] (Princeton architecture) to a [[Harvard architecture]] with separate instruction and [[bus (computing)|data buses]] (and caches), significantly increasing its potential speed.  Most silicon chips integrating these cores will package them as [[modified Harvard architecture]] chips, combining the two address busses on the other side of separated [[CPU caches]] and tightly coupled memories.

There are two subfamilies, implementing different ARM architecture versions.

==Differences from ARM7 cores==
Key improvements over [[ARM7]] cores, enabled by spending more transistors, include<ref>"Performance of the ARM9TDMI and ARM9E-S cores compared to the ARM7TDMI core", Issue 1.0, dated 9 February 2000, ARM Ltd.</ref>:
* Decreased heat production and lower overheating risk.
* Clock frequency improvements.  Shifting from a three stage pipeline to a five stage one lets the clock speed be approximately doubled, on the same silicon fabrication process.
* Cycle count improvements.  Many unmodified ARM7 binaries were measured as taking about 30% fewer cycles to execute on ARM9 cores.  Key improvements include
** Faster loads and stores; many instructions now cost just one cycle.  This is helped by both the modified Harvard architecture (reducing bus and cache contention) and the new pipeline stages.
** Exposing pipeline interlocks, enabling compiler optimizations to reduce blockage between stages.
Additionally, some ARM9 cores incorporate "Enhanced DSP" instructions, such as a multiply-accumulate, to support more efficient implementations of [[digital signal processing]] algorithms.

Switching to a Harvard architecture entailed a non-unified cache, so that instruction fetches do not evict data (and vice versa).  ARM9 cores have separate data and address bus signals, which chip designers use in various ways.  In most cases they connect at least part of the address space in von Neumann style, used for both instructions and data, usually to an [[Advanced Microcontroller Bus Architecture#Advanced_High-performance_Bus_.28AHB.29|AHB]] interconnect connecting to a [[DRAM]] interface and an [[External Bus Interface]] usable with [[NOR flash]] memory.  Such hybrids are no longer pure Harvard architecture processors.

==ARM9TDMI-based cores==
ARM9TDMI is a successor to the popular ARM7TDMI core, and is also based on the ARMv4T architecture.  Cores based on it support both 32-bit ARM and 16-bit Thumb instruction sets include:
* ARM920T with 16KB each of I/D cache and an [[Memory management unit|MMU]]
* ARM922T with 8KB each of I/D cache and an MMU
* ARM940T with cache and a Memory Protection Unit (MPU)

==ARM9E-based cores==
ARM9E, and its ARM9EJ sibling, implement longer pipelines and the ARMv5TE architecture, which includes some DSP-ish instruction set extensions.  They support 32-bit, 16-bit, and sometimes 8-bit instruction sets.
* ARM926EJ-S (includes ARM [[Jazelle]] technology which enables the direct execution of 8-bit [[Java bytecode]] in hardware), and an MMU
* ARM946
* ARM966
* ARM968

==Applications==
* [[Buffalo network-attached storage series]] Linkstation Pro and KuroBox Pro
* [[Canon EOS 5D Mark II]] [[digital SLR]] camera<ref>[http://magiclantern.wikia.com/wiki/Datasheets]</ref>
* [[Chumby]]
* [[Conexant]] [[802.11]] products
* [[D-Link]] broadband routers, network storage (DNS-* models)
* [[Fiat]] [[Blue&Me]]
* [[Freecom]] Musicpal internet radio (ARM926EJ)
* [[GP2X Wiz]]
* [[Hanlin eReader]]
* Sun Service Processor  running the ILOM Java stack
* [[Hewlett Packard]] Hp 50g @ 90 Mhz
* [[Lacie]] EtherDisk
* [[Livescribe]] Pulse and Echo Smartpens
* [[Logitech]] [[Squeezebox (network music player)]] Radio (ARM926EJ)
* [[Nintendo DS]]
* [[Nintendo DSi]]
* [[Nintendo]] [[Wii]]'s [[ATI Technologies Inc.|ATI]] [[Hollywood (graphics chip)|Hollywood]] graphic chip (security coprocessor)
* [[OYO]] eBook-reader from [[Medion]]
* [[PlayStation Portable]]'s WLAN chip. [http://www.arm.com/markets/home_solutions/armpp/8732.html]
* [[SATEL]] [[SATELLAR Digital System]] radio modem [http://www.satel.com]
* [[Seagate FreeAgent]] [http://www.seagate.com/www/en-us/products/network_storage/freeagent_dockstar/ DockStar] STDSD10G-RK (ARM926EJ-S rev 1 (v5l))
* [[Synology]]'s Disk Station (models DS-x07+), Cube Station CS-407, and Rack Station RS-407 [http://oinkzwurgl.org/diskstation_hardware]
* [[Texas Instruments]] [[TI-Nspire]] graphing calculator @ 90/150 MHz
* [[VTech]] [[V.Flash]] educational consoles<ref>[http://www.arm.com/markets/emerging_applications/armpp/15800.html VTech V.Flash product page from ARM]</ref>
* [[Western Digital My Book]] series NAS devices
* many mobile phones from
** [[HTC]] (e.g. [[HTC Wizard]])
** [[LG]] ([[LG Cookie (KP500)]] at 175 MHz)
** [[Nokia]] (like [[Nokia 5220]] [[XpressMusic]], [[N-Gage|Nokia N-Gage]] and almost all N-Series Smartphones at 100-330 MHz)
** [[Philips]]
** [[Siemens]]/[[BenQ]] (x65 series and newer)
** [[Sony Ericsson]] (K, M and W series, usually at 206 MHz)

==See also==
* [[ARM7]]
* [[ARM11]]

==References==
<references/>

{{DEFAULTSORT:Arm9}}
[[Category:ARM architecture]]

[[fr:ARM926EJ-S]]
[[pl:ARM9E]]</text>
</page>
<page>
<id>527</id>
<title>ART image file format</title>
<text>{{ Infobox file format
| name =           ART
| extension =      .art
| mime = 
| owner = [[AOL|America Online]] (AOL)
| creatorcode = 
| genre = [[Image file formats]]
| container for = 
| extended from = 
}}

'''ART''' is a [[Proprietary software|proprietary]] [[image file format]] used mostly by the [[AOL|America Online]] (AOL) [[client (computing)|client]] [[software]]. The ART format ([[file extension]] ".art") holds a single still [[image]] that has been highly [[Image compression|compressed]]. Originally, the compression was developed by the [[Johnson-Grace|Johnson-Grace Company]], which was then acquired by the AOL [[Online service provider|service]].  When an image is converted to the ART format, the image is analyzed and the software decides what compression technique would be best.<ref>[http://www.webreference.com/dev/graphics/compress.html "Optimizing Web Graphics: Compression"]</ref> [[Internet Explorer]] used to be able to display ART images but now is no longer capable.

The AOL service can automatically convert images [[downloading|downloaded]] from the [[Internet]] to the compressed ART format. This conversion, which can be turned off, reduces download time for the image file. Image display problems with the AOL [[web browser]] are addressed at [http://web.archive.org/web/20071026143856/http://webmaster.info.aol.com/faq.html#graphics America Online webmaster FAQ entry]. An art file opened with AOL picture viewer can be saved as another file type. 

ART files can be batch converted to [[BMP file format|BMP]], [[JPG]], and other file formats with rare graphics programs, such as Graphic Workshop Professional [http://www.mindworkshop.com/alchemy/gwspro.html] with an .art plug-in. Old versions of Internet Explorer can open and convert ART files to [[BMP file format|BMP]] files, through the File/[[Save As]] command. [http://web.archive.org/web/20071205111031/http://members.aol.com/oldnelly77/page9.htm][http://web.archive.org/web/20071217184052/http://members.aol.com/oldnelly77/page5.htm]

== Notes ==
<references/>

== External links ==
* [http://web.archive.org/web/*/http://www.jgc.com Johnson-Grace Company official Web site] via the [[Internet Archive]]
*[http://was.usc.edu/isd/publications/archives/networker/96-97/Sep_Oct_96/profile-reed.html "Profile - Irving Reed"]{{dead link|date=January 2010|url=http://web.archive.org/web/20050324003048/www.usc.edu/isd/pubarchives/networker/96-97/Sep_Oct_96/profile-reed.html}}: An article with information on the history of Johnson-Grace and the ART image compression.
*[http://www.webreference.com/dev/graphics/compress.html "Optimizing Web Graphics: Compression"]: A webreference.com article with technical details on the ART image format.
*[http://web.archive.org/web/20071026143856/http://webmaster.info.aol.com/faq.html#graphics Graphics Questions]: An America Online webmaster FAQ entry on graphics display problems.  Archived from the [http://webmaster.info.aol.com/faq.html#graphics original] on October 26, 2007.
*{{US patent|5682152}} Data compression using adaptive bit allocation and hybrid lossless entropy coding
*{{US patent|5822456}} Optimal spline interpolation for image compression
*{{US patent|5892847}} Method and apparatus for compressing images
{{Graphics file formats}}
[[Category:Graphics file formats]]

[[de:ART (Dateiformat)]]

{{software-type-stub}}</text>
</page>
<page>
<id>530</id>
<title>ARX (operating system)</title>
<text>{{Infobox OS
| name                   = ARX
| logo                   = 
| screenshot             = 
| caption                = 
| developer              = [[Acorn Computers Ltd]]
| source_model           = 
| kernel_type            = [[Microkernel]]
| supported_platforms    = [[ARM architecture|ARM]]
| ui                     = [[Macintosh]]-like<ref name=AH>{{Cite web
| title = Acorn History (untitled)
| accessdate = 2010-12-26
| url = http://www.stairwaytohell.com/articles/AU-AcornHistory.html
}}</ref> Window System and special keyboard keys<ref name=CAAA500>{{Cite web
| title = Chris's Acorns: Acorn A500 (prototype)
| accessdate = 2010-12-26
| url = http://acorn.chriswhy.co.uk/Computers/A500.html
}}</ref>
| family                 = [[Mach-like]]
| released               = 
| latest_release_version = 
| latest_release_date    = 
| latest_test_version    = 
| latest_test_date       = 
| marketing_target       = Business Computing Workstation
| programmed_in          = [[Modula-2+]]
| prog_language          = 
| language               = 
| updatemodel            = 
| package_manager        = 
| working_state          = Historic
| license                = 
| website                = 
}}
'''ARX''' was a [[Mach-like]] [[operating system]] written in [[Modula-2+]] developed by [[Acorn Computers Ltd]] in the [[United Kingdom|UK]] and the Acorn Research Centre (ARC) and Software Technololgy Laboratory and later Olivetti Research Center (ORC, when Olivetti bought out Acorn) at [[Palo Alto]] for their new [[ARM architecture|ARM]] [[RISC]] [[central processing unit|processors]] based [[Acorn Archimedes|Archimedes]] computers range. According to the project Application Manager <ref name=AppManagRCAc>[http://www.realworldtech.com/beta/forums/index.cfm?action=detail&id=103093&threadid=102990&roomid=2 TOP3 smart moves]  Richard Cownie. Real World Technologies (September 2009)</ref> during the project, Acorn was developing for it, Compiler for Acorn Modula-2 Extended Language (CAMEL in [[Modula-2+]] <ref name=DECSrcRr003>[ftp://gatekeeper.dec.com/pub/DEC/SRC/research-reports/abstracts/src-rr-003.html On Extending Modula-2 for Building Large, Integrated Systems]  Paul Rovner, Roy Levin, John Wick. Digital SRC Research Report 003 (January 1985)</ref>) bootstrapping from an Acorn Extended Modula-2 (AEM2) compiler, though never released externally, it was ported to use it in [[Sun Microsystems|SUN]] Unix machines<ref name=HMCDCR>{{Cite web
| title = David  Chase Resume (untitled)
| accessdate = 2010-12-27
| url = http://homepage.mac.com/dr2chase/resume.html
}}</ref>, in an effort to port Sun's workstations Sun [[NeWS]] to the Archimedes, and when Olivetti bought out Acorn, developed a compiler based on CAMEL for the [[Modula-3]] programming Language <ref>{{Cite journal
| doi = 10.1145/99278.99285
| volume = 15
| issue = 6
| pages = 66–76
| last = Jordan
| first = Mick
| title = An extensible programming environment for Modula-3
| journal = SIGSOFT Softw. Eng. Notes
| accessdate = 2009-09-08
| year = 1990
| url = http://portal.acm.org/citation.cfm?id=99285
}}</ref>.

ARX was a pre-emptive [[computer multitasking|multitasking]], [[Thread (computer science)|multithreading]], multi-user operating system. Much of the OS ran in [[user mode]] and as a result suffered performance problems due to switches into [[kernel mode]] to perform [[mutex]]es, which led to the introduction of the SWP instruction to the instruction set of the ARM3 version of the ARM processor. It had support of optical ([[Write Once Read Many|WORM)]] disks file system <ref name=AppManagRCAc /> and featured a window system, a window toolkit (and a direct manipulation [[User Interface]] editor<ref name=BTLTSARC>{{Cite web
| title = Brian T. Lewis - Resume
| accessdate = 2010-12-26
| url = http://pages.sbcglobal.net/btlewis/resume-formatted.html
}}</ref>) and an InterScript-based text editor. The OS had to be fitted in a 512KB [[ROM image]] <ref name=FAMLA500>{{Cite web
| title = Full Acorn Machine List
| accessdate = 2010-12-27
| url = http://www.khantazi.org/Archives/MachineLst.html#A500
}}</ref>. This suggests that ARX had a [[microkernel]]-type design.

It was not finished in time to be fitted to the Acorn Archimedes range of computers, which shipped in 1987 with the [[Arthur (operating system)|Arthur]] operating system, derived from the earlier [[Acorn MOS|MOS]] operating system from Acorn's earlier [[8-bit]] [[BBC Micro]] range. Arthur was later superseded by [[RISC OS]].

The Acorn Research Centre was bought out by [[Olivetti]].

See also: [[RISC iX]]

==References==

<references/>

==External links==
* [http://lists.cloud9.co.uk/pipermail/bbc-micro/2010-January/007795.html ARX features]
* [http://www.chiark.greenend.org.uk/~theom/riscos/docs/Modula2ARX.txt A Usenet post to comp.sys.acorn by Bruce Cockburn detailing the relationship between ARX and Modula-2]
* [http://neil.franklin.ch/Usenet/alt.folklore.computers/20010824_Not_A_RISC_By_Thursday A collection of Usenet posts detailing why ARX was abandoned for RISC OS]
* [http://www.chiark.greenend.org.uk/~theom/riscos/docs/ultimate/a252swp.txt History of the addition of the SWP instruction to the ARM3 instruction set]

{{Acorn computers}}
<!-- The below are old section bar and below it, the one should be --> 
<!-- {{Unix-like}} -->
{{Mach-like}}

[[Category:Acorn operating systems]]
[[Category:Discontinued operating systems]]

{{operating-system-stub}}

<!-- The below are interlanguage links. -->
[[es:ARX]]
[[hu:ARX]]
[[pt:ARX]]</text>
</page>
<page>
<id>532</id>
<title>ARts</title>
<text>{{Refimprove|date=July 2008}}
{{lowercase|title=aRts}}
{{Infobox software
| name                   = aRts
| logo                   = [[Image:arts-icon.png|48px]]
| screenshot             =
| caption                =
| developer              = Stefan Westerfeld
| latest_release_version = 1.5.9
| latest_release_date    = {{release date and age|2008|02|19}}
| status                 = inactive
| operating_system       = [[Unix-like]]
| genre                  = [[Soundserver|Sound Server]]
| license                = [[GNU General Public License]]
| website                = [http://www.arts-project.org/ aRts] / [http://kde.org/ KDE]
}}
'''aRts''', which stands for '''a'''nalog '''R'''eal '''t'''ime '''s'''ynthesizer, is an audio framework that is no longer under development. It is most famous for previously being used in [[KDE]] (series [[KDE 2|2]] and [[KDE 3|3]]) to simulate an [[analog synthesizer]].

A key component of aRts is the [[sound server]] which mixes several [[streaming media|sound stream]]s in [[Real-time computing|realtime]]. The [[sound server]], called '''artsd''' (d for [[daemon (computer software)|daemon]]), is also utilized as the standard sound server for KDE2–3. However, the sound server is not dependent on KDE and can be used in other projects. It is a direct competitor to [[JACK Audio Connection Kit]], another real-time sound server, and an indirect competitor to the [[Enlightened Sound Daemon]] (ESD). It is now common to use [[Advanced Linux Sound Architecture|ALSA]]'s software mixing instead of artsd.

The '''aRts''' [[Platform (computing)|platform]] also includes aRts Builder — an [[application software|application]] for building custom layouts and configurations for audio mixers, sequencers, synthesizers and other audio [[schema]]{{dn}} via a user-friendly [[graphical user interface]]. aRts is [[free software]], distributed under the terms of the [[GNU General Public License]].

== End of project ==
On December 2, 2004 aRts' creator and primary developer Stefan Westerfeld announced he was leaving the project due to a variety of fundamental development and technical issues with aRts.

In KDE 4 developers chose to replace aRts with a new multimedia API known as [[Phonon (KDE)|Phonon]]<ref>[http://dot.kde.org/2006/04/27/phonon-multimedia-kde-4 “Phonon: Multimedia in KDE 4”], ''dot.kde.org'', 27 April 2006.</ref>. Phonon will provide a common interface on top of other systems, such as [[Xine]], to avoid being dependent on a single multimedia framework.

== See also ==
{{Portal|Free software}}
* [[Enlightened Sound Daemon]] (ESD) – used by [[GNOME]]
* [[PulseAudio]] - Advanced Sound Server intended to be a replacement for the ESD

==References==
{{Reflist}}

==External links==
*[http://www.arts-project.org/ The aRts project website]
*{{wayback|http://www.arts-project.org/|The aRts project website}}

{{KDE}}

{{DEFAULTSORT:Arts}}
[[Category:KDE Platform]]
[[Category:Free audio software]]
[[Category:Audio libraries]]
[[Category:Software that uses Qt]]


{{KDE-stub}}

[[ca:ARts]]
[[cs:ARts]]
[[de:ARts]]
[[es:ARts]]
[[fr:ARts]]
[[it:ARts]]
[[ja:ARts]]
[[pt:ARts]]
[[ru:ARts]]
[[tr:ARts]]</text>
</page>
<page>
<id>537</id>
<title>AS2</title>
<text>{{for|ActionScript version 2 (programming language used with [[Adobe Flash]])|ActionScript}}


'''AS2''' (Applicability Statement 2) is a [[specification]] about how to transport data
securely and reliably over the [[Internet]]. Security is achieved by using [[digital certificate]]s and [[encryption]].

== AS2 Technical Overview ==

The AS2 protocol is based on [[HTTP]] and [[S/MIME]]. It was the second AS protocol developed and uses the same signing, encryption and [[Return_receipt#Message_Disposition_Notifications|MDN]] (as defined by [http://www.ietf.org/rfc/rfc3798.txt RFC3798]) conventions used in the original [[AS1_(networking)|AS1]] protocol. In other words:
* Files are encoded as "attachments" in a standardized [[S/MIME]] message (an AS2 message).
* AS2 messages are always sent using the [[HTTP]] or [[HTTPS]] protocol ([[Secure Sockets Layer]] — also known as SSL — is implied by HTTPS) and usually use the "POST" method (use of "GET" is rare).
* Messages can be signed, but do not have to be.
* Messages can be encrypted, but do not have to be.
* Messages may request a Message Disposition Notification [MDN] back if all went well, but do not have to request such a message.
* If the original AS2 message requested an MDN:
** Upon the receipt of the message and its successful decryption or signature validation (as necessary) a "success" MDN will be sent back to the original sender. This MDN is typically signed but never encrypted (unless temporarily encrypted in transit via HTTPS). 
***Upon the receipt and successful verification of the signature on the MDN, the original sender will "know" that the recipient got their message (this provides the "Non-repudiation" element of AS2)
** If there are any problems receiving or interpreting the original AS2 message, a "failed" MDN may be sent back. However, part of the AS2 protocol states that the client must treat a lack of an MDN as a failure as well, so some AS2 receivers will simply not return an MDN in this case. 

Like any other AS file transfer, AS2 file transfers typically require both sides of the exchange to trade SSL certificates and specific "trading partner" names before any transfers can take place. AS2 trading partner names can usually be any valid phrase.

=== MDN Options ===

Unlike AS1 or [[AS3 (networking)|AS3]] file transfers, AS2 file transfers offer several "MDN return" options instead of the traditional options of "yes" or "no". Specifically, the choices are:

====AS2 w/ "Sync" MDNs====
''Return Synchronous MDN via HTTP(S) ("AS2 Sync")'' - This popular option allows AS2 MDNs to be returned to AS2 message sender clients over the same HTTP connection they used to send the original message. This "MDN while you wait" capability makes "AS2 Sync" transfers the fastest of any type of AS file transfer, but it also keeps this flavor of MDN request from being used with large files (which may [[time out (telecommunication)|time out]] in low-[[Bandwidth (computing)|bandwidth]] situations). 

====AS2 w/ "ASync" MDNs====
''Return Asynchronous MDN via HTTP(S) (a.k.a. "AS2 Async")'' - This popular option allows AS2 MDNs to be returned to the AS2 message sender's server later over a different HTTP connection. This flavor of MDN request is usually used if large files are involved. 

====AS2 w/ "Email" MDNs====
''Return (Asynchronous) MDN via Email'' - This rarely-used option allows AS2 MDNs to be returned to AS2 message senders via [[email]] rather than HTTP. Otherwise, it is similar to "AS2 Async (HTTP)".

====AS2 w/ No MDNs====
''Do not return MDN'' - This option works like it does in any other AS protocol: the receiver of an AS2 message with this option set simply does not try to return an MDN to the AS2 message sender.
====AS2 FileName Preserve ====

AS2 filename preservation feature will be used to communicate the filename to the trading partner. The banking industry relies on filenames being communicated between trading partners. AS2 vendors are currently certifying that implementation of filename communication conforms to the standard and is interoperable. 
There are two profiles for filename preservation being optionally tested under AS2 testing: 
*Filename preservation without MDN responses 
*Filename preservation with an associated MDN response certification

==External links==
* [http://www.ietf.org/rfc/rfc4130.txt AS2 Specification, RFC 4130] AS2 specification as listed in [[request for comments|RFC]] #4130
* [http://www.networkworld.com/news/tech/2002/1209techupdate.html AS2 secures documents using the Web]
* [http://www.drummondgroup.com/html-v2/as2-companies.html AS2 Providers - Drummond Certified]
* [http://sourceforge.net/search/?type_of_search=soft&type_of_search=soft&words=AS2 Opensource AS2 Providers]
* [http://www.cleo.com/university/tech-terms/AS2_Cryptographic_Services.php Explanation of AS2 Cryptographic Services]
* [http://code.google.com/p/babelas2/ BabelAS2, a very simple VBScript to send any message using AS2, just to demonstrate that AS2 is NOT difficult/complex ;-)]
* [http://www.as2secure.com/ AS2Secure] Php Lib implementation - Opensource Project available under LGPL v3
* [http://www.as2basics.co.uk AS2 Basics] Resource for learning about AS2 and how to trade electronically with your partners
* [http://www.as2box.net/ AS2Box] Managed AS2 Service

[[Category:Computer networks]]
[[Category:Cryptographic protocols]]
[[Category:Internet standards]]

[[de:AS2]]
[[fr:Applicability Statement 2]]
[[nl:AS2]]
[[pl:AS2]]</text>
</page>
<page>
<id>540</id>
<title>AS9100</title>
<text>'''AS9100''' is a widely adopted and standardized [[quality management system]] for the [[aerospace]] industry.
It was released in October, 1999, by the [[Society of Automotive Engineers]] and the [[European Association of Aerospace Industries]].<ref>[http://www.qualitydigest.com/may02/html/as9100.html Aerospace's AS9100 QMS Standard]</ref><ref>[http://news.thomasnet.com/IMT/archives/2001/10/aerospace_indus.html Aerospace Industry Readies for the AS9100]</ref>

AS9100 replaces the earlier [[AS9000]] and fully incorporates the entirety of the current version of [[ISO 9000]], while adding additional requirements relating to quality and safety.
Major aerospace manufacturers and suppliers worldwide require compliance and/or registration to AS9100 as a condition of doing business with them.<ref>[http://www.afnorindia.com/management-systems-certifications-services/as-9100-aerospace-quality-management-systems/ AS 9100 - Aerospace Quality]</ref><ref>[http://emea.bsi-global.com/Aerospace/Overview/TheHistoryofAS9100.xalter Aerospace AS9100, AS9110, AS9120]</ref>

==History==

Prior to the adoption of an aerospace specific quality standard, various corporations typically used ISO 9000 and their own complementary quality documentation/requirements, such as [[Boeing]]'s D1-9000 or the automotive Q standard.  This created a patchwork of competing requirements that were difficult to enforce and/or comply with.  The major American aerospace manufacturers combined their efforts to create a single, unified quality standard, resulting in AS9000.  Upon the release of AS9000, companies such as Boeing discontinued use of their previous quality supplements in preference to compliance to AS9000.

During the rewrite of ISO 9000 for the  year 2000 release, the AS group worked closely with the ISO organization.  As the year 2000 revision of ISO 9000 incorporated major organizational and philosophical changes, AS9000 underwent a rewrite as well.  It was released as AS9100 to the international aerospace industry at the same time as the new version of ISO 9000. 

AS9100 Revision C was released in January, 2009<ref>[http://www.iaqg.sae.org/servlets/productDetail?PROD_TYP=STD&PROD_CD=AS9100C SAE International Publications]</ref>.

The IAQG Sanctioned Aerospace Auditor Transition Training was released May 1, 2010.<ref>[http://www.plexusintl.com Plexus International]</ref>

==See also==
* [[AS9000]]
* [[ISO 9001]]
* [[IAQG]]

==External links==
* [http://www.iaqg.sae.org/iaqg/publications/standards.htm IAQG Published Standards]
* [http://www.qualitydigest.com/may02/html/as9100.html Quality Digest Article on AS9100]
* [http://ts.nist.gov/Standards/Global/as9100.cfm NIST Overview]

== References ==
{{Reflist}}

{{DEFAULTSORT:As9100}}
[[Category:Aviation standards]]
[[Category:Quality control]]
[[Category:Quality]]
[[Category:1999 works]]</text>
</page>
<page>
<id>549</id>
<title>ASCII art</title>
<text>{{stack|
[[File:aa example1.png|thumb|300px|"Oldskool" or "Amiga" style]]
[[File:aa example2.png|thumb|300px|"Newskool" style]]
[[File:aa example3.png|thumb|300px|"Block" or "High ASCII" style, cf. ANSI art]]
}}

'''ASCII art''' is a [[graphic design]] technique that uses [[computer]]s for presentation and consists of pictures pieced together from the 95 printable (from a total of 128) [[character (computing)|characters]] defined by the [[ASCII]] Standard from 1963 and ASCII compliant character sets with proprietary extended characters (beyond the 128 characters of standard [[7-bit ASCII]]<!-- leave it as 7-bit for accuracy -->). The term is also loosely used to refer to [[#Other text-based art|text based art in general]]. ASCII art can be created with any [[text editor]], and is often used with [[free-form language]]s. Most examples of ASCII [[art]] require a [[typeface#Proportion|fixed-width font]] (non-proportional [[typeface|fonts]], as on a traditional [[typewriter]]) such as [[Courier (typeface)|Courier]] for presentation.
[[Image:Arambilet ASCII CARIBE LAMA.jpg|thumb|[[Arambilet]]:''ASCII ART Conqueror/Saxophonist Created in 1975 with 80 column punched cards, IBM 370-115 CPU, IBM 3203 printer. Published in February 1978 by El Caribe newspaper, section: Arts and Cybernetics". '' ]]
[[Image:Arambilet ASCII Art.jpg|thumb|[[Arambilet]]:''ARTE ASCII/ASCII ART'']]

Among the oldest known examples of ASCII art are the
creations by computer-art pioneer [[Kenneth Knowlton]] from around 1966, who was working for [[Bell Labs]] at the time.<ref name="cgihist">{{Harvnb|Carlson|2003}}</ref> "Studies in Perception I" by Ken Knowlton and Leon Harmon from 1966 shows some examples of their early ASCII art.<ref name=sip1>{{Harvnb|Carlson|2003}} "1966 Studies in Perception I by Ken Knowlton and Leon Harmon (Bell Labs)", [http://design.osu.edu/carlson/history/tree/images/bell.jpg Image of Studies in Perception I]</ref>

One of the main reasons ASCII art was born was because early printers often lacked graphics ability and thus characters were used in place of graphic marks. Also, to mark divisions between different print jobs from different users, bulk printers often used ASCII art to print large banners, making the division easier to spot so that the results could be more easily separated by a computer operator or clerk. ASCII art was also used in early e-mail when images could not be embedded.

==History==
===Typewriter art===
Since 1867 typewriters have been used for creating visual art. The oldest known preserved example of typewriter art is a picture of a butterfly made in 1898 by Flora Stacey.<ref>{{Harvnb|Stark|2001}}</ref><ref>{{Harvnb|Robert|2005}}</ref>

In the 1954 short film ''[[Stamp Day for Superman]]'', typewriter art was a feature of the plot.

===TTY and RTTY===
TTY stands for "TeleTYpe" or "TeleTYpewriter" and is also known as [[Teleprinter]] or Teletype.
RTTY stands for [[Radioteletype]]. According to a chapter in the "RTTY Handbook",<ref name=rttyhb>{{Harvnb|Green|1972}}</ref> text images have been sent via teletypewriter as early as 1923. However, none of the "old" RTTY art has been discovered yet. What is known is that text images appeared frequently on radio teletype in the 1960s and the 1970s.<ref name="joan">{{Harvnb|Stark|2000}}</ref><ref>[http://www.rtty.com/gallery/rttyeasy.htm RTTY Art Made Easy, RTTY Journal November 1970]</ref>

===ASCII art===
[[Image:ASCII full.svg|frame|There are 95 printable ASCII characters, numbered 32 to 126.]]
The widespread usage of ASCII art can be traced to the computer [[bulletin board systems]] of the late 1970s and early 1980s. The limitations of computers of that time period necessitated the use of text characters to represent images. Along with ASCII's use in communication, however, it also began to appear in the underground online art groups of the period. An ASCII comic is a form of webcomic which uses ASCII text to create images. In place of images in a regular comic, ASCII art is used, with the text or dialog usually placed underneath.

During the 1990s, graphical browsing and [[variable-width]] [[Computer font|fonts]] became increasingly popular, leading to a decline in ASCII art.  Despite this, ASCII art continued to survive through online [[MUD]]s, an acronym for "Multi-User Dungeon", (which are textual [[Multiplayer game|multiplayer]] [[Computer role-playing game|roleplaying games]]), [[Internet Relay Chat]], [[E-mail]], [[message boards]] and other forms of online communication which commonly employ the needed [[fixed-width]].

Over the years, [[warez]] groups began to get into the ASCII art scene.<ref>{{Harvnb|Necromancer|1998}}</ref> Warez groups usually release [[.nfo]] files with their software, [[Software cracking|cracks]] or general illegal software reverse-engineering releases.<ref>{{Harvnb|Defacto2|2008}}</ref> The ASCII art will usually include the warez group's name and maybe some ASCII borders on the outsides of the release notes, etc.<ref>[http://www.defacto2.net/documents.cfm NFO Files collection at Defacto2.net, with NFO files that date back to 1989], retrieved February 17, 2008</ref>

==Uses==
[[Image:ASCII Panzer unt Sattelzug.png|right|thumb|A self-propelled gun and truck made using ASCII art]]
ASCII art is used wherever text can be more readily printed or transmitted than graphics, or in some cases, where the transmission of pictures is not possible. This includes typewriters, [[teletype]]s, non-graphic [[computer terminal]]s, [[printer separator]]s, in early [[computer network]]ing (e.g., [[bulletin board system|BBSes]]), [[e-mail]], and [[Usenet]] news messages. ASCII art is also used within the [[source code]] of computer programs for representation of company or product logos, and flow control or other diagrams. In some cases, the entire source code of a program is a piece of ASCII art &mdash; for instance, an entry to one of the earlier [[International Obfuscated C Code Contest]] is a program that adds numbers, but visually looks like a binary adder drawn in logic ports.

Examples of ASCII-style art predating the modern computer era can be found in the June 1939, July 1948 and October 1948 editions of Popular Mechanics.<ref name="popscience">{{Harvnb|Cumbrowski|2007b}}</ref>

"0verkill" is a 2D platform multiplayer shooter game designed entirely in colour ASCII art. [[MPlayer]] and [[VLC media player]] can display videos as ASCII art. ASCII art is used in the making of DOS-based [[ZZT]] games.

Many game walkthrough guides come as part of a basic .txt file; this file often contains the name of the game in ASCII art. Such as below, word art is created using backslashes and other ASCII values in order to create the illusion of 3D.{{Citation needed|date=July 2010}}<!-- need source for illustration -->  Below is the title [[Metal Gear Solid]] in the style of ASCII art.

                         __             ___       ____
         /'\_/`\        /\ \__         /\_ \     /\  _`\
        /\      \     __\ \ ,_\    __  \//\ \    \ \ \L\_\     __     __     _ __
        \ \ \__\ \  /'__`\ \ \/  /'__`\  \ \ \    \ \ \L_L   /'__`\ /'__`\  /\`'__\
         \ \ \_/\ \/\  __/\ \ \_/\ \L\.\_ \_\ \_   \ \ \/, \/\  __//\ \L\.\_\ \ \/
          \ \_\\ \_\ \____\\ \__\ \__/.\_\/\____\   \ \____/\ \____\ \__/.\_\\ \_\
           \/_/ \/_/\/____/ \/__/\/__/\/_/\/____/    \/___/  \/____/\/__/\/_/ \/_/
                               ____            ___            __
                              /\  _`\         /\_ \    __    /\ \
                              \ \,\L\_\    ___\//\ \  /\_\   \_\ \
                               \/_\__ \   / __`\\ \ \ \/\ \  /'_` \
                                 /\ \L\ \/\ \L\ \\_\ \_\ \ \/\ \L\ \
                                 \ `\____\ \____//\____\\ \_\ \___,_\
                                  \/_____/\/___/ \/____/ \/_/\/__,_ /

== Types and styles ==
Different techniques could be used in ASCII art to obtain different artistic effects:

 .--.     /\
 '--'    /__\    (^..^)~

- Line art, for creating shapes

 .g@8g.  db
 'Y8@P' d88b
- Solid art, for creating filled shapes

 :$#$: "4b. ':.
 :$#$:   "4b. ':.

- Shading, using different symbol density and shading for creating gradients or contrasts

   |\_/|        ****************************
  / @ @ \       *  "Purrrfectly pleasant"  *
 ( > º < )      *       Poppy Prinz        *
  `»»x««´       *       (pprinz@...)       *
  /  O  \       ****************************

- combinations used as SIG (signature) at the end of an email

=== Emoticons and verticons ===
{{Main|Emoticon}}
The simplest forms of ASCII art are combinations of two or three characters for expressing emotion in text.  They are commonly referred to as '[[emoticon]]', 'smilie', or '[[smiley]]'.

There is another type of one-line ASCII art that does not require the mental rotation of pictures, which is widely known in Japan as [[Emoticon#East Asian style|kaomoji]] (literally "face characters".) Traditionally, they are referred to as "ASCII face ".

More complex examples use several lines of text to draw large symbols or more complex figures.

====Popular smileys====
{{Main|List of common emoticons}}
The list only shows some popular examples for demonstration purposes. Hundreds of different text smileys were developed over time,<ref name=smileys2>{{Harvnb|textfiles|2008}}</ref> but only a few were generally accepted, used and understood.

{|class="wikitable"
|-
!width=50|Icon
!width=250|Meaning
!width=50|Icon
!width=250|Meaning
|-
|<code><nowiki>:) or :] or (: or [: or =) or =] or (",) or ^^ or C: or :3 or n_n</nowiki></code>
|classic smile
|<code><nowiki>;| or ;) or ;D or ^.~ </nowiki></code>
|winking
|-
|<code><nowiki>:( =( :C</nowiki></code>
|classic sad
|<code><nowiki>:-o</nowiki></code>
|yawn or surprised
|-
|<code><nowiki>:-)</nowiki></code>
|smile
|<code><nowiki>XD or xD</nowiki></code>
|Laughter
|-
|<code><nowiki>>=D</nowiki></code>
|evil laugh
|-
|<code><nowiki>>=)</nowiki></code>
|evil grin
|<code><nowiki>:o or O_o or O.o or O.O or ._.</nowiki></code>
|surprised
|-
|<code><nowiki>:B</nowiki></code>
|buck-tooth
|<code><nowiki>:,( or :*( or :'( or :_( or ='( or =,(</nowiki></code>
|crying smiley
|-
|<code><nowiki>:-#</nowiki></code>
|with braces or sick smiley
|<code><nowiki>T_T or TT_TT or QQ or ;_; or ;-; or ;A; or T.T</nowiki></code>
|crying
|-
|<code><nowiki>:P or :p or xp or xP or XP or c(: :þ</nowiki></code>
|tongue sticking out (silly)
|<code><nowiki>D:< or ]:< or >:[ or ):< or >:(</nowiki></code>
|angry
|-
|<code><nowiki>:/ or :\ or :| or D:</nowiki></code>
|indifferent; worried, amazed
|<code><nowiki>:0</nowiki></code>
|gasp, surprised, astonished
|-
|<code><nowiki>8D or BD or 8) or B-)</nowiki></code>
|smiley with glasses
|<code><nowiki>-_- or -.- or = ^ =</nowiki></code>
|annoyed, really? not surprised, serious.
|-
|<code><nowiki>;) or ;] or (; or [;</nowiki></code>
|winking smile
|<code><nowiki>:D or xD or XD</nowiki></code>
|huge grin, very happy
|-
|¬_¬ or -.- or -.-' or -_- or -_-' or = _ ='
|Annoyed, Sweat-drop, not surprised, [[Facepalm]]
|?_?
|Expression of disapproval or disbelief
|-
|}

===Styles of the computer underground text art scene===
====Atari 400/800 ATASCII====
The [[Atari 8-bit family|Atari 400/800]] did not follow the ASCII standard and had its own character set, called [[ATASCII]].<ref>{{Harvnb|Šterba|2005}} (gif image)</ref><ref>{{Harvnb|Moeser|Fusik|2007}}</ref> The emergence of ATASCII art coincided with the growing popularity of [[Bulletin board system|BBS Systems]] caused by availability of the [[acoustic coupler]]s that were compatible with the 8-bit home computers. ATASCII text animations are also referred to as "break animations" by the Atari sceners.{{Citation needed|date=May 2009}}

====C-64 PETSCII====
The [[Commodore 64]], which was released in 1982, also did not follow the ASCII standard. The C-64 character set is called [[PETSCII]], an extended form of [[ASCII|ASCII-1963]]. As with the Atari's ATASCII art, C-64 fans developed a similar scene that used PETSCII for their creations.

===="Block ASCII" / "High ASCII" style ASCII art on the IBM PC====
[[Image:ASCII notepad acidview compare.png|right|200px|thumbnail|Block ASCII display via Notepad versus ACiDView for Windows]]
So-called "block ASCII" or "high ASCII" uses the extended characters of the 8-bit [[code page 437]], which is a proprietary standard introduced by [[IBM]] in 1979 (ANSI Standard x3.16) for the IBM PC and MS DOS operating system. "Block ASCIIs" were widely used on the PC during the 1990s until the Internet replaced BBSes as the main communication platform. Until then, "block ASCIIs" dominated the [[Computer art scene|PC Text Art Scene]].<ref name="asciistyles">[http://www.RoySAC.com/roy-sac_styles_of_underground_text_art.asp The three Styles of the Underground ASCII Art Scene], Article 01, 2006, Roy/[[Superior Art Creations|SAC]], [http://www.RoySAC.com RoySAC.com]</ref><ref name="ddarthistory">[http://cd.textfiles.com/darkdomain/www/html/history-art_scene.html An Abbreviated History of the Underground Computer Art Scene] by Napalm, 11/10/1998, The History of Art and Technology</ref>

The first art scene group that focused on the extended character set of the PC in their art work was called "Aces of ANSI Art," or "AAA." Some members of left in 1990, and formed a group called [[ACiD Productions|ACiD]], "ANSI Creators in Demand." In that same year the second major underground art scene group was founded, [[iCE Advertisements|ICE]], "Insane Creators Enterprise".<ref name="100years">[http://www.cow.net/conned/notacon/artscene/notacon-100artscene-transcript.txt 100 YEARS OF THE COMPUTER ART SCENE], Presented by [[Jason Scott Sadofsky]] and [[RaD Man]] ([[ACiD Productions|ACiD]]), [[Notacon]] Conference - Cleveland, Ohio, USA, April 23-25th, 2004</ref>

There is some debate between ASCII and block ASCII artist, with "Hardcore" ASCII artists maintaining that block ASCII art is in fact [[ANSI art]], because it does not use the 128 characters of the original ASCII standard. On the other hand, block ASCII artists argue that if their art uses only characters of the computers character set, then it is to be called ASCII, regardless if the character set is proprietary or not.<!--original sentence was entirely ungrammatical; I hope this one gets the proper meaning across-->

Microsoft Windows does not support the [[American National Standards Institute|ANSI Standard]] x3.16. One can view block ASCIIs with a text editor using the font "[[Terminal (font)|Terminal]]", but it will not look exactly as it was intended by the artist. With a special ASCII/ANSI viewer, such as ACiDView for Windows (see ASCII and ANSI art viewers), one can see block ASCII and ANSI files properly. An example that [[#.22Block.22 ASCII art|illustrates the difference]] in appearance is part of this article. Alternatively, one could look at the file using the Type command in the command prompt.

===="Amiga"/"Oldskool" style ASCII art====
[[Image:Paso-IceCream-AmigaVsPC.png|right|200px|thumbnail|Oldschool/Amiga ASCII look on Commodore Amiga Computer versus look on the IBM PC (notice the tight spacing)]]
In the art scene one popular ASCII style that used the 7-bit standard ASCII character set was the so called "[[Old school|Oldskool]]" Style. It is also called "Amiga style", due to its origin and widespread use on the [[Amiga|Commodore Amiga]] Computers. The style uses primarily the characters: <tt>_/\-+=.()<>:</tt>. The "oldskool" art looks more like the outlined drawings of shapes than real pictures.
This is an example of "[[Amiga]] style" (also referred to as "old school" or "oldskool" style) [[computer art scene|scene]] ASCII art.<ref name="asciistyles" />

The Amiga ASCII Scene surfaced in 1992, 7 years after the introduction of the Commodore [[Amiga 1000]]. The Commodore 64 PETSCII scene did not make the transition to the Commodore Amiga as the C64 demo and warez scenes did. Among the first Amiga ASCII art groups were ART, Epsilon Design, Upper Class, Unreal. This means that the text art scene on the Amiga was actually younger than the text art scene on the PC. The Amiga artists also did not call their ASCII art style "Oldskool". That term was introduced on the PC. When and by whom is unknown and lost in history.

The Amiga style ASCII artwork was most often released in the form of a single text file, which included all the artwork (usually requested), with some design parts in between, as opposed to the PC art scene where the art work was released as a [[ZIP archive]] with separate text files for each piece. Furthermore, the releases were usually called "ASCII collections" and not "art packs" like on the IBM PC.

===== In text editors =====
<pre style="float:right;">
 _____ ___ ____ _      _   
|  ___|_ _/ ___| | ___| |_ 
| |_   | | |  _| |/ _ \ __|
|  _|  | | |_| | |  __/ |_ 
|_|   |___\____|_|\___|\__|
</pre>
This kind of ASCII art is hand made in a text editor. Popular editors used to make this kind of ASCII art include [[CygnusEd]]itor aka CED ([[Amiga]]) and [[EditPlus|EditPlus2]] ([[Wintel|PC]]).

Oldskool font example from the PC, which was taken from the ASCII Editor ''[[FIGlet|<small>FIG</small>let]]''.

====Newskool style ASCII art====
[[Image:Roy-csnewskool.png|right|200px|thumbnail|Newskool ASCII Screenshot]]
"Newskool" is a popular form of ASCII art which capitalizes on character strings like  "$#Xxo".  In spite of its name, the style is not "new"; on the contrary, it was very old but fell out of favor and was replaced by "Oldskool" and "Block" style ASCII art. It was dubbed "Newskool" upon its comeback and renewed popularity at the end of the 1990s.<ref name="asciistyles" />

Newskool changed significantly as the result of the introduction of [[Character encoding|extended proprietary characters]]. The classic 7-bit standard ASCII characters remain predominant, but the extended characters are often used for "fine tuning" and "tweaking". The style developed further after the introduction and adaptation of [[Unicode]].

==Methods for generating ASCII art==
{{Main|List of text editors#ASCII and ANSI art}}

While some prefer to use a simple [[text editor]] to produce ASCII art, specialized programs have been developed that often simulate the features and tools in bitmap image editors. For Block ASCII art and ANSI art the artist almost always uses a special text editor, because the required characters are not available on a standard keyboard.

The special text editors have sets of special characters assigned to existing keys on the keyboard. Popular MS DOS based editors, such as TheDraw and ACiDDraw had multiple sets of different special characters mapped to the F-Keys to make the use of those characters easier for the artist who can switch between individual sets of characters via basic keyboard shortcuts. PabloDraw is one of the very few special ASCII/ANSI art editors that were developed for MS Windows XP.

===Image to text conversion===
{{Main|ASCII art converters}}

Other programs allow one to automatically convert an image to text characters, which is a special case of [[vector quantization]]. A method is to sample the image down to [[grayscale]] with less than [[integer (computer science)|8-bit]] precision, and then assign a character for each value.

Examples of converted images are given below.

This is one of the earliest forms of ASCII art, dating back to the early days of the 1960s [[minicomputer]]s and [[teletype]]s. During the 1970s it was popular in [[shopping mall|malls]] to get a [[t-shirt]] with a photograph printed in ASCII art on it from an automated kiosk manned by a computer. With the advent of the web and [[HTML]] and [[Cascading Style Sheets|CSS]], many ASCII conversion programs will now quantize to a full [[RGB]] colorspace, enabling colorized ASCII images.

Since the appearance of the first simple converter tools, individuals have converted images to ASCII art automatically and afterwards claimed that they generated the result themselves "by hand" via a text editor.

Images that were converted to text, where no touch up work was done after the conversion, can in almost every case be identified as such, at least by an experienced text artist. The detection of converted, software-generated text art becomes much more difficult if some time was spent by the editor to touch up the details that are typical indicators of auto-generation.  The inconsistencies in "shading" in just one art piece are often what gives the software-created status away.

<center>
{|
|-
|| [[Image:Redwingblackbird1.jpg|200px]] || [[Image:Blide 5 nocolours.PNG|200px]] || [[Image:bird converted to ASCII characters.png|200px]]
|}
</center>

Still images or movies can also be converted to ASCII on various Linux and UNIX computers using the [http://aa-project.sourceforge.net/aalib aalib (black and white)] or [http://sam.zoy.org/libcaca libcaca (colour)] graphics device driver, or the VLC media player; all of which render the screen using ASCII symbols instead of pixels.  See also [http://oreilly.com/pub/h/4441 O'Reilly article "Watch Videos in ASCII art"].

==Non fixed-width ASCII==
Most ASCII art is created using a [[monospace font]], where all characters are identical in width ([[Courier (typeface)|Courier New]] is a popular monospace font). Early computers in use when ASCII art came into vogue had monospace fonts for screen and printer displays. Today most of the more commonly used fonts in word processors, web browsers and other programs are proportional fonts, such as [[Arial]] or [[Times New Roman]], where different widths are used for different characters. ASCII art drawn for a fixed width font will usually appear distorted, or even unrecognizable when displayed in a proportional font.

Some ASCII artists have produced art for display in proportional fonts. These ASCIIs, rather than using a purely shade-based correspondence, use characters for slopes and borders and use block shading. These ASCIIs generally offer greater precision and attention to detail than fixed-width ASCIIs for a lower character count, although they are not as universally accessible since they are usually relatively font-specific.

==Animated ASCII art==
Animated ASCII art started in 1970  from so-called VT100 animations produced on [[vt100]] terminals. These animations were simply text with cursor movement instructions, deleting and erasing the characters necessary to appear animated. Usually, they represented a long hand-crafted process undertaken by a single person to tell a story.

Contemporary [[web browser]] revitalized animated ASCII art again. It became possible to display animated ASCII art via [[JavaScript]] or [[Java (Sun)|Java applets]]. Static ASCII art pictures are loaded and displayed one after another, creating the animation, very similar to how movie projectors  unreel film reel and project the individual pictures on the big screen at movie theaters. A new term was born: ''ASCIImation'' - another name of Animated ASCII Art. A seminal work in this arena is the Star Wars ASCIImation.<ref>{{cite web
   |first=Simon
   |last=Jansen
   |date=April 18, 2006
   |url=http://www.asciimation.co.nz/
   |title=Star "ASCIImation" Wars
   |publisher=Asciimation.co.nz
   |accessdate=2008-11-18
}}</ref> More complicated routines in JavaScript generate more elaborate ASCIImations showing effects like [[Morphing]] effects, star field emulations, fading effects and calculated images, such as [[Mandelbrot set|mandelbrot fractal]] animations.<ref name="asciimation1">[http://www.roysac.com/skylined-Morph-ASCIIanimationFrame.asp ASCII Animation "Morph" by SkyLined (using JavaScript)] includes morph effects and mandelbrot fractal animation</ref><ref name="asciimation2">[http://www.roysac.com/skylined-Starfield-ASCIIanimationFrame.asp ASCII Animation Starfield by SkyLined (using JavaScript)] includes fading effect and horizontal scrolling star field emulation</ref>

There are now many tools and programs that can transform raster images into text symbols; some of these tools can operate on streaming video. For example, the music video for pop singer [[Beck Hansen]]'s song "Black Tambourine"<ref name=beckbt>[http://www.youtube.com/watch?v=3ncgg4eGYO0 Black Tambourine] ASCIImation Music Video by [[Beck Hansen]] at [[YouTube.com]]</ref> is made up entirely of ASCII characters that approximate the original footage.

==Other text-based art==
There are a variety of other types of art using text symbols from character sets other than ASCII and/or some form of color coding. Despite not being pure ASCII, these are still often referred to as "ASCII art". The character set portion designed specifically for drawing is known as the line drawing characters or [[pseudo-graphics]].

===ANSI art===
{{Main|ANSI art}}
The IBM PC graphics hardware in text mode uses 16 bits per character. It supports a variety of configurations, but in its default mode under DOS they are used to give 256 glyphs from one of the IBM PC code pages ([[Code page 437]] by default), 16 foreground colors, 8 background colors, and a flash option. Such art can be loaded into screen memory directly. ANSI.SYS, if loaded, also allows such art to be placed on screen by outputting escape sequences that indicate movements of the screen cursor and color/flash changes. If this method is used then the art becomes known as [[ANSI art]]. The IBM PC code pages also include characters intended for simple drawing which often made this art appear much cleaner than that made with more traditional character sets. Plain text files are also seen with these characters, though they have become far less common since Windows GUI text editors (using the [[Windows ANSI code page]]) have largely replaced DOS based ones.

===Shift_JIS===
[[File:Mona01.svg|thumb|{{nihongo|'''Mona'''|???|Mona}} Posted on {{nihongo|'''[[2ch]]'''|2?????|Nichanneru}} in 2000]]
{{Main|Shift_JIS art}}
A large character selection and the availability of fixed-width characters allow Japanese users to use [[Shift JIS]] as a text-based art on Japanese websites.

===Unicode===
{{Main|Unicode}}
[[Unicode]] would seem to offer the ultimate flexibility in producing text based art with its huge variety of characters. However, finding a suitable fixed-width font is likely to be difficult if a significant subset of Unicode is desired. (Modern UNIX-style operating systems do provide complete fixed-width Unicode fonts, e.g. for [[xterm]]. Windows has the [[Courier New]] font which includes characters like +---+?????????¯?) Also, the common practice of rendering Unicode with a mixture of variable width fonts is likely to make predictable display hard if more than a tiny subset of Unicode is used.

===Overprinting (surprint)===
In the 1970s and early 1980s it was popular to produce a kind of text art that relied on overprinting &mdash; the overall darkness of a particular character space dependent on how many characters, as well as the choice of character, printed in a particular place. Thanks to the increased granularity of tone, photographs were often converted to this type of printout. Even manual typewriters or [[daisy wheel printer]]s could be used. The technique has fallen from popularity since all cheap printers can easily print photographs, and a normal text file (or an e-mail message or Usenet posting) cannot represent overprinted text. However, something similar has emerged to replace it: shaded or colored ASCII art, using ANSI video terminal markup or color codes (such as those found in [[HTML]], [[Internet Relay Chat|IRC]], and many internet [[message board]]s) to add a bit more tone variation. In this way, it is possible to create ASCII art where the characters only differ in color

==ASCII art programs==
* [[List of text editors#ASCII and ANSI art|ASCII art text editors]]

==See also==
{{Commons category}}
* [[Fax art]]
* Types and Styles: [[ASCII stereogram]], [[Emoticon]], [[FILE ID.DIZ]], [[.nfo]] (release info file)
* Related art: [[ANSI art]], [[ASCII porn]], [[Mona (ASCII art)]], [[Shift JIS art]]
* Related (context): [[TMDC]], [[Bulletin board system]] (BBS), [[Computer art scene]], [[:Category:Artscene groups]]
* Pre-ASCII history: [[Typewriter]], [[Teleprinter]], [[Radioteletype]], [[ATASCII]], [[PETSCII]]
* Way to input special symbols: [[Alt codes]]
* Software: [[AAlib]], [[cowsay]]

==Citations==
{{Reflist|2}}

==References==
<!-- Please replace any deadlinks with archive.org links, instead of removing them -->
<!-- alphabetical order -->
<div class="references-small">
*{{Citation
|last=Beal
|first=Vangie
|url=http://www.webopedia.com/quick_ref/textmessageabbreviations.asp#smiley
|year=2008
|title=Webopedia: Text Messaging, Chat Abbreviations & Smiley Faces
|publisher=www.Webopedia.com
|accessdate=2008-03-05
}}
*{{Citation
|last=Carlson
|first=Wayne E.
|url=http://design.osu.edu/carlson/history/timeline.html#1960
|year=2003
|title=An Historical Timeline of Computer Graphics and Animation
|accessdate=2008-03-05
}}
*{{Citation
|last=Cumbrowski
|first=Carsten
|url=http://www.roysac.com/blog/2007/02/keyboard-text-art-from-over-twenty.html
|year=2007b
|date=2007-02-14
|title=Keyboard Text Art From Over Twenty Years Before ASCII
|publisher=roysac.com
|accessdate=2008-03-05
}}
*{{Citation
|last=Cumbrowski
|first=Carsten
|url=http://www.roysac.com/blog/2007/02/history-of-text-art-video-by-rad-man.html
|date=2007-11-02
|title=History of Text Art Video by RaD Man / ACiD
|publisher=roysac.com
|accessdate=2008-03-05
}}
*{{Citation
|last=Defacto2
|first=
|url=http://www.defacto2.net/documents.cfm
|year=2008
|title=Defacto2 - Scene Documents, text and NFO files
|publisher=defacto2.net
|accessdate=2008-03-05
}}
*{{Citation
|last=Gândara
|first=Joaquim
|url=http://www.nerd-boy.net
|year=2006
|title=The Adventures of Nerd Boy
|publisher=http://www.nerd-boy.net
|accessdate=2008-03-05
}}
*{{Citation
 | title=RTTY Handbook
 | work=Technology & Engineering
 | publisher=G/L Tab Books, Blue Ridge Summit [[Pennsylvania|PA.]]
 | editor-last=Green
 | editor-first=Wayne
 | editor=Wayne Green
 | date=June 1972
 | isbn=0-8306-2597-6
}}<!-- 320 Pages; also by McGraw-Hill/TAB Electronics -->
*{{Citation
 | last=Jones
 | first=Mike
 | title=The First Smiley :-)
 | publisher=research.microsoft.com
 | date=2002-09-12
 | url=http://research.microsoft.com/~mbj/Smiley/Smiley.html
 | accessdate=2008-03-05
}}
*{{Citation
|last=Moeser
|first=David
|last2=Fusik
|first2=Piotr
|url=http://www.faqs.org/faqs/atari-8-bit/faq/section-49.html
|date=2007-05-13
|title=7.2) What is the ATASCII character set?
|publisher=faqs.org
|accessdate=2008-03-05
}}
*{{Citation
|last=nb-pl.jogger.pl
|title=:[ Nerdboy PL ]:
|url=http://nb-pl.jogger.pl/
 |year=2006
|accessdate=2006-05-14
|archiveurl = http://web.archive.org/web/20060514214623/http://nb-pl.jogger.pl/ |archivedate = 2006-05-14}} ([[Polish language|Polish]] translators: Ania Górecka [ag], Asia Mazur [as], Blazej Kozlowski [bug], Janusz [jp], Lukasz Dabrowski [luk], Lukasz Tyrala [lt.], Lukasz Wilk [wilu], Marcin Glinski [fsc])
*{{Citation
 | last=Necromancer
 | title=History of the PC Ascii Scene
 | publisher=[[textfiles.com]]
 | date=1998-03-06
 | url=http://artscene.textfiles.com/history/essays/pcascii.txt
 | accessdate=2008-03-05
}}
*{{Citation
 | last=Nguyen
 | first=Tran Q.
 | title=ASCII Art Farts: #1: SURF'S UP (Fri, 1999 Jun 25)
 | publisher=asciiartfarts.com
 | date=2001-08-07
 | url=http://www.asciiartfarts.com/19990625.html
  | accessdate=2001-08-07
|archiveurl = http://web.archive.org/web/20010807115533/http://www.asciiartfarts.com/19990625.html |archivedate = 2001-08-07}}
*{{Citation
 | last=Nguyen
 | first=Tran Q.
 | title=ASCII Art Farts: original
 | publisher=asciiartfarts.com
 | date=2007-03-08
 | url=http://www.asciiartfarts.com/original.html
  | accessdate=2007-03-08
|archiveurl = http://web.archive.org/web/20070308140633/http://www.asciiartfarts.com/original.html |archivedate = 2007-03-08}}
*{{Citation
 | title=Typewriter Art
 | work=Library
 | publisher=The Virtual Typewriter Museum
 | editor-last=Robert
 | editor-first=Paul
 | editor=Paul Robert
 | date=2005-05-11
 | url=http://www.typewritermuseum.org/lib/library_art2.html
 | accessdate=2008-03-05
}}
<!-- primary site http://www.geocities.com/joan_stark/textasciihistory.txt -->
*{{Citation
 | last=Stark
 | first=Joan G.
 | authorlink=Joan Stark
 | title=DEVELOPMENT OF (ASCII) TEXT ART
 | year=2000
 | accessdate=2008-03-05
|url=http://www.geocities.com/joan_stark/textasciihistory.txt
|archiveurl=http://www.webcitation.org/5klVaBjlA|archivedate=2009-10-24|deadurl=yes}}
<!-- primary site http://www.geocities.com/SoHo/7373/history.htm#typewrite -->
*{{Citation
 | last=Stark
 | first=Joan G.
 | authorlink=Joan Stark
 | title=The History of ASCII (Text) Art
 | year=2001
 | accessdate=2008-03-05
|archiveurl=http://www.webcitation.org/5klVZl8en#typewrite|archivedate=2009-10-24|deadurl=yes|url=http://www.geocities.com/SoHo/7373/history.htm}}
*{{Citation
 | last=Šterba
 | first=Radek
 | title=ATASCII
 | date=2005-12-20
 | url=http://raster.infos.cz/atari/chars/atascii.htm
  | accessdate=2005-12-20
|archiveurl = http://web.archive.org/web/20051220204949/http://raster.infos.cz/atari/chars/atascii.htm |archivedate = 2005-12-20}}
*{{Citation
 | last=textfiles
 | title=Collection of ASCII Smileys
 | year=2008
 | url=http://artscene.textfiles.com/asciiart/smileys.txt
 | accessdate=2008-03-05
}}
*{{Citation
|last=Wilk
|first=Lukasz
|title=Strona grupy dyskusyjnej PL.REC.ASCII-ART
|url=http://www.ascii.art.pl/nerd.htm
 |year=2006
|accessdate=2006-11-30
|archiveurl = http://web.archive.org/web/20061130210032/http://www.ascii.art.pl/nerd.htm |archivedate = 2006-11-30}} {{pl icon}}
<!--Place new references above this line--></div>

==External links==
{{External links|date=January 2011}}
*{{dmoz|Arts/Visual_Arts/ASCII_Art/}}
*[http://artscene.textfiles.com/ Textfiles.com archive]
*[http://sixteencolors.net/ Sixteen Colors ANSI Art and ASCII Art Archive]
*[http://www.defacto2.net/documents.cfm Defacto2.net Scene NFO Files Archive]
*[http://www.chris.com/ascii Ascii art collection]
*[http://www.asciimator.net/ ASCIImator.net ASCII Animation Collection]
*[http://aa-project.sourceforge.net/aalib/ An Ascii-art Library]
*[http://www.youtube.com/user/avove7/ Ascii art animation]
*[http://www.nuclearnova.com/asciiart.php Mac Ascii art generator]

<!----- Do not add any more links to this section. ----->
<!----- If you believe that the site you want to add is of extraordinary importance and must be linked to, ---->
<!----- please elaborate this at the Articles Talk page ----->

{{DEFAULTSORT:Ascii Art}}
[[Category:Wikipedia articles with ASCII art]]
[[Category:ASCII art]]
[[Category:Computer art]]

[[ar:?? ????]]
[[bn:????????? ?????]]
[[ca:Art ASCII]]
[[cs:ASCII art]]
[[da:ASCII art]]
[[de:ASCII-Art]]
[[et:ASCII-kunst]]
[[es:Arte ASCII]]
[[eo:Arto ASCII]]
[[fr:Art ASCII]]
[[gl:Arte ASCII]]
[[ko:??? ??]]
[[hr:Ascii-art]]
[[id:Seni ASCII]]
[[ia:Arte in ASCII]]
[[it:ASCII art]]
[[he:????? ASCII]]
[[lt:ASCII menas]]
[[ms:Seni ASCII]]
[[nl:ASCII-art]]
[[ja:???????]]
[[no:ASCII-kunst]]
[[nn:ASCII-kunst]]
[[pl:ASCII-Art]]
[[pt:ASCII art]]
[[ru:ASCII-???????]]
[[simple:ASCII art]]
[[sk:ASCII umenie]]
[[sl:ASCII-umetnost]]
[[sr:Aski umetnost]]
[[fi:ASCII-taide]]
[[sv:ASCII-konst]]
[[uk:ASCII-???????]]
[[vi:Ngh? thu?t ASCII]]
[[zh:ASCII??]]</text>
</page>
<page>
<id>560</id>
<title>ASEA IRB</title>
<text>{{orphan|date=December 2008}}
The '''ASEA IRB''' is an industrial robot series for material handling, packing, transportation, polishing, welding, and grading.  Built in 1975, the robot allowed movement in 5 axes with a lift capacity of 6 [[Kilogram|kg]].  It was the world's first fully electrically driven and microprocessor-controlled robot, using [[Intel]]'s first chipset.

The ASEA IRB was constructed by [[Björn Weichbrodt]], [[Ove Kullborg]], [[Bengt Nilsson]] and [[Herbert Kaufmann]] and was manufactured by [[ASEA]] in [[Sweden]]/[[Västerås]]. The first model, IRB 6, was developed in 1972-1973 on assignment by the ASEA [[CEO]] [[Curt Nicolin]] and was shown for the first time at the end of August 1973. The example shown in the [[technical museum]] is the first robot that was sold. It was bought by Magnussons in [[Genarp]] to wax and polish rust-free tubes bent at 90° [[angle]]s. This robot was donated to the museum during ASEA's 100-year anniversary in 1983.

The IRB 6 sold 1900 copies during the next 17 years (1975-1992).  It became the [[Sweden|Swedish]] symbol for a new [[Labour economics|Labour market]], shared between man and robot.<ref>{{cite web|title=IRB 6 The world's first completely fully electrically driven and microprocessor controlled robot.|url=http://www.tekniskamuseet.se/robotics/utst/fabriken/IRB6.htm}} 070516 tekniskamuseet.se (in [[Swedish language]])</ref>

== Notes ==
{{reflist|2}}

[[Category:Industrial robots]]
[[Category:ASEA]]</text>
</page>
<page>
<id>572</id>
<title>ASTAR</title>
<text>{{otheruses|Astar (disambiguation)}}
{{Unreferenced|date=June 2007}}

<!--  Commented out because image was deleted: [[Image:astar.gif|frame|right|Original appearance of ASTAR]] --> 
ASTAR is a fictional golden [[humanoid]] [[robot]] from ''Planet Danger''. The character was created in the 1980s by the [[Canadian]] [[amputee]] organization [[The War Amps]] and is featured in material for their ''PLAYSAFE'' program to educate children about safety. 

The original televised segment featured a performer in an elaborate costume as ASTAR performing acrobatic stunts in a world full of dangerous machines. After evading various threats such as electrical hazards and moving blades, ASTAR eventually makes a mistake causing his arm to be amputated by a large rotating saw. He then picks up his severed arm and reattaches it with ease. The segment ends with ASTAR giving the warning:

:I am ASTAR, a robot. I can put my arm back on. You can't. So play safe!</blockquote>

The above warning is now part of Canadian [[popular culture]] for those who grew up in the 1980s. In a recent remake of the segment, ASTAR is now an animated [[CG]] character, and the warning is altered slightly to "I am ASTAR, a robot '''from Planet Danger'''. I can put my arm back on. You can't. So play safe!"

== See also ==
* [[The War Amps]]

== External links ==
* [http://www.capohedz.com/typebrighter/2007/07/astar-robot-i-can-put-my-arm-back-on.html Original 1980's Video and write up]
* [http://www.waramps.ca/playsafe/astar.html PLAYSAFE page for ASTAR]

[[Category:Fictional robots]]</text>
</page>
<page>
<id>588</id>
<title>ATI Technologies</title>
<text>{{Redirect|ATI||Ati (disambiguation)}}
{{Infobox company
|company_name=ATI Technologies|company_logo=[[Image:ATI Logo.svg|150px|ATI Logo]]
|company_type= [[Subsidiary]] of [[Advanced Micro Devices|AMD]]
|industry=[[Semiconductor industry|Semiconductors]]
|foundation=1985 (as Array Technologies Incorporated)<br>
2006 (renamed to AMD Graphics Product Group)
|location=[[Markham, Ontario]], [[Canada]]
|key_people=Adrian Hartog<br><small>(President)</small><br/>Rick Bergman<br/><small>([[Vice President]]) ([[General Manager]])</small>
|products=[[Graphics processing unit]]s<br/>[[Chipset]]s<br/>[[Video capture card]]s
|parent=[[Advanced Micro Devices|AMD]]
|homepage=[http://ati.amd.com/ ati.amd.com]
}}

'''ATI Technologies Inc''', is a major designer and supplier of [[graphics processing unit]]s and motherboard [[chipsets]] based in [[Canada]]. In 2006, the company was acquired by [[Advanced Micro Devices]] (AMD) and was renamed to the AMD Graphics Products group.  Despite the acquisition, the ATI brand was retained for graphics cards until August 30, 2010. AMD have announced that it will retire the "ATI" name and instead brand its graphics chipsets as "AMD" beginning in late 2010.<ref>http://www.arnnet.com.au/article/358774/ati_re-branded_amd/</ref>

ATi Technologies is a [[fabless semiconductor company]] conducting in-house [[research and development]] and [[outsourcing]] the [[manufacturing]] and assembly of its products. Its main competitor is [[NVIDIA]] in the graphics and handheld market. The flagship product, the [[Radeon]] series of graphics cards, directly competes with [[NVIDIA]]'s [[GeForce]]. These two companies' dominance of the market forced other manufacturers into niche roles.

==History==
Lee Ka Lau<ref>[http://www.giving.utoronto.ca/chairs/showchairs.asp?ID=19 University of Toronto Division of University Advancement page]. Retrieved February 28, 2008.</ref>, Benny Lau and Kwok Yuen Ho<ref>[http://www.ati.com/designpartners/media/bios/kyho.html K.Y. Ho biography on ATI website]</ref> founded ATI in 1985 as "Array Technologies Incorporated". Working primarily in the [[original equipment manufacturer|OEM]] field, ATI produced integrated graphics cards for PC manufacturers such as [[IBM]] and [[Commodore International|Commodore]]. By 1987, ATI had grown into an independent graphics-card retailer, introducing EGA Wonder and VGA Wonder graphics card product lines under its brand that year<ref>[http://www.amd.com/us-en/Weblets/0,,7832_10554,00.html?redir=AAMD04#1980 History of AMD at AMD.com]</ref>. In May 1991, the company released the Mach8, ATI's first product able to process graphics without the CPU. Debuting in 1992, the Mach32 offered improved memory bandwidth and [[graphical user interface|GUI]] acceleration performance. ATI Technologies Inc. went public in 1993 with stock listed at [[NASDAQ]] and [[Toronto Stock Exchange]].

[[File:AMDmarkham4.jpg|thumb|right|250px|AMD Markham at the former ATI headquarters.]]
[[File:Atitechnologiessiliconvalley.jpg|thumb|right|250px|ATI's former Silicon Valley office.]]
[[File:ATI Wonder.jpg|thumb|ATI VGA Wonder with 256 kB RAM.]]

In 1994, the Mach64 accelerator debuted, powering the Graphics Xpression and Graphics Pro Turbo, offering hardware support for [[YUV]]-to-[[RGB]] [[color space]] conversion in addition to hardware zoom; early techniques of hardware-based video acceleration.

ATI introduced its first combination of 2D and [[3D computer graphics|3D]] accelerator under the name [[ATI Rage|3D Rage]]. This chip was based on the Mach 64, but it featured elemental 3D acceleration. The ATI Rage line powered almost the entire range of ATI graphics products. In particular, the [[ATI Rage|Rage Pro]] was one of the first viable 2D-plus-3D alternatives to [[3Dfx]]'s 3D-only Voodoo chipset. 3D acceleration in the Rage line advanced from the basic functionality within the initial 3D Rage to a more advanced [[DirectX|DirectX 6.0]] accelerator in the 1999 [[ATI Rage|Rage 128]].

The [[All-in-Wonder]] product line introduced in 1996 was the first combination of integrated graphics chip with [[TV tuner card]] and the first chip that enabled to display computer graphics on a TV set<ref>[http://www.amd.com/us-en/Weblets/0,,7832_10554,00.html?redir=AAMD04#1990 History of AMD - 1996 at AMD.com]</ref>. The cards featured 3D acceleration powered by ATI's second generation 3D Rage II, 64-bit 2D performance, TV-quality video acceleration, analog video capture, TV tuner functionality, flicker-free TV-out and stereo TV audio reception.

ATI made an entrance into the mobile computing sector by introducing 3D-graphics acceleration to [[laptop]]s in 1996. The Mobility product line had to meet requirements different from desktop PC, such as minimized power usage, reduced heat output, [[Transition Minimized Differential Signaling|TMDS]] output capabilities for laptop screens, and maximized integration. In 1997, ATI acquired [[Tseng Labs]]'s graphics assets, which included 40 [[engineer]]s.

The [[Radeon]] line of graphics products was unveiled in 2000. The initial Radeon [[graphics processing unit]] was an all-new design with DirectX 7.0 3D acceleration, video acceleration, and 2D acceleration. Technology developed for a specific Radeon generation could be built in varying levels of features and performance in order to provide products suited for the entire market range, from high-end to budget to mobile versions.

In 2000, ATI acquired [[ArtX]], which engineered the [[Nintendo GameCube#Graphics Processing Unit and System Chipset|Flipper]] graphics chip used in the [[Nintendo GameCube]] game console. They have also created a modified version of the chip (codenamed [[Hollywood (graphics chip)|Hollywood]]) for the successor of the [[GameCube]], the [[Wii]]. ATI was contracted by [[Microsoft]] to create the graphics core (codenamed [[Xenos (graphics chip)|Xenos]]) for the [[Xbox 360]]. Later in 2005, ATI acquired [[Terayon's]] cable modem [[silicon intellectual property]] strengthening their lead in the consumer digital television market<ref>[http://apps.ati.com/ir/PressReleaseText.asp?compid=105421&releaseID=671557 press release]</ref>. K. Y. Ho remained as Chairman of the Board until he retired in November 2005. [[David E. Orton|Dave Orton]] replaced him as the President and [[Chief executive officer|CEO]] of the organization.

On July 24, 2006, [[Advanced Micro Devices]] and ATI announced a plan to [[mergers and acquisitions|merge]] together in a deal valued at $5.4 billion. The merger closed on October 25, 2006<ref>[http://ir.ati.com/phoenix.zhtml?c=105421&p=irol-newsArticle&ID=921365&highlight= Press Release]</ref>. The acquisition consideration included over $2 billion financed from a loan and 56 million shares of AMD stock<ref>[http://www.amd.com/us-en/Corporate/VirtualPressRoom/0,,51_104_543~113656,00.html AMD page]</ref>. ATI retained its name, logos and trademarks. ATI's then CEO Dave Orton was made the Executive Vice President of Visual and Media Businesses<ref>[http://www.amd.com/us-en/Corporate/InvestorRelations/0,,51_306_14668,00.html AMD 2006 December Analyst Day page]</ref>.

It was reported that in December 2006 AMD/ATI, along with its main rival NVIDIA, received subpoenas from the [[United States Department of Justice]] regarding possible [[United States antitrust law|antitrust]] violations in the graphics card industry<ref>{{Cite web|url=http://news.zdnet.com/2100-9584_22-6140041.html|title=Justice Dept. subpoenas AMD, NVIDIA|publisher=New York Times|date= 1 December 2006}}</ref>.

In July 2007, AMD announced the resignation of Dave Orton. ATI, a subsidiary of AMD, is called the Graphics Product Group (GPG) inside the company<ref>[http://www.amd.com/us-en/Corporate/InvestorRelations/0,,51_306_15086,00.html AMD 2007 Analyst Day page]</ref>. The top-level management of the Graphics Product Group consists of Rick Bergman, Senior Vice President and General Manager and Adrian Hartog, Senior Vice President and General Manager of Consumer Electronics Group. Both report to [[Dirk Meyer]], CEO of AMD<ref>[http://www.amd.com/us-en/Corporate/AboutAMD/0,,51_52_570,00.html Corporate Information - Executive Biographies at AMD.com]</ref>.

On 30 August 2010, John Trikola announced that AMD will retire the "ATI" brand for its graphics chipsets, and will brand future products as "AMD".<ref>http://news.softpedia.com/news/AMD-Really-Dropping-the-ATI-Brand-154168.shtml</ref>

==Products==
[[Image:Ruby's Revenge 1024.jpg|right|thumb|300px|ATI's Ruby fictional female character.]]

In addition to developing high-end [[graphics processing unit|GPU]]s (originally called a VPU, visual processing unit, by ATI) for PCs And Apple Macs, ATI also designs embedded versions for laptops (Mobility Radeon), [[Personal Digital Assistant|PDA]]s and [[mobile phone]]s ([[Imageon]]), integrated motherboards (Radeon IGP), and others.

ATI promotes some of its products with the fictional "Ruby" female character, described as a "mercenary for hire."<ref>[http://ati.de/ruby/index.html Ruby's Headquarters at ATI.de]</ref> Computer-animated videos produced by RhinoFX about Ruby on a mission (being a sniper, saboteur, hacker and so on) are displayed at large technology shows such as ''CeBIT'' and [[Consumer Electronics Show|''CES'']].

===Computer graphics chipsets===
{{Expand list|date=April 2010}}

*'''[[ATI Wonder series|Graphics Solution / "Small Wonder"]]''' - Series of 8-bit [[Industry Standard Architecture|ISA]] cards with [[Monochrome Display Adapter|MDA]], [[Hercules Graphics Card|Hercules]], [[Color Graphics Adapter|CGA]] and [[Plantronics Colorplus|Plantronics Color+]] compatibility. Later versions added [[Enhanced Graphics Adapter|EGA]] support.
*'''[[ATI Wonder series|EGA / VGA Wonder]]''' - [[IBM]] "[[Enhanced Graphics Adapter|EGA]]/[[Video Graphics Array|VGA]]-compatible" display adapters (1987)
*'''[[ATI Mach|Mach]] Series''' - Introduced ATI's first [[2D computer graphics|2D]] [[graphical user interface|GUI]] "Windows Accelerator". As the series evolved, GUI acceleration improved dramatically and early video acceleration appeared.
*'''[[ATI Rage|Rage]] Series''' - ATI's first 2D and [[3D accelerator]] chips. The series evolved from rudimentary 3D with 2D GUI acceleration and [[MPEG-1]] capability, to a highly competitive [[Direct3D]] 6 accelerator with then "best-in-class" DVD ([[MPEG2]]) acceleration. The various chips were very popular with [[Original equipment manufacturer|OEM]]s of the time. The Rage II was used in the first ATI [[All-In-Wonder]] multi-function video card, and more advanced All-In-Wonders based on Rage series GPUs followed. (1995–2004)
**'''[[ATI_Rage#Mobility|Rage Mobility]]''' - Designed for use in low-power environments, such as notebooks. These chips were functionally similar to their desktop counterparts, but had additions such as advanced [[power management]], [[Liquid crystal display|LCD]] interfaces, and [[Multi monitor|dual monitor]] functionality.

*'''[[Radeon]] Series''' - Launched in 2000, the Radeon line is ATI's brand for their consumer 3D accelerator add-in cards. The original ''Radeon DDR'' was ATI's first DirectX 7 3D accelerator, introducing their first hardware [[transform and lighting|T&L]] engine. ATI often produced 'Pro' versions with higher clock speeds, and sometimes an extreme 'XT' version, and even more recently 'XT Platinum Edition (PE)' and 'XTX' versions. The Radeon series was the basis for many ATI All-In-Wonder boards.
**'''[[Radeon|Mobility Radeon]]''' - A series of power-optimized versions of Radeon graphics chips for use in laptops.  They introduced innovations such as modularized RAM chips, [[DVD]] (MPEG2) acceleration, notebook GPU card sockets, and "[[ATI PowerPlay|PowerPlay]]" power management technology. AMD recently announced DirectX 11-compatible versions of its mobile processors<ref>{{Cite web|url=http://news.techworld.com/mobile-wireless/3209713/amd-launches-directx-11-graphics-chips-for-laptops/|title=AMD launches DirectX 11 graphics chips for laptops|date=2010-01-08| publisher=techworld.com|accessdate=2010-01-08}}</ref>.
**'''[[ATI CrossFire]]''' - This technology was ATI's response to [[NVIDIA]]'s [[Scalable Link Interface|SLI]] platform. It allowed, by using a secondary video card and a dual PCI-E motherboard based on an ATI Crossfire-compatible chipset, the ability to combine the power of the two, three or four video cards to increase performance through a variety of different rendering options. There is an option for additional PCI-E video card plugging into the third PCI-E slot for gaming physics, or another option to do physics on the second video card<ref>[http://dailytech.com/article.aspx?newsid=5634 DailyTech report]</ref>.
*'''[[FireGL]]''' - Launched in 2001, following ATI's acquisition of FireGL Graphics from [[Diamond Multimedia]]. Workstation CAD/CAM video card, based on the Radeon series.
*'''[[FireMV]]''' - For workstations, featuring multi-view, a technology for the need of multiple displays for workstations with 2D acceleration only, usually based on the low-end products of the Radeon series.
*'''[[FirePro]]''' - The follow-on to the FireGL cards, for workstations.
*'''EyeFinity''' - Allows up to 6 monitors to be connected to one card to allow surround-screen panoramic view.
*'''EyeSpeed''' -  Allows you to experience games with true-to-life actions-and reactions. Things like physics effects, Artificial Intelligence (AI), and more.

===Personal computer platforms and chipsets===
{{See also|Comparison of ATI chipsets|Comparison of AMD chipsets}}

*'''[[Radeon R100|IGP 3x0]], [[Radeon R100|Mobility Radeon 7000 IGP]]''' - ATI's first chipsets. Included a DirectX 7-level 3D graphics processor.
*'''[[Radeon R200|9100 IGP]]''' - 2nd generation system chipset. IXP250 southbridge. It was notable for being ATI's first complete motherboard chipset, including an ATI-built southbridge. It included an updated DirectX 8.1 class graphics processor<ref>Gavrichenkov, Ilya. [http://www.xbitlabs.com/articles/chipsets/display/ati-igp9100.html ATI RADEON 9100 IGP Integrated Chipset Review], X-bit Labs, December 1, 2003.</ref>.
*'''[[Xpress 200|Xpress 200/200P]]''' - [[PCI Express]]-based [[Athlon 64]] and [[Pentium 4]] chipset. Supports [[SATA]] as well as integrated graphics with [[DirectX]] 9.0 support, the first integrated graphics chipset to do so<ref>Wasson, Scott. [http://techreport.com/reviews/2004q4/radeon-xpress200/index.x?pg=1 ATI's Radeon Xpress 200 chipset], Tech Report, November 8, 2004.</ref>.
*'''[[Xpress 3200]]''' - similar to ''[[Xpress 200]]'', but designed for optimal [[ATI CrossFire|CrossFire]] performance.
**'''[[AMD 580 chipset series|AMD 580X CrossFire chipset]]''' - AMD edition of ''Xpress 3200'' renamed, due to AMD acquisition of ATI.
*'''[[AMD 690 chipset series|690G]], [[AMD 690 chipset series|Xpress 1250]]''' - for AMD and Intel platforms. Includes DirectX 9 graphics processor improved over ''Xpress 200''.<ref>[http://ati.amd.com/products/radeonxpress1250dsk/index.html ATI product page of Xpress 1250]</ref> and industry first native HDMI implementation on motherboards.
*'''[[AMD 700 chipset series]]''' - exclusively for AMD processors, this is a chipset family supporting [[Phenom (processor)|Phenom]] processors and [[AMD Quad FX platform|Quad FX enthusiast platform]] (790FX), enthusiast chipset (790X), [[Integrated Graphics Processor|IGP]] (790GX, 785G, 780G, 740G) and single graphics card variants (770, 740) aimed at mainstream and value computing systems available.
*'''[[AMD 800 chipset series]]''' - exclusively for AMD processors, It includes support for up to six [[Serial ATA#SATA Revision 3.0 (SATA 6Gb/s)|SATA 6.0 Gbit/s]] ports, the C6 power state, which is featured in [[AMD Fusion|Fusion]] processors and [[Advanced Host Controller Interface|AHCI]] 1.2 with SATA [[port multiplier#FIS(Frame Information Structure)–based switching|FIS–based switching]] support. This is a chipset family supporting [[Phenom (processor)|Phenom]] processors and [[AMD Quad FX platform|Quad FX enthusiast platform]] (890FX), [[Integrated Graphics Processor|IGP]](890GX).

In addition to the above chipset ATI has announced that a deal has been struck with [[CPU]] and [[Motherboard]] manufacturers as of 2005, particularly [[Asus]] and [[Intel]], to create onboard 3D Graphics solutions for [[Intel]]'s new range of motherboards that will be released with their range of [[Intel]] [[Pentium M]]-based desktop processors, the [[Intel Core]] and [[Intel Core 2]] processors, the D101GGC and D101GGC2 chipset (codenamed "''Grand County''"<ref>[http://cache-www.intel.com/cd/00/00/32/94/329441_329441.pdf Intel Boxed Desktop Board Quick Guide (December 2006)]</ref>) based on the [[Xpress 200|Radeon Xpress 200]] chipset. However, high-end boards with integrated graphics processor (IGP) will still use [[Intel]] [[Intel GMA|GMA]] [[graphics processing unit|integrated graphics processor]]s. The deal with Intel was deemed to be officially ended with the purchase of ATI Technologies from AMD in July 2006, with Intel announcing [[Silicon Integrated Systems|SiS]] IGP chipset (D201GLY chipset, codenamed "''Little Valley''") for entry-level desktop platform, replacing the "''Grand County''" series chipsets.

===Multimedia and Digital TV products===
*'''[[All-In-Wonder]]''' series - A series of multimedia graphics cards which incorporating TV tuner and [[Radeon]] family [[video card|graphics card]]s onto one add-in card, which, after being seemingly discontinued was relaunched as All-In-Wonder HD on June 26, 2008.
*TV tuners
**'''TV Wonder''' and '''HDTV Wonder''' - a chipset family providing TV reception of various analog TV and digital TV signals ([[PAL]], [[NTSC]], [[ATSC]], [[DVB-T]] and so on) with first generation [[AVIVO]] technology, also supporting [[CableCARD]], and [[QAM tuner|Clear QAM]] technologies.
**'''Theater''' - a family of [[QAM]] and [[Single-sideband modulation|VSB]] demodulators for the Digital Cable ready and [[ATSC Standards|ATSC]] environments.
*'''Remote Wonder''', wireless remote control series for ATI multimedia products. Operates using radio frequency, away from mainstream implementations using [[Infrared#Communications|infrared]].

===Console graphics products===
*'''[[Nintendo GameCube#Technical specifications|Flipper]]''' - The [[Nintendo GameCube]] (codenamed "dolphin" during production) contains a 3D accelerator developed by ''ArtX, Inc'', a company acquired by ATI during the development of the GPU. Flipper is similar in capability to a [[Direct3D]] 7 accelerator chip. It consists of four rendering pipelines, with hardware [[transform and lighting|T&L]], and some limited pixel shader support. Innovatively the chip has 3 [[MiB]] of embedded [[1T-SRAM]] for use as ultra-fast low-latency (6.2 [[nanosecond|ns]]) texture and [[framebuffer]]/[[Z-buffer]] storage allowing 10.4 [[gigabytes|GB]]/second bandwidth (extremely fast for the time). Flipper was designed by members of the [[Nintendo 64]] Reality Coprocessor team who moved from SGI. The Flipper team went on to have a major hand in the development of the [[Radeon 9700]].
*'''[[Xenos (graphics chip)|Xenos]]''' - [[Microsoft]]'s [[Xbox 360]] video game console contains a custom graphics chip produced by ATI, known as "R500", "C1", or more often as ''Xenos''. Some of these features include the embedded DRAM ([[eDRAM]]). The Xenos also features the “True Unified Shader Architecture” which dynamically loads and balances pixel and vertex processing amongst a bank of identically capable processing units. This differs greatly from past-generations PC graphics chips that have separate banks of processors designed for their individual task (vertex/fragment). Another feature presented in Xenos is the hardware [[tessellation#Tessellations and computer graphics|surface tessellation]] to divide a surface into smaller triangles, similar to [[TruForm]] in terms of functionality, which is an advanced feature as it is not presented even in the most up-to-date [[Direct3D#Direct3D 10|DirectX 10]] specification. The recent generation [[Radeon R600]] GPU core inherited most of the features presented in Xenos, except [[eDRAM]].
*'''[[Hollywood (graphics chip)|Hollywood]]''' - Successor to Flipper. Part of [[Nintendo]]'s latest gaming console, [[Wii]].

===Handheld chipsets===
*'''[[Imageon]]''' - [[System-on-a-chip]] (SoC) design introduced in 2002 to bring integrated [[2D computer graphics|2D]] and [[3D computer graphics|3D]] graphics to handhelds devices, cellphones and [[Tablet PC]]s. Current top-of-line product is the Imageon 2298 which includes DVD quality recording and playback, TV output, and supports up to a 12-[[megapixel]] camera, with another line of Imageon products, the 2300 series supporting [[OpenGL]] ES 1.1+ extensions. The Imageon line was rebranded under AMD, after AMD acquired ATI in Q3 2006, as '''AMD Imageon'''.
*'''[[Imageon|Imageon TV]]''' - Announced in February 2006, allowing handhelds devices to receive digital broadcast TV ([[DVB-H]]) signals and enables watching TV programs on these devices, the chipset includes tuner, demodulator, decoder, and a full software stack, operates alongside the [[Imageon]] chip.

Besides full products, ATI has also supplied 3D and 2D graphics components to other vendors, specifically the [[Qualcomm]]<ref>[http://brew.qualcomm.com/bnry_brew/pdf/brew_2007/Tech-303_Ligon.pdf page 10 and 15]</ref> [[MSM7000]] series SoC chips of handheld and upcoming [[Freescale]] i. MX processors<ref>[http://www.dailytech.com/Freescale+Licenses+AMD+Technologies/article8909.htm DailyTech report]. Retrieved September 17, 2007.</ref>. ATI claimed in May 2006, that it had sold over 100 million<ref>[http://www.theinquirer.net/?article=31938 The Inquirer report]</ref> 'cell phone media co-processors', significantly more than ATI's rival NVIDIA, and announced in February 2007 that the firm had shipped a total of 200 million of Imageon products since 2003<ref>[http://www.amd.com/us-en/Corporate/VirtualPressRoom/0,,51_104_543~115795,00.html AMD press release]. Retrieved July 27, 2007.</ref>.

In late 2008, the entire handheld division was sold off to [[Qualcomm]], so there will be no new Imageon products.

===High Performance Computing===
*'''[[AMD FireStream]]''', originally ATI Firestream, and previously rebranded as '''AMD Stream Processor''' for a short period of time, utilizing the [[stream processing]] concept, together with [[Close to Metal]] (CTM) hardware interface.

==ATI graphics drivers==
===Proprietary===
{{Main|ATI Catalyst}}

ATI currently provides proprietary graphics [[Device Driver|drivers]], and also assists development of open source drivers. The proprietary drivers are called ATI Catalyst, and are available for most platforms: [[Windows XP]], [[Windows Vista]], [[Microsoft]] [[Windows 7]], [[Mac OS X]], and [[Linux]]. Linux users can also opt to use open source drivers.

===Open source===
{{Main|Graphics hardware and FOSS#ATI/AMD|l1=Graphics hardware and FOSS}}

Hardware component companies which only provide proprietary drivers have always been urged by the Linux community to open source their drivers, or at least provide the necessary documentation for the community to write their own drivers. In a 2002 interview with AMD official Hal Speed, it was suggested that AMD were strongly considering making the functional part of the ATI drivers open source<ref>[http://www.infoworld.com/article/06/08/02/32OPcurve_1.html 'AMD talks about ATI' at InfoWorld.com]</ref>. However, until the merger with AMD, ATI had no plans to release their graphics drivers as open source code:
{{Quote|Proprietary, patented optimizations are part of the value we provide to our customers and we have no plans to release these drivers to open source. In addition, multimedia elements such as content protection must not, by their very nature, be allowed to go open source.|[http://news.com.com/2061-10791_3-6104655.html ATI statement, August 2006]}}

Since 2007 ATI has cooperated with the development of open source graphics drivers. Although ATI has not made their Catalyst drivers open source, the programming specifications for a number of chipsets and features were published in several rounds. This greatly changed their support of the development of open source graphics drivers, as until that moment only unsupported open source drivers existed. Besides releasing the specifications, ATI also funded the development of new open source drivers, by Novell, for the newest generation of video cards.

==See also==
{{Portal|Companies}}
*[[Advanced Micro Devices|AMD]]
*[[Comparison of ATI chipsets]]
*[[Comparison of ATI Graphics Processing Units]]
*[[Fglrx]] – Linux display driver used for ATI video cards
*[[Radeon]]
*[[Radeon R800]]
*[[Video card]]
*[[Video In Video Out|Video In Video Out (VIVO)]]

===Competing Companies===
*[[Nvidia]]
*[[Matrox]]

==References==
{{Reflist|2}}

==External links==
{{Wikinews|AMD joins forces with ATI}}
{{Commons category|ATI}}
*[http://ati.amd.com/products/ AMD's Graphics Division]
*[http://game.amd.com/ AMD GAME! - AMD's gaming website]
*[http://www.ati.com/companyinfo/milestones/CorporateMilestones.pdf ATI Corporate Milestones document]
*[http://firingsquad.com/features/atihistory/ FiringSquad's History of ATI]
*[http://www.amd.com/us-en/0,,3715_14197_14198,00.html?redir=goBG01 Official AMD ATI Merger Site on AMD Website]

{{ATI}}
{{Home theater PC (application software)}}
{{Coord|43|50|22.175|N|79|22|51.388|W|type:landmark|display=title}}

{{DEFAULTSORT:Ati Technologies}}
[[Category:Advanced Micro Devices]]
[[Category:Companies established in 1985]]
[[Category:Companies based in Markham, Ontario]]
[[Category:Companies formerly listed on NASDAQ]]
[[Category:Graphics hardware companies]]
[[Category:Electronics companies of Canada]]
[[Category:Fabless semiconductor companies]]
[[Category:ATI Technologies| ]]

<!--interwiki-->

[[ar:??? ?? ?? ?????????]]
[[bs:ATI Technologies]]
[[cs:ATI]]
[[da:ATI]]
[[de:ATI Technologies]]
[[es:ATI Technologies]]
[[fa:????????]]
[[fr:ATI Technologies]]
[[gl:ATI Technologies]]
[[ko:ATI ??????]]
[[hr:ATI]]
[[id:ATI Technologies]]
[[it:ATI Technologies]]
[[he:ATI ??????????]]
[[hu:ATI Technologies]]
[[ml:?.??.?. ???????????]]
[[ms:ATI Technologies]]
[[nl:ATI]]
[[ja:ATI Technologies]]
[[no:ATI]]
[[pl:ATI Technologies]]
[[pt:ATI Technologies]]
[[ro:ATI Technologies]]
[[ru:ATI Technologies]]
[[simple:ATI Technologies]]
[[sk:ATI Technologies]]
[[sl:ATI Technologies]]
[[fi:ATI Technologies]]
[[sv:ATI Technologies]]
[[tr:ATI]]
[[uk:ATI Technologies]]
[[vi:ATI Technologies]]
[[zh:ATI????]]</text>
</page>
<page>
<id>590</id>
<title>ATI XGP</title>
<text>{{distinguish2|a concept portable game console, [[XGP|eXtreme Game Player]] (XGP)}}
ATI XGP (e'''X'''ternal '''G'''raphics '''P'''latform) is an external graphics solution for [[Laptop|notebook computers]]. The technology was announced on June 4, 2008 on [[Computex]] 2008 trade show, following the announcement of the codenamed ''[[AMD mobile platform#Puma platform|Puma]]'' notebook platform. 
__NOTOC__
==Development==
Originally reported by Hexus.net as a side project to the R600 series graphics cards. Codenamed ''Lasso'' <ref>[http://www.hexus.net/content/item.php?item=7995 Hexus.Net report], retrieved June 16, 2008</ref>, the project is an external graphics solution using desktop video cards, and data is sent via two cables as defined in PCI-E external cabling specification (version 1.0). The project would later fall into [[development hell]] with unknown development status. In June 2008, near Computex 2008, rumours surfaced over the Internet about AMD is preparing an external graphics solution for notebook computers, but using a proprietary connectivity solution instead. The ATI XGP was officially announced on June 4, 2008 during the course of the Computex 2008 exhibition.

==Technology==
The XGP platform consists of several parts, that includes a mobility Radeon HD graphics card, an external case and a proprietary connectivity solution.

===Graphics===
*Single GPU configuration
**[[Radeon R600#Radeon HD 3800|Mobility Radeon HD 3870]] (M88 core)
***[[AVIVO#AVIVO HD|AVIVO HD]] with [[Unified Video Decoder|UVD]]
***Integrated [[High-bandwidth Digital Content Protection|HDCP]]
**[[Evergreen (GPU family)|Mobility Radeon HD 5870]] (Broadway core)
*[[ATI CrossFire|ATI CrossFire X]] technology (Dual GPU configuration)
**Mobility Radeon HD 3850 X2
**Mobility Radeon HD 3870 X2

===Connectivity===
====Data====
*Proprietary connectivity solution designed in collaboration with [[JAE Electronics]]
**Transfer PCI-E 2.0 signals between XGP and the notebook computer
**PCI-E 2.0 compliant
**8 lanes and 16 lanes option available
**[[Hot swapping|Hot plug]] detection
**AMD has one year exclusivity on the use of the connector <ref>[http://www.tgdaily.com/content/view/37946/135/ TGDaily report]: AMD has a one-year exclusive on the PCIe External connector. Retrieved June 23</ref>
*2 USB 2.0
**For connecting external disc players
**Connected via the signal pairs between the southbridge to the USB hub via the cable

====Visual====
*Supports up to four displays via the following visual outputs:
**[[Digital Visual Interface|DVI-I]]
**[[High-Definition Multimedia Interface|HDMI]]
**Optional [[DisplayPort]]

==Consumer Products==
* Fujitsu-Siemens AMILO GraphicBooster<ref>[http://www.fujitsu-siemens.com/home/products/notebooks/amilo_graphic_booster.html AMILO GraphicBooster - External graphic box for AMILO Notebook Sa 3650 - Fujitsu Siemens Computers]
, retrieved February 18, 2009
</ref>
* Acer DynaVivid

==References==
{{Reflist}}

==External links==
*[http://ati.amd.com/technology/xgp/ ATI XGP Page]
*[http://ati.amd.com/technology/xgp/xgp_technology_brief.pdf ATI XGP Technology Brief]

{{ATI}}

[[Category:ATI Technologies products]]
[[Category:Video cards]]


{{compu-graphics-stub}}

[[de:ATi XGP]]
[[ru:ATI XGP]]</text>
</page>
<page>
<id>610</id>
<title>AUSM</title>
<text>{{for|the New Zealand students' union|AuSM}}
'''AUSM''' stands for Advection Upstream Splitting Method. It is developed as a numerical inviscid flux function for solving a general system of conservation equations. It is based on the upwind concept and was motivated to provide an alternative approach to other upwind methods, such as the Godunov method, flux difference splitting methods by Roe, and Solomon and Osher, flux vector splitting methods by Van Leer, and Steger and Warming. The AUSM first recognizes that the inviscid flux consist of two physically distinct parts, i.e., convective and pressure fluxes. The former is associated with the flow (advection) speed, while the latter with the acoustic speed; or respectively classified as the linear and nonlinear fields. Currently, the convective and pressure fluxes are formulated using the eigenvalues of the flux Jacobian matrices. The method was originally proposed by Liou and Steffen <ref>Liou, M.-S. and Steffen, C., “A New Flux Splitting Scheme,” J. Comput. Phys., Vol. 107, 23-39, 1993.</ref> for the typical compressible aerodynamic flows, and later substantially improved in <ref name="firstName">Liou, M.-S., “A Sequel to AUSM: AUSM+” J. Comput. Phys., Vol. 129, 364-382, 1996.</ref><ref>Wada, Y. and Liou, M.-S., “An Accurate and Robust Flux Splitting Scheme for Shock and Contact Discontinuities,” SIAM J. Scientific Computing, Vol. 18, 633-657, 1997.</ref> to yield a more accurate and robust version. To extend its capabilities, it has been further developed in <ref name="secondName">Liou, M.-S., “A Sequel to AUSM, Part II: AUSM+-up” J. Comput. Phys., Vol. 214, 137- 170, 2006.
</ref><ref>Edwards, J. R., Franklin, R., and Liou, M.-S., “Low-Diffusion Flux-Splitting Methods for Real Fluid Flows with Phase Transitions,” AIAA J., Vol. 38, 1624-1633, 2000.</ref><ref>Chang, C.-H. and Liou, M.-S., “A New Approach to the Simulation of Compressible Multifluid Flows with AUSM+ Scheme,” AIAA Paper 2003-4107, 16th AIAA CFD Conference, Orlando, FL, June 23–26, 2003.</ref> for all speed-regimes and multiphase flow. Its variants have also been proposed<ref>Edwards, J. R. and Liou, M.-S., “Low-Diffusion Flux-Splitting Methods for Flows at All Speeds,” AIAA J., Vol. 36, 1610-1617, 1998.</ref><ref>Kim, K. H., Kim, C., and Rho, O., “Methods for the Accurate Computations of Hypersonic Flows I. AUSMPW+ Scheme,” J. Comput. Phys., Vol. 174, 38-80, 2001.</ref>.

==Features==
The Advection Upstream Splitting Method has many features. The main features are:
*accurate capturing of shock and contact discontinuities
*entropy-satisfying solution
*positivity-preserving solution
*algorithmic simplicity (not requiring explicit eigen-structure of the flux Jacobian matrices) and straightforward extension to additional conservation laws
*free of “carbuncle” phenomena
*uniform accuracy and convergence rate for all Mach numbers.
Since the method does not specifically require eigenvectors, it is especially attractive for the system whose eigen-structure is not known explicitly, as the case of two-fluid equations for multiphase flow.

==Applications==
The AUSM has been employed to solve a wide range of problems, low-Mach to [[hypersonic]] [[aerodynamics]], large eddy simulation and aero-acoustics<ref>Mary, I. and Sagaut, P., “Large Eddy Simulation of Flow Around an Airfoil Near Stall,” AIAA J., Vol. 40, 1139-1145, 2002.</ref><ref>Manoha, E., Redonnet, S., Terracol, M., and Guenanff, G., “Numerical Simulation of Aerodynamics Noise,” ECCOMAS 24–28 July 2004.</ref>, direct numerical simulation<ref>Billet, G. and Louedin, O., “Adaptive Limiters for Improving the Accuracy of the MUSCL Approach for Unsteady Flows,” J. Comput. Phys., Vol. 170, 161-183, 2001.</ref>, multiphase flow<ref>[http://www.crss.ucsb.edu/ Center for Risk Studies and Safety], University of California (Santa Barbara)</ref>, galactic relativistic flow<ref>Wada, K. and Koda, J., “Instabilities of Spiral Shock – I. Onset of Wiggle Instability and its Mechanism,” Monthly Notices of the Royal Astronomical Society, Vol. 349, 270-280 (11), 2004.</ref> etc.

==References==
<references/>

==See also==
*[[Euler equations]]
*[[Finite volume method]]
*[[Flux limiter]]
*[[Godunov's theorem]]
*[[High resolution scheme]]
*[[Numerical method of lines]]
*[[Sergei K. Godunov]]
*[[Total variation diminishing]]

{{DEFAULTSORT:Ausm}}
[[Category:Fluid dynamics]]
[[Category:Numerical differential equations]]</text>
</page>
<page>
<id>617</id>
<title>AVG Technologies</title>
<text>{{Infobox Company
 | name             = AVG Technologies
 | formerly         = Grisoft
 | logo             = [[File:Avglogo.PNG|75px|AVG Logo]][[File:AVG wordmark.png|100px|AVG Wordmark]]
 | type             = [[privately held company|Private]]
 | genre            =
 | foundation       = [[Czech Republic]] (1991)
 | founder          = Jan Gritzbach<br />Tomáš Hofer
 | location_city    = [[Brno]]
 | location_country = [[Czech Republic]]
 | area_served      = Worldwide
 | key_people       = J.R. Smith, <small>[[CEO]]</small><br />Dale Fuller, <small>[[Chairman]]</small><br />Karel Obluk, <small>[[Chief technical officer|CTO]]</small><br />John Little, <small>[[Chief Financial Officer|CFO]]</small><br />Roger Thompson, <small>[[CRO]]</small>
 | industry         = [[Computer software]]
 | products         = [[Antivirus software]]
 | services         =
 | revenue          =
 | operating_income =
 | net_income       =
 | owner            =
 | num_employees    = 663 worldwide
 | divisions        =
 | subsid           =
 | slogan           = ''Tough on threats. Easy on you.''
 | homepage         = [http://www.avg.com/ www.avg.com]
 | footnotes        =
 | intl             =
}}

'''AVG Technologies''' (formerly named '''Grisoft''') is a [[privately held company|privately-held]] [[Czech Republic|Czech]] [[Company (law)|company]] formed in 1991 by Jan Gritzbach and Tomas Hofer, with corporate offices in [[Europe]] and the [[United States]]. The company specializes in computer security [[Computer software|software]]. 

==Products==
{{main|AVG (software)}}
===Home security===
* AVG Anti-Virus 2011 (AVG Anti-Virus, Anti-Spyware, Anti-Rootkit, Web Shield, LinkScanner)
* AVG Internet Security 2011 (as above plus Firewall, Anti-Spam, PC Tune Up and Identity Protection and System Tools)
* AVG PC Tuneup 2011

===Business security===
* AVG Anti-Virus Business Edition 2011 (Networkable AVG Anti-Virus and Firewall with AVGADMIN, built in Rescue CD)
* AVG Internet Security Business Edition 2011 (Networkable AVG Anti-Virus, Anti-Spyware, Firewall and Anti-Spam with AVGADMIN, Identity Protection, built in Rescue CD, Server level Anti-Spam)
* AVG File Server Edition 2011
* AVG E-mail Server Edition 2011
* AVG Linux Server Edition

===Others===
* AVG Anti-Virus Free Edition 2011 (Free anti-virus, anti-spyware and LinkScanner software. Fewer features than the paid versions.)
* AVG Anti-Virus Free Edition for Linux
* AVG LinkScanner Free Edition 2011 (for Windows and Mac)
* DroidSecurity Antivirus Free for Android Devices
* DroidSecurity Antivirus Pro for Android Devices

==History==
In 2001, Jan Gritzbach decided to sell Grisoft to Benson Oak Capital Acquisitions. Four years later, Benson Oak sold a 65% share in the company to Intel Capital and Enterprise Investors for $52 million.<ref>[http://www.avg.com/40965 GRISOFT "Celebrates 15 Years of Internet Security Success", AVG Technologies bulletin, 15 December 2006]</ref><ref>[http://www.grisoft.com/doc/314/lng/us/tpl/tpl01 Intel buys part of Grisoft]</ref><ref>[http://www.avg.com/314 Intel buys part of AVG Technologies]</ref> 

On April 19, 2006, Grisoft acquired the German company [[ewido Networks]], an anti-spyware software manufacturer, and incorporated ewido's features into new versions of AVG software.<ref>[http://www.avg.co.uk/30868 AVG Technologies announces release of ewido Anti-Spyware]</ref><ref>[http://www.avguk.com/doc/30868/lng/uk/tpl/tpl01 Grisoft announces release of ewido Anti-Spyware]</ref> 

On November 6, 2006, [[Microsoft]] announced that AVG Security products would be available directly from the Windows Security Center in Windows Vista.<ref>[http://www.avguk.com/doc/39275/lng/uk/tpl/tpl01 Microsoft incorporates AVG into the Vista Security Center]</ref> Since June 7, 2006, the AVG software has also been used as an optional component of GFI MailSecurity, produced by [[GFI Software]].<ref>[http://kbase.gfi.com/showarticle.asp?id=KBID002652 What's new in GFI MailSecurity for Exchange/SMTP 10?]</ref> 

On December 5, 2007, Grisoft announced the acquisition of Exploit Prevention Labs, developer of the LinkScanner safe surfing technology. <ref>[http://www.grisoft.com/doc/80935/ww/crp/0 AVG Acquires Exploit Prevention Labs, Developer of LinkScanner Safe Surfing Technology].</ref>

In February 2008, Grisoft was officially renamed AVG Technologies. This change was made to increase the effectiveness of their marketing activities.<ref>[http://www.grisoft.com/doc/89672/us/crp/0 AVG Anti-Virus and Internet Security - Leading Internet security vendor, Grisoft, changes name to AVG Technologies]</ref>

In January 2009, AVG announced their plans to acquire Sana Security are finalized. Plans to integrate Sana's technologies in their free consumer product, [[AVG (software)|AVG Anti-Virus]], are still under consideration, according to JR Smith, AVG's chief executive. Sana Security's developed technologies are currently licensed to Symantec.<ref>[http://www.pcmag.com/article2/0,2817,2338797,00.asp]</ref><ref>[http://news.zdnet.co.uk/security/0,1000000189,39591100,00.htm]</ref><ref>[http://www.crn.com/security/212900313]</ref>

On October 5, 2009, [[TA Associates]] announced that they bought a minority stake in AVG Technologies for more than $200 million.<ref>http://www.ta.com/news/news_detail.asp?id=185</ref>

On June 9, 2010, AVG announced the acquisition of North Carolina-based Walling Data, a North America security software distribution that has distributed AVG offerings across the United States since 2001<ref>http://www.avg.com/us-en/press-releases-news.ndi-230728</ref>

On November 10, 2010, AVG announced the acquisition of [[Tel Aviv]]-based DroidSecurity, a company that specializes int the field of mobile security solutions, for [[Android (operating system)|Android]] devices. Upon completion of the acquisition DroidSecurity will become a wholly-owned subsidiary of AVG and DroidSecurity CEO and co-founder, Eran Pfeffer, will become the general manager of AVG’s Mobile Solutions Team.<ref>http://www.avg.com/eu-en/avg-acquires-droidsecurity</ref>

===Partnerships===
On July 1, 2010 AVG partnered with [[Opera Software]] to provide malware security in their web browser [[Opera (web browser)|Opera]], the protection was added to the existing Fraud Protection technology ([[Netcraft]] and [[PhishTank]] from [[Haute Secure]]).<ref>http://www.dailytech.com/Opera+106+The+Worlds+Fastest+Stable+Browser+Tested+vs+IE+9/article18909.htm</ref>

On August 20, 2010 AVG entered into partnership with MokaFive to secure desktop virtualisation solutions. The partnership adds a critical security layer to the virtual desktop marketplace, as more enterprise companies are turning to desktop virtualization as a secure solution for bring your own computer (BYOC) and work from home initiatives for employees. <ref>http://rfpconnect.com/news/2010/8/20/avg-and-mokafive-join-forces-to-secure-virtual-desktops</ref>

==See also==
*[[AVG (software)]]

== References ==
{{reflist}}

==External links==
*[http://www.avg.com AVG Technologies] - Official site and AVG download centre.
*[http://blogs.avg.com AVG Blog] - Official AVG Blogs.
*[http://www.droidsecurity.com DroidSecurity] Antivirus and Security Apps for Android Devices

{{DEFAULTSORT:Avg Technologies}}
[[Category:Software companies of the Czech Republic]]
[[Category:Companies established in 1991]]
[[Category:Privately held companies]]
[[Category:Computer security software companies]]

[[cs:AVG Technologies]]
[[es:AVG Technologies]]
[[ja:AVG Technologies]]
[[pl:Grisoft]]
[[pt:AVG Technologies]]
[[ro:AVG Technologies]]
[[sv:AVG Technologies]]</text>
</page>
<page>
<id>647</id>
<title>A Sharp (.NET)</title>
<text>{{Correct title|title=A# (.NET)|reason=hash}}

'''A#''' is a port of the [[Ada (programming language)|Ada programming language]] to the [[.NET Framework|Microsoft .NET]] platform.  A# is freely distributed by the Department of Computer Science at the [[United States Air Force Academy]] as a service to the [[Ada programming language|Ada]] community under the terms of the [[GNU General Public License]].

[[AdaCore]] has taken over this development, and announced "GNAT for .NET", which is a fully supported .NET product with all of the features of A# and more.<ref>Cited by Martin Carlisle (USAFA) http://asharp.martincarlisle.com/ and see also http://www.adacore.com/2007/09/10/adacore-first-to-bring-true-net-integration-to-ada/</ref>

== References ==
{{reflist}}

== External links ==
* [http://asharp.martincarlisle.com A# for .NET]
* [http://articleworld.org/A_Sharp_%28.NET%29 Ada Sharp .NET] Programming environment

[[Category:Ada programming language]]
[[Category:.NET programming languages]]
{{DotNET}}
{{compu-lang-stub}}

[[ar:??? ????]]
[[ko:A ??]]
[[ru:A Sharp]]
[[fi:A sharp]]</text>
</page>
<page>
<id>648</id>
<title>A Sharp (Axiom)</title>
<text>{{Correct title|title=A# (Axiom)|reason=hash}}

'''A#''' (A sharp) is an [[object-oriented (programming)|object-oriented]] [[functional (programming)|functional]] [[programming language]] distributed as a separable component of Version 2 of the [[Axiom computer algebra system]]. A# types and functions are [[first-class value]]s and can be used freely in conjunction with an extensive library of [[data structure]]s and other mathematical abstractions. A key design guideline for A# was suitability of compilation to portable and efficient machine code.

Development of A# has now switched to the [[Aldor programming language]].

There is both an A# [[optimising compiler]] and an A# [[intermediate code]] interpreter. The compiler can produce any of:
* stand-alone [[executable program]]s
* [[code library|object libraries]] in native [[operating system]] formats
* portable [[bytecode]] libraries
* [[C (programming language)|C]] source code, or
* [[Lisp programming language|Lisp]] [[source code]].

Ports have been made to many different architectures (16, 32, and 64 bit):
* [[RS/6000]]
* [[SPARC]]
* [[DEC Alpha|Alpha]]
* [[IA-32]]
* [[Intel 80286|Intel 286]]
* [[Motorola 680x0]]
* [[System/370]]

And to several operating systems:
* [[Linux]]
* [[AIX operating system|AIX]]
* [[SunOS]]
* [[HP-UX]]
* [[NeXTSTEP|NeXT]]
* [[Mach kernel|Mach]]
* plus a variety of other [[Unix]] systems
* [[OS/2]]
* [[DOS]]
* [[Microsoft Windows]]
* [[Virtual Memory System|VMS]]
* [[VM/CMS]]

The following C compilers are supported: [[GNU Compiler Collection|gcc]], Xlc, [[Sun Studio Compiler Suite|Sun Studio Compiler]], Borland, Metaware and MIPS C.

{{FOLDOC}}


{{compu-lang-stub}}

[[Category:Functional languages]]</text>
</page>
<page>
<id>663</id>
<title>Aaron Doral</title>
<text>{{Infobox character
| name        = Number Five
| series      = [[Battlestar Galactica]]
| image       = [[File:BattlestarGalactica 1x06 Litmus.jpg|250px]]
| caption     = 
| first       = [[Battlestar Galactica (2003 miniseries)|Miniseries]]
| last        = 
| portrayer   = [[Matthew Bennett]]
| species     = [[Cylon (Battlestar Galactica)#Humanoid Cylons|Humanoid Cylon]]
| gender      = [[Male]]
| colour =  #fc0
| colour text = #000
}}

'''Aaron Doral''' ('''Number Five''') is a [[fictional character]] from the reimagined ''[[Battlestar Galactica (re-imagining)|Battlestar Galactica]]'' series.

Doral is a humanoid [[Cylon (Battlestar Galactica)|Cylon]] (designated model Number Five)<ref>[[Downloaded (Battlestar Galactica)]]</ref> who first appeared as a civilian public relations specialist aboard ''Galactica'' just prior to the Cylon attack on the Colonies. Through conversation with the Cylon agent [[Number Six (Battlestar Galactica)|Number Six]], [[Gaius Baltar|Dr. Gaius Baltar]] claims Doral is a Cylon spy and has him thrown in the brig. Gaius does so to protect himself and justify the finding of a Cylon device he has noticed, Doral actually being a spy is mere coincidence. Doral emphatically denies being a Cylon. However, not willing to take a chance, Doral is abandoned by [[William Adama|Commander Adama]] on the Ragnar Anchorage weapons depot. At the time of abandonment, Doral exclaims his innocence, and claims to be from Oasis, outside Caprica City, and having been on Kobol College on Gemenon. The audience is shown that Baltar was correct in assuming Doral a Cylon, four copies of Doral, along with Number Six, [[Leoben Conoy]], and [[Number Eight (Battlestar Galactica)|Sharon]] come to his rescue. (In the novelization, Doral is a [[sleeper agent]] - he does not know he is a Cylon until the others come for him at Ragnar Anchorage.)

Doral appears again on Cylon-occupied [[List of Battlestar Galactica (reimagining) locations#Caprica|Caprica]] curiously monitoring the situation developing between Sharon and [[Karl Agathon|Karl "Helo" Agathon]]. He initially decides that Sharon cannot be trusted, and orders Number Six to deal with her. Once Doral discovers that Sharon is pregnant, he states the child is a miracle, and must be protected at all costs. The discovery also leads to his suggesting a major tactical change, although the details of this new plan, as well as whatever changes were made from the original, have as yet to be clearly defined in the series.

The Doral Cylons seem to act more covertly, having an unassuming "average" appearance in order to better blend in with more trivial background matters instead of taking more noticeable positions of authority and purpose. He seems to have a position of authority among the Cylons, acting as overseer, and having a hand behind their decision making and tactical planning. This personalization is contradicted, however, in the special TV movie "[[Battlestar Galactica: The Plan|The Plan]]," in which a copy of Cavil berates a confused Doral copy (wearing clothing nearly identical to the first copy encountered by the Colonials) for his lack of disguise and caution while wandering the halls of Galactica. A later scene shows a small group of Doral copies assigned to menial labor on occupied Caprica, doing work they complain is below them and should be handled by centurions. Likewise, in the episode "[[Downloaded (Battlestar Galactica)|Downloaded]]," a copy of Doral can be seen serving drinks to other humanoid Cylons. These scenes seem to imply the Doral models are of lower intelligence than other Cylon models, and possess less authority.

The Doral Cylons appear to be more fanatical, militant and cold-hearted than the other humanoid Cylons encountered thus far, short of the often vile, overtly vicious [[Brother Cavil]]. They calmly discuss the genocide of mankind (stating on one occasion "They [humans] would have destroyed themselves anyway. They deserve what they got."), and unhesitatingly conducting (on at least one occasion) a suicide bombing aboard ''Galactica''<ref>[[Litmus (Battlestar Galactica)|Litmus]]</ref>. On the other hand, Doral was highly critical of the human suicide bombers in "[[Occupation (Battlestar Galactica)|Occupation]]" who inflicted Cylon casualties and fatalities, lambasting them for a 'lack of nobility'.

In "[[Torn(Battlestar Galactica)|Torn]]" a Number Eight accuses Doral of "barely even being able to say [God's] name."

== References ==

{{reflist}}

== External links ==

* [[BattlestarWiki:Number Five|Number Five]] at the [[Battlestar Wiki]].

{{GalacticaCharacters}}

{{DEFAULTSORT:Doral, Aaron}}
[[Category:Cylons]]
[[Category:Fictional secret agents and spies]]
[[Category:Fictional cyborgs]]
[[Category:Fictional robots]]
[[Category:Fictional clones]]

[[fr:Numéro Cinq (Battlestar Galactica)]]
[[pl:Aaron Doral]]</text>
</page>
<page>
<id>672</id>
<title>Abated</title>
<text>:''See also, [[Abatement]].''
'''Abated''', an ancient technical term applied in [[masonry]] and [[metal]] work to those portions which are sunk beneath the surface, as in inscriptions where the ground is sunk round the letters so as to leave the letters or ornament in relief.
{{Wikisource1911Enc|Abated}}
''From [[1911 Encyclopædia Britannica]]''

[[Category:Construction]]
[[Category:Masonry]]</text>
</page>
<page>
<id>686</id>
<title>Ability Online</title>
<text>{{Notability|date=April 2010}}
'''Ability Online''' is a [[Canada|Canadian]] online community for children and young adults facing any sort of [[disability]] (intellectual or physical), chronic illness, or other social challenge. The site offers a protected and nurturing environment where these children can overcome the social isolation often associated with having such challenges, and connect with friends, mentors, homework tutors and job search coaches. 

The site was founded in 1991 by [[Arlette Lefebvre|Dr. Arlette Lefebvre]] (aka "Dr. Froggie") from the [[Hospital for Sick Children]] in [[Toronto]], [[Ontario]], and Brian Hillis with the goal of helping to inspire children to feel good about themselves, to understand that there are others who have faced (and overcome) similar challenges, and to provide the social networks and skills required to help them integrate more fully into their communities.

Membership is open to kids of all ages and their families and caregivers, and is free of charge. Members are manually screened and verified prior to being given access to the site, and all public messages on the site are monitored by police-screened volunteers. 

==External links==
* [http://www.ablelink.org/ Ability Online]

[[Category:Bulletin board systems]]
[[Category:Virtual communities]]


{{website-stub}}
{{toronto-stub}}</text>
</page>
<page>
<id>687</id>
<title>Ability Plus</title>
<text>[[Image:AbilityPlus3 0.png|thumb|alt=Screen shot of Ability Plus 3.0|Screen shot of Ability Plus 3.0]]'''Ability Plus''' is an integrated software package written for DOS in the early 80s. Development ceased in 1995 with the last build made in November 1997.  It was succeeded by Ability Office on Windows, described below.

Ability combined write, spreadsheet, database, graphing and communication functions in a single interface called the Library Screen. The main modules were written from the ground up to share as much code as possible so that, for example, a field in the write or database module would call on the same recalculation engine as the spreadsheet and the display and print routines were common to all.

Despite lack of development for over a decade, Ability Plus 3.0, the last version, will still run quite happily under a [[Windows 7]] command prompt.

==Marketing History==
Xanaro Technologies, in Toronto, Ontario, initially sought to market Ability<ref name="xanaro">[http://www.faqs.org/abstracts/Business/IBM-Office-System-May-Outstrip-Competition-DDB-Left-Holding-Atari-IOU.html  faqs.org], Business abstract 1984.</ref> in 1984. After a business reorganization at the request of the investors, the product was taken over by Migent Inc, Incline Village, Nevada, around 1984/85 and released as Ability 1.2 in 1985.

A new version called Ability Plus was released in 1987 by Migent, that saw the product translated into a French, German, Spanish, Italian, Dutch and other European languages.

Around this time in Europe, Ability 1.2 and Ability Plus 1.0 were widely bundled with the [[Amstrad 1512]] and 1640 personal computers. In 1987 Ability Plus won the Barclays Bank British Micro Computing Award.

Migent Inc had several products, including the first "pocket modem", but fell into financial difficulty for reasons largely unrelated to Ability (for example, see Migent vs [[Ashton-Tate]]<ref name="emeraldbay">[http://corphist.computerhistory.org/corphist/view.php?s=documents&id=899&PHPSESSID=ccd241...  Corporate Histories Collection]</ref>) and eventually reversed into LANware Inc, Markham, Canada in 1989<ref name="lanware">[http://www.cbronline.com/news/migent_software_plans_to_reverse_itself_into_lanware CBR News], April 1989.</ref>. Migent (UK) Ltd, based in London, continued for a few more years, eventually closing in 1991.

Later on in 1991, a new company was set up in the UK, [[Ability Plus Software|Ability Plus Software (UK) Ltd]], and it joined forces with LANware, with new funding, to develop and market a new version of Ability Plus (version 2.0) which was released in 1992 and then version 3.0 in 1995.

By this time, the popularity of DOS based programs was in decline and in addition, Ability Plus suffered from the lack of development investment in the period following the launch of version 1.0 (almost no development took place from 1988 to 1991).

==Development==
Ability was originally developed by a team all of whom came from the University of Waterloo, Ontario, Canada<ref name="waterloo">[http://slashdot.org/comments.pl?sid=84426&cid=7373969 Slashdot ], 2003 thread.</ref>. By the time of Ability Plus, the majority of the code was in C with a small amount of assembly.

The following list of contributors is lifted directly from the Ability Plus line of source code, in approximately chronological order, with given year showing an earliest date for "first appearance":  (1984) Ashok Patel, Tracey Allen, Andrew Forber, Richard B. McMurray, Tom Keith, Mike Gore, Drew Sullivan, Tom Dressing, David (Collier-)  Brown, Karen Banks, (1986) Michael Smith, Rita Khan, Pete Sketch, (1991) Phil Roach, Mike King, Mike Young, J Raymond, Vassil Stoilov, George Georiev.

==A Windows Version?==
In the early 1990s, some thought was given to making a Windows version of Ability Plus, but the difficulties in fashioning a Windows program from DOS code led to the decision to start from scratch. The outcome of this line of development was [[Ability Office]], and although it shares no source code with the Ability Plus, an attempt was made to follow some of the design principles of the original such as shared code and a common recalculation engine.

==References==
<references />

==External links==
*[http://www.ability.com/ Ability Plus Software]
*[http://www.ability.com/support/dos/ab3.php Download Ability Plus], for the curious, full working download of Ability Plus 3.0

[[Category:Office suites]]
[[Category:DOS software]]</text>
</page>
<page>
<id>690</id>
<title>Ablative case</title>
<text>{{about||the physical process|Ablation|the spacecraft technology|Ablative armor}}

In [[linguistics]], '''ablative case''' ([[list of glossing abbreviations|abbreviated]] {{sc|'''abl'''}}) is a name given to [[grammatical case|cases]] in various languages whose common characteristic is that they mark motion away from something, though the details in each language may differ. The name "ablative" is derived from the [[Latin]] ''ablatus'', the (irregular) perfect passive participle of ''auferre'' "to carry away".

==Indo-European languages==
===Latin===
{{Main|Ablative (Latin)}}
The [[Latin]] ablative case (''ablativus'')is mainly used [[adverb]]ially to modify [[verb]]s. It has 15 uses, descending from three [[Proto-Indo-European language|Proto-Indo-European]] cases: ablative (from), instrumental (with), and locative (in/at). The ablative is sometimes called the [[adverbial case]], since phrases in the ablative can be translated as [[adverb]]s: ''magna (cum) celeritate'' can be translated as "with great speed" or "very quickly."

===Greek===
In [[Ancient Greek]], the functions of the ablative case were taken by the [[genitive case|genitive]], so that the genitive has functions belonging to the [[Proto-Indo-European language|Proto-Indo-European]] genitive and ablative cases.<ref>[[Herbert Weir Smyth]]. ''Greek Grammar''. par. 1279: composite or mixed cases.</ref> The genitive case with the prepositions ?p? ''apó'' "away from" and ??/?? ''ek/ex'' "out of" is an example.

===Albanian===
The ablative case is found in Albanian where it is the fifth case and is called "mënyra rrjedhore."

===Sanskrit===
The ablative case in Sanskrit is the fifth case (panchami) in the grammar, and has similar function to that of Latin.  

Sanskrit nouns in this case often refer to a subject "out of" which or "from" whom something (an action, an object) has arisen or occurred. 

E.g. ''patram '''vrikshaat''' patati'' "the leaf falls '''from the tree'''".

This case is also used for nouns in several other senses, eg, where the action occurs "because of" or "without" a certain noun; nouns indicating distance or direction.

===Armenian===
In the Western Armenian language, the ablative case is rendered by the suffix ''-e'' (indefinite) or ''-en'' (definite).

:''Mart'' - man
:''Marten'' - from the man
:''Marte'' - from (a) man

:''Doon'' - house
:''D'nen'' - from the house
:''D'ne'' - from (a) house

In Eastern Armenian, the suffix ''-its'' is used for both definite and indefinite nouns.

''Mard-'' man  
''Mardits-'' from man

''Toon-'' house 
''T'nits-'' from house

Both suffixes are derived from Classical Armenian. The Western suffix ''-e'' is from the Classical singular and the Eastern suffix ''-its'' is from the Classical plural; both have been generalized for singular and plural in the dialects that use them.

In Armenian, the ablative case has several uses.
*Its principal function is to show motion away from a point in space or time.
**''KAGHAKEN katsi.''  -  I came FROM THE CITY. (Eastern Armenian;  ''KAGHAKITS gnets'')
**''ASTEGHEN heroo g'abrei.''  -  I used to live far FROM HERE.  (Ea.  ''ASTEGHITS heroo ei b'nakvoom'')

*The case also shows the agent when used with the passive voice of the verb.
**''INE misht g' sirveis.''  -  You were always loved BY ME.   (Ea. ''INDZITS misht eis sirvoom'')
**''AZAD'CHNEREN azadetsank.''  -  We were freed BY THE LIBERATORS. (Ea.  ''AZATOGHNERITS azatfetsink'')

*The ablative case is also important to comparative statements in colloquial Armenian.
**''Inch MEGHREN anoosh eh?''  -  "What is sweeter THAN HONEY?" (proverb)   (Ea.  ''Inch MEGHRITS e anoosh?'')
**''Mariam EKHPEREN b'zdig eh.''  -  Mary is smaller (younger) THAN HER BROTHER.  (Ea.  ''Maro AKHBERITS e bakas'')
**In this use, the ablative can also be used with infinitives and participles.
***''Tooz hamdesel e lav DESNALE.''  -  Figs are better to taste THAN TO SEE.  (Ea.  ''T'zner hamtesel e laf TESNELITS'')

*The ablative case is also important to case government with postpositions.
**''INE var''  -   Below ME  (Ea.  ''INDZITS var'')
**''KEZME ver'' -  Above YOU  (Ea.  ''KEZITS ver'')
**''ANONTSME verch'' - After THEM   (Ea.  ''N'RANITS verj'')
**''MEZME arach'' -  Before US   (Ea.  ''MEZNITS araj'')

==Uralic languages==
===Finnish===
In [[Finnish language|Finnish]], the ablative case is the sixth of the locative cases with the meaning "from, off, of", e.g. ''pöytä – pöydältä'' "table – off from the table". It is an outer locative case, used just as the [[adessive]] and [[allative]] cases to denote both being on top of something and "being around the place" (as opposed to the inner locative case, the [[elative]], which means "from out of" or "from the inside of"). In the locative meaning, the receding object was near the other place or object, not inside it.

The Finnish ablative is also used in time expressions to indicate start times as well as with verbs expressing feelings or emotions.

The Finnish ablative has the ending -lta or -ltä according to the regular rules of [[vowel harmony]].

Usage

* away from a place

::Katolta
:::Off the roof

::Pöydältä
:::Off the table

::Rannalta
:::From the beach

::Maalta
:::From the land

::Mereltä
:::From the sea

* to stop some activity with the verb lähteä

::lähteä tupakalta
:::stop smoking (in the sense of putting out the cigarette one is smoking now; literally 'leave from the tobacco')
::lähteä hippasilta
:::stop playing the game of tag (hippa=tag, olla hippasilla=playing tag)

* to smell/taste/feel/look/sound like something

::haisee pahalta
:::smells bad
::maistuu hyvältä
:::tastes good
::tuntuu kamalalta
:::feels awful
::näyttää tyhmältä
:::looks stupid
::kuulostaa mukavalta
:::sounds nice

===Hungarian===
The ablative case in Hungarian is used to describe '''movement away from a solid object'''.  For example, if one is walking away from a friend one could say: 
''a barátom'''tól''' jövök'' - I am coming (away from) my friend.

Note that this case in this example implies that the user was ''next to'' the solid object, and not inside it.  This means that if one said
''a postától jövök'' it would mean one is coming from being stood ''next to'' the post office, and that you were not inside the building. 

The application of [[vowel harmony]] gives two different suffixes:  '''-tól''' and '''-tol'''.  These are applied to back- and front-vowel words respectively.

Its partners for movement towards a solid object and for being next to that solid object are the [[allative case]] and the [[adessive case]] respectively.   Its partners that correspond to movement away from, or out of, something are the [[delative case]] (for movement from a surface or from a Hungarian city) and the [[elative case]] (for movement out of a container or from out of an international city).

==Altaic languages==
===Azeri===

The ablative in [[Azerbaijani language|Azeri]] (''{{Lang|az|çixisliq hal}}'') is expressed through the suffixes ''-dan'' or ''-d?n''. Examples:

Ev - ev'''d?n'''
<br>''House - from/off the house''

Aparmaq - aparmaq'''dan'''
<br>''To carry - from/off carrying''

===Turkish===
The ablative in [[Turkish language|Turkish]] (''-den hali'' or ''uzaklasma hali'') is expressed through the suffixes ''-den'', ''-dan'', ''-ten'', or ''-tan''. Examples:

Ev - ev'''den'''
<br>''House - from/off the house''

At - at'''tan'''
<br>''Horse - from/off the horse''

Tasimak - tasimak'''tan'''
<br>''To carry - from/off carrying''

Ses - ses'''ten'''
<br>''Sound/volume - from/off sound/volume''

<br>In some situations simple ablative can have a ”because of” meaning, in this situations ablative + ”dolayi” (because of) preposition is optional. 

Yüksek sesten (dolayi) rahatsiz oldum. /  ''I was uneasy because of high volume. ''

==External links==
*[http://www.sil.org/linguistics/GlossaryOfLinguisticTerms/WhatIsAblativeCase.htm What is the ablative case?]
*[http://www.hungarianreference.com/Nouns/tól-tol-ablative.aspx Ablative case in Hungarian]

== References ==
{{reflist}}

{{Grammatical cases}}

{{DEFAULTSORT:Ablative Case}}
[[Category:Grammatical cases]]

[[bn:?????? ????]]
[[bar:Ablativ]]
[[br:Troad ablativel]]
[[bg:???????]]
[[ca:Cas ablatiu]]
[[cs:Ablativ]]
[[da:Ablativ]]
[[de:Ablativ]]
[[es:Caso ablativo]]
[[eo:Ablativo]]
[[ext:Ablativu]]
[[fr:Ablatif]]
[[ga:Tuiseal ochslaíoch]]
[[gl:Ablativo]]
[[io:Ablativo]]
[[id:Ablativus]]
[[it:Ablativo]]
[[la:Ablativus]]
[[lt:Abliatyvas]]
[[hu:Határozói eset]]
[[mt:Ablativ]]
[[nl:Ablatief]]
[[ja:??]]
[[no:Ablativ]]
[[nn:Ablativ]]
[[pl:Ablatyw]]
[[pt:Caso ablativo]]
[[ro:Cazul ablativ]]
[[ru:???????]]
[[sk:Ablatív]]
[[sr:???????]]
[[fi:Ablatiivi]]
[[sv:Ablativ]]
[[vec:Ablativo]]
[[zh:??]]</text>
</page>
<page>
<id>696</id>
<title>About Time (book)</title>
<text>{{unsourced|date=September 2010}}
'''''About Time''''' (ISBN 0-684-81822-1) is the second [[book]] written by [[Paul Davies]], regarding the subject of [[time]].  The intended audience is the general public, rather than science academics.

''About Time'' explores selected mysteries of [[spacetime]], following on from [[Albert Einstein]]'s [[theory of relativity]], which Davies believes does not fully explain time as humans experience it. The author explains <blockquote>
Important though Einstein's time turned out to be, it still did not solve "the riddle of time".
</blockquote>

The book delves into the nature of [[metaphysics]], time, motion and [[gravity]], covering a wide range of aspects surrounding the current [[cosmological]] [[debate]], across 283 pages in great detail. It includes an [[Index (publishing)|index]], a [[bibliography]], and numerous [[diagram]]s.

==See also==
*[[Basic introduction to the mathematics of curved spacetime]]
*[[Sense of time]]
*''[[The Mind of God]]''

[[Category:1995 books]]
[[Category:Science books]]
[[Category:Physics books]]


{{science-book-stub}}

[[it:I misteri del tempo]]</text>
</page>
<page>
<id>698</id>
<title>Aboutness</title>
<text>{{Citation style}}
'''Aboutness''' is a term used in library and information science (LIS), linguistics, philosophy of language, and philosophy of mind. In LIS, it is often considered synonymous with [[subject (discourse)]]. In philosophy it has been often considered synonymous with [[intentionality]], perhaps since [[John Searle]] (1983). 

R. A. Fairthorne (1969) is credited with coining the exact term "aboutness," which became popular in LIS since the late 1970s, perhaps due to arguments put forward by [[William John Hutchins]] (1975, 1977, 1978). Hutchins argued that "aboutness" was to be preferred to "subject" because it removed some epistemological problems. Hjørland (1992, 1997) argued, however, that the same epistemological problems also were present in Hutchins's proposal, why "aboutness" and "subject" should be considered synonymous. 

While information scientists may well be concerned with the literary aboutness (John Hutchins, 1975, 1977, 1978), philosophers of mind and psychologists with the psychological or [[intentionality|intentional]] aboutness (John Searle, 1983) and [[language of thought]] (Jerry Fodor, 1975), and [[semantic externalism|semantic externalists]] with the external state of affairs (Hilary Putnam, 1975). These seminal perspectives are respectively analogous to [[C. K. Ogden|Ogden]] and [[I. A. Richards|Richards]]' ''literary, psychological, and external contexts'' (1923), as well as [[Karl Popper]]'s ''World 1, 2, and 3 (1977). 

In linguistics, aboutness is simply meaning, the end of language. In psychology, it is [[intentionality]]. In [[psycholinguistics]] or [[cognitive linguistics]], it is [[language of thought]] in vogue, or something like that.

==Verbal context==
{{Empty section|date=July 2010}}
==Mental context==
{{Empty section|date=July 2010}}
==Original context==
{{Empty section|date=July 2010}}
==See also==
* [[Subject matter]]
* [[Content analysis]]
* [[Theme and rheme]]
* [[Intentionality]]
* [[Language of thought]]

==Literature==
* Furner, J. (2006). "The ontology of subjects of works." ''ASIS&T conference''. http://polaris.gseis.ucla.edu/jfurner/papers/furner-06asist-b-ppt.pdf
* Hjørland, B. (2001). "Towards a theory of aboutness, subject, topicality, theme, domain, field, content. . . and relevance." ''Journal of the American Society for Information Science and Technology, 52''(9), 774–778.
* Bruza, P. D., Song, D. W., & Wong, K. F. (2000). "Aboutness from a commonsense perspective." ''Journal of the American Society for Information Science, 51''(12), 1090-1105. Available at: http://people.kmi.open.ac.uk/dawei/papers/aboutness-aista00.pdf
* Campbell, G. (2000a). "Aboutness and meaning: How a paradigm of subject analysis can illuminate queer theory in literary studies." IN: ''CAIS 2000. Canadian Association for Information Science: Proceedings of the 28th Annual Conference''. http://www.slis.ualberta.ca/cais2000/campbell.htm
* Campbell, G. (2000b). "Queer theory and the creation of contextual subject access tools for gay and lesbian communities." ''Knowledge Organization, 27''(3), 122-131.
* Hjørland, B. (1997): ''Information seeking and subject representation: An activity-theoretical approach to information science''. Westport & London: Greenwood Press.
* Heidegger, M. (1996). ''Being and Time'', trans. by Joan Stambaugh. Albany: State University of New York Press.
* Hjørland, B. (1992). "The concept of “subject” in information science." ''Journal of Documentation'', 48(2), 172-200. http://www.db.dk/bh/Core%20Concepts%20in%20LIS/1992JDOC_Subject.PDF
* Frohmann, B. (1990). "Rules of indexing: A critique of mentalism in information retrieval theory." ''Journal of Documentation'', 81-101.
* Beghtol, C. (1986). "Bibliographic classification theory and text linguistics: aboutness analysis, intertextuality and the cognitive act of classifying documents." ''Journal of Documentation, 42'', 84-113.
* Searle, John (1983). ''Intentionality: An Essay in the Philosophy of Mind'', Cambridge University Press. 
* Salem, Shawky (1982). "Towards “coring” and “aboutness”: An approach to some aspects of in-depth indexing." ''Journal of Information Science Principles & Practice'', 1982, 4, 167-170.
* Mark Petersen, A. (1979). "The meaning of “about” in fiction indexing and retrieval." ''Aslib Proceedings, 31'', 251- 257.
* Swift, D. F., Winn, V. & Bramer, D. (1978). "“Aboutness” as a strategy for retrieval in the social sciences." ''Aslib Proceedings'', 30, 182-187.
* Hutchings, W. J. (1978). "The concept of “aboutness” in subject indexing." ''Aslib Proceedings, 30'', 172-181.
* Hutchins, W. J. (1977). "On the problem of “aboutness” in document analysis." ''Journal of Informatics'', 1, 17-35.
* Maron, M. E. (1977). "On indexing, retrieval and the meaning of about." ''Journal of the American Society for Information Science'', 28, 38-43.
* Heidegger, M. (1977). "Sein und Zeit", in Heidegger's ''Gesamtausgabe'', volume 2, ed. F.-W. von Herrmann, 1977, XIV, 586p.
* Hutchins, W. J. (1975). ''Languages of indexing and classification. A linguistic study of structures and functions''. London: Peter Peregrinus.
* Fairthorne, R. A. (1969). "Content analysis, specification and control." ''Annual Review of Information Science and Technology'', 4, 73-109.
* Heidegger, M. (1962). ''Being and Time'', trans. by John Macquarrie & Edward Robinson. London: SCM Press.
* Goodman, N. (1961). "About." ''Mind'', 70(277), 1-24.
* Putnam, H. (1958). "Formalization of the concept “about”." ''Philosophy of Science'', 25(2), 125-130.
* Thalheimer, R. (1936). "More about “about”." ''Analysis'', 3(3): 46-48.
* Ryle, G. (1933). "About." ''Analysis'', 1(1): 10-11.

[[Category:Library and information science]]
[[Category:Philosophy of language]]
[[Category:Philosophy of mind]]

[[da:Aboutness]]</text>
</page>
<page>
<id>700</id>
<title>Abraham H Oort</title>
<text>{{Wikify|date=October 2010}}

'''Abraham H Oort''' was a [[climatologist]] at Geophysical Fluid Dynamics Laboratory/NOAA, Princeton University, most notable for the textbook ''Physics of Climate'' [http://books.google.com/books?id=3tjKa0YzFRMC&dq=abraham+oort&printsec=frontcover&source=bl&ots=xUAowyMFKK&sig=5g0OUKLZrsGT_mn1DzpJndbKM68&hl=en&ei=H7MRS_3WKcGs4Qai3amJBA&sa=X&oi=book_result&ct=result&resnum=5&ved=0CBYQ6AEwBA#v=onepage&q=&f=false].

==External links==
*[http://www.gfdl.noaa.gov/bibliography/resultstest.php?author=1078 Bibliography at GFDL]
*[http://gcmd.nasa.gov/records/GCMD_NCAR_CIRC.html Oort's Monthly and Seasonal Global Circulation Statistics since 1958 from NCAR and LDEO/IRI Climate Data Library]

{{DEFAULTSORT:Oort}}
[[Category:American climatologists]]


{{scientist-stub}}</text>
</page>
<page>
<id>703</id>
<title>Abramowitz and Stegun</title>
<text>{{Infobox Book  | <!-- See Wikipedia:WikiProject_Novels or Wikipedia:WikiProject_Books -->
| name           = Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables
| image          = [[Image:Abramowitz&Stegun.page97.agr.jpg|200px]]
| image_caption  = Page 97 showing part of a table of [[common logarithm]]s.
| author         = [[Milton Abramowitz]] and [[Irene Stegun]]
| country        = [[USA]]
| language       = [[English language|English]]
| genre          = [[Math]]
| publisher      = ''[[Dover Publications]]''
| release_date   = 1964
| isbn           = 0-486-61272-4
| oclc= 18003605
}}

'''''Abramowitz and Stegun''''' is the informal name of a [[mathematics|mathematical]] reference work edited by [[Milton Abramowitz]] and [[Irene Stegun]] of the [[United States|U.S.]] [[National Bureau of Standards]] (now the ''National Institute of Standards and Technology'').  Its full title is '''''Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables'''''.

Since it was first published in 1964, the 1046 page ''Handbook'' has been one of the most comprehensive sources of information on [[special function]]s, containing definitions, identities, approximations, plots, and tables of values of numerous functions used in virtually all fields of [[applied mathematics]].  The notation used in the ''Handbook'' is the ''[[de facto]]'' standard for much of applied mathematics today.

At the time of its publication, the ''Handbook'' was an essential resource for practitioners.  Nowadays, [[computer algebra system]]s have replaced the [[mathematical table|function tables]], but the ''Handbook'' remains an important reference source.  The foreword discusses a meeting in 1954 in which it was agreed that "''the advent of high-speed computing equipment changed the task of table making but definitely did not remove the need for tables''".

{{cquote| More than 1,000 pages long, the ''Handbook of Mathematical Functions'' was first published in 1964 and reprinted many times, with yet another reprint in 1999. Its influence on science and engineering is evidenced by its popularity. In fact, when ''New Scientist'' magazine recently asked some of the world’s leading scientists what single book they would want if stranded on a desert island, one distinguished British physicist<ref>[[Michael Berry]], [http://www.newscientist.com/article/mg15621095.500-christmas-books-----or-maybe-two-or-three---.html New Scientist 22 November 1997]</ref> said he would take the Handbook.
The ''Handbook'' is likely the most widely distributed and most cited NIST technical publication of all time. Government sales exceed 150,000 copies, and an estimated three times as many have been reprinted and sold by commercial publishers since 1965. During the mid-1990s, the book was cited every 1.5 hours of each working day. And its influence will persist as it is currently being updated in digital format by NIST.|4=[[NIST]]<ref>NIST at 100: Foundations for Progress, 1964:Mathematics Handbook Becomes Best Seller — http://www.100.nist.gov/ph_spaceage.htm</ref>}}

==Editions==
Because the ''Handbook'' is the work of [[Federal government of the United States|U.S. federal government]] employees acting in their official capacity, it is [[Copyright status of work by the U.S. government|not protected by copyright]].  While it can be ordered from the [[Government Printing Office]], it has also been reprinted by commercial publishers, most notably [[Dover Publications]] (ISBN 0-486-61272-4), and can be legally viewed and downloaded off the web.

==Successor==
A digital successor to the Handbook, long under development at NIST, was released as the “[[Digital library of mathematical functions]]” (DLMF) on May 11, 2010, along with a printed version, the ''NIST Handbook of Mathematical Functions,'' published by [[Cambridge University Press]].(ISBN 9780521192255). More information can be found at [http://dlmf.nist.gov/ NIST].

==See also==
*[[Numerical analysis]]
*[[Philip J. Davis]], author of the [[Gamma function]] section and other sections of the book
*[[Digital Library of Mathematical Functions]] (DLMF), from the [[National Institute of Standards and Technology]] (NIST), is intended to be a replacement for Abramowitz and Stegun's Handbook of Mathematical Functions
*[[Boole's rule]], a mathematical rule of integration sometimes known as Bode's rule, due to a typo in Abramowitz and Stegun (1972, p. 886) that was subsequently propagated <ref>{{cite web|url=http://mathworld.wolfram.com/BoolesRule.html |title=Boole's Rule - from Wolfram MathWorld |publisher=Mathworld.wolfram.com |date=2009-10-27 |accessdate=2009-11-13}}</ref>

==Notes==
{{reflist}}

==References==
*{{Citation | editor1-last=Abramowitz | editor1-first=Milton | editor1-link=Milton Abramowitz | editor2-last=Stegun | editor2-first=Irene A. | editor2-link=Irene Stegun | title=Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables | publisher=[[Dover Publications]] | location=New York | isbn=978-0-486-61272-0 | year=1972}}
*{{citation|first=R. F.|last=  Boisvert|first2= D. W. |last2=Lozier|chapter=Handbook of Mathematical Functions|title=A Century of Excellence in Measurements Standards and Technology|editor-first=D. R.|editor-last= Lide|publisher= CRC Press|year= 2001|isbn =0849312477|pages= 135–139 |url=http://nvl.nist.gov/pub/nistpubs/sp958-lide/135-139.pdf|format=PDF}} A history of the activities leading up to and surrounding the development of the Handbook

==External links==
* [http://dlmf.nist.gov/about/book_info.html How to order the book from GPO].
* The book in scanned format, hosted at [http://www.math.sfu.ca/~cbm/aands/ Simon Fraser University].
* [http://www.convertit.com/Go/ConvertIt/Reference/AMS55.asp Another scanned version] by ConvertIt.com
* [http://www.nrbook.com/abramowitz_and_stegun Empanel] version
* [http://dlmf.nist.gov/ NIST Digital Library of Mathematical Functions], the digital companion to the Handbook

[[Category:1964 books]]
[[Category:Handbooks and manuals]]
[[Category:Mathematics books]]
[[Category:Mathematical tables]]
[[Category:Numerical analysis]]
[[Category:Reference works in the public domain]]
[[Category:Special functions]]

[[de:Abramowitz-Stegun]]
[[it:Handbook of Mathematical Functions]]
[[nl:Handbook of Mathematical Functions]]
[[pt:Handbook of Mathematical Functions]]</text>
</page>
<page>
<id>708</id>
<title>Absolute Debugger</title>
<text>{{unsourced|date=September 2010}}
{{orphan|date=December 2008}}
The absolute debugger is a legacy UNIX debugger found on Solaris 1 and 2, HP-UX and SCO.

A version of ADB was integrated into the [[BSD]] kernel as a kernel debugger.  Today, the kernel debugger in *BSD is the only derivative of ADB still in regular use.

Use of ADB was largely replaced by the symbolic debugger [[dbx debugger|DBX]].

[[Category:Debuggers]]


{{programming-software-stub}}</text>
</page>
<page>
<id>767</id>
<title>Accent (programming language)</title>
<text>{{Infobox programming language
| name =Accent
| logo =
| paradigm = 
| year =1990
| designer =
| developer =[[CaseWare, Inc.]]
| latest_release_version = <!--X.Y.Z/{{release date|mf=yes|YYYY|MM|DD}}-->
|latest release date =
| typing = [[strong typing|strong]]
| implementations =
| dialects =
| influenced_by =
| influenced =
| operating_system =
| license =
| website =
| file_ext =
}}
'''Accent''' is a very high level interpreted [[programming language]], published in 1990 by [[CaseWare, Inc.]] (acquired by [[Telelogic Synergy]]). Accent has native support for strings and tables. It is strongly typed and supports remote function calls.

{{FOLDOC}}

{{compu-lang-stub}}

[[Category:Parser generators]]

[[it:Accent]]
[[ms:Bahasa pengaturcaraan Accent]]</text>
</page>
<page>
<id>773</id>
<title>Access-eGov</title>
<text>{{Research-Project|
  name=Access-eGov|
  title= Access to e-Government Services Employing Semantic Technologies|
  keywords=[[e-Government]], [[Semantic interoperability]], [[Semantic Web]], [[Web Services]]|
  fundingAgency=European Union|
  frameworkProgramme=[[FP6]] |
  image=Access-eGov logo.jpg |
  projectType=[[STReP]]|
  researchObjective= SO 2.4.13 Strengthening the integration of the ICT research effort in an enlarged Europe|
  projectReference=FP6-2004-27020|
  coordinator=[[Technical University of Košice]]|
  participants= Research partners:<br/>
* [[University of Regensburg]],
* [[German University in Cairo]],
* InterSoft, a. s.,
* Signity S.A.,
* e-ISOTIS,
User partners: <br/>
* [[Kosice Self-governing Region|Košice Self-Governing Region]],
* Municipality of [[Michalovce]],
* Cities on Internet Association,
* City Hall of [[Gliwice]],
* State Government of [[Schleswig-Holstein]]|
budget= 2.3 m€|
funding= 1.98 m€|
start=1 January 2006|
end=31 December 2008|
  website= http://www.accessegov.org
}}

'''Access-eGov''' (''Access to e-Government Services Employing Semantic Technologies'') is a 36-month [[STReP]] research and development project, co-funded by the [[European Commission]] within the [[FP6|Sixth Framework Programme]] under the Information Society Technologies (IST) priority, contract No. FP6-2004-27020. This project addresses the strategic objective SO 2.4.13 ''Strengthening the Integration of the ICT research effort in an Enlarged Europe'' <ref>SO 2.4.13 ''Strengthening the Integration of the ICT research effort in an Enlarged Europe'' http://cordis.europa.eu/ist/workprogramme/wp0506_en/2_4_13.htm</ref>.

The Access-eGov project <ref>ICT Results: Access-eGov success story. 28. June 2007 http://cordis.europa.eu/ictresults/index.cfm/section/news/tpl/article/BrowsingType/Features/ID/89095</ref> is aiming at the development and validation of the platform for composition of government services into process definitions, enabling [[Semantic interoperability]] of particular [[e-Government]] services. The solution is based on the [[Semantic technology|semantic technologies]] as enhanced [[WSMO|WSMO conceptual framework]], [[Web Services Modeling Language|WSML]] [[Ontology (information science)|ontologies]], semantic [[annotation]] of services, their [[Web Services Discovery|discovery]], [[Service_Oriented_Programming#Service_Implementation:_Composite_Service|composition]], [[Data mediation|mediation]], and executing in the [[Service-oriented architecture|SOA]] environment. Adopting a citizen-centric approach <ref>Anamarija Leben, Mirko Vintar: ''Life-Event Approach: Comparison between Countries''. In: Electronic Government. Lecture Notes in Computer Science, Volume 2739/2003, Springer Berlin / Heidelberg, p. 1057, ISBN 978-3-540-40845-9. http://www.springerlink.com/content/0cnyub02gf5c45lj/</ref>, Access-eGov customises the [[workflow]] of electronic and traditional (i.e. face-to-face) services according to the personal needs of each citizen.

==Background, motivation==
The Access-eGov project is motivated by the needs to increase the [[interoperability]] of existing governmental services in existing or newly created e-Government solutions on local, national, and Pan-European levels. The interoperability was recognised as a precondition for the implementation of European eGovernment services in the ''eEurope Action Plan 2005'' <ref>eEurope Action Plan 2005 http://ec.europa.eu/information_society/eeurope/2005/all_about/action_plan/index_en.htm</ref> and is explicitly addressed as one of the four main challenges in the [[I2010|I2010 EU strategy]]. It is recommended to build the solutions supporting interoperability of governmental services on standards, open specifications and open interfaces <ref>Commission of the European Communities, Communication from the Commission to the Council and the European Parliament: Interoperability for Pan-European eGovernment Services. Brussels, 13.2.2006. http://ec.europa.eu/idabc/servlets/Doc?id=24117</ref>.

From the three aspects of [[interoperability]] (i.e. ''organisational'', ''semantic'', and ''technical'' <ref>Commission of the European Communities, Communication from the Commission to the Council and the European Parliament: Interoperability for Pan-European eGovernment Services. Brussels, 13.2.2006. Page 6. http://ec.europa.eu/idabc/servlets/Doc?id=24117</ref>), the Access-eGov project is particularly focused on the semantic interoperability. The central idea is to ensure that the meaning of the shared and exchanged information is captured, formalised, and is understood in the same way by the people, applications, and institutions involved in the eGovernment solution. It can be achieved by enriching the provided governmental services and other information resources with a machine-readable [[Annotation|semantic description]], applying the [[Semantic technology|semantic technologies]] as shared domain ontologies, formal ontology languages (e.g. [[Resource Description Framework|RDF]], [[OWL]], [[Web Services Modeling Language|WSML]]), [[Semantic Web Services]] and corresponding frameworks as e.g. [[RDF Schema|RDF-S]], [[Web Services Description Language|WSDL]], [[OWL-S]], and [[WSMO]] (see also the list of [[#Related_Projects|Related projects]]). Within the Access-eGov, the [[WSMO|WSMO framework]] was selected as a basic implementation platform.

==Access-eGov approach, objectives and solution==
The project objectives were defined on organisational and technological levels. Main ''organisational objective'' is to improve [[accessibility]] and [[connectivity]] of governmental services for citizens and businesses. ''Technical objectives'' are focused on the development of the [[software platform]] and tools for integration of various types of governmental services on a semantic basis, including a [[methodology]] for maintenance of the solution by public administrations.

A resource WSML [[ontology]] covering basic [[Domain knowledge]] and processes for locating and contracting e-Government services was created for the three [[#Pilot_Applications|pilot applications]] of the project. The requirement-driven approach <ref name="Ralf Klischewski 2007, pp. 133-140">Ralf Klischewski, Stefan Ukena: ''Designing semantic e-Government services driven by user requirements''. In: Electronic Government, 6th International EGOV Conference. Proceedings of ongoing research, project contributions and workshops (3–6 September 2007, Regensburg, Germany). Trauner Verlag, Linz, Austria, 2007, pp. 133–140, ISBN 978-3-85499-255-4</ref> was used by public administrations to describe the services, goals, and scenarios. The core Access-eGov system was implemented as an extension of the [[WSMO]] conceptual model <ref>Mach, M., Bednár, P., Hreno, J.: Execution and composition of government services. 
In: MeTTeG07 : Methodologies, Technologies and Tool enabling e-Government. Proceedings of the 1st International Conference : Camerino, Italy – 27–28 September 2007. Matelica : Halley Editrice, 2007. pp.139–153. ISBN 978-88-7589-300-2.</ref>. The solution includes two client side tools – ''Personal Assistant client'', which provides browsing of the scenarios and services for citizens, and ''Annotation tool'' enabling semantic annotation of services for public administrations.

The Access-eGov solution was tested within the first trial in autumn 2007 <ref>ePractice.eu: Access-eGov completes first pilot trials. 11 April 2008. http://www.epractice.eu/document/4562</ref>. Results of the testing were evaluated and were taken as a background for further improvements. Currently (second half of year 2008) the Access-eGov project approaches its final phase, which includes second trial of all the pilot applications and final evaluation of achieved results.

==Pilot Applications==
===German field test – "Getting married" scenario===
The field test was carried out by Ministry of Finance of [[Schleswig-Holstein]]. It was focused on the life event "marriage" and related procedures. The [[Registration of births, deaths and marriages|registry offices]] of eleven municipalities from Schleswig-Holstein have been involved in this field test. The main aim was to test the integration of different web resources containing the service information and making them accessible via a single platform but still leaving the data and its maintenance in the municipalities' legacy systems.

===Slovak pilot – "Obtaining a building permission" scenario===
The pilot application has been carried out by the [[Kosice Self-governing Region|Košice Self-Governing Region]] and the municipality of [[Michalovce]]. It was focused on supporting citizens during the process of obtaining a [[Building permit]], including complex services related to [[Land-use planning]] and approval proceedings. The objective was to make the whole process easier and transparent for citizens, to provide all relevant information about necessary services in a comprehensive and user-friendly way, and finally to improve the service from the citizen's point of view.

===Polish pilot – "Establishing an enterprise" scenario===
The pilot application took place in the Silesian region and was performed by the [[Gliwice]] City Hall. The user scenario involved four main user goals: registration in local government, registration in statistical office, registration in [[tax]] office and registration in [[Social insurance]] agency. The objective of the pilot application was to provide a single entry point where users (citizens and entrepreneurs) can obtain relevant information and are properly navigated by the system within the whole complex process.

==Project outcomes==
* ''The Access-eGov core system'', including inner components for discovery, composition, mediation, and execution of the semantically annotated services.<ref>Karol Furdik, Tomas Sabol, Peter Bednar: ''Framework for integration of e-Government Services on a Semantic Basis''. In: Electronic Government, 6th International EGOV Conference. Proceedings of ongoing research, project contributions and workshops (3–6 September 2007, Regensburg, Germany). Trauner Verlag, Linz, Austria, 2007, pp. 71–78, ISBN 978-3-85499-255-4</ref>
* ''Extensions of the [[WSMO]] conceptual model''. The WSMO conceptual model was adapted and modified by designing and implementing a workflow extension to the WSMO specification <ref>D2 v1.3. Web Service Modeling Ontology (WSMO). WSMO Final Draft, 21 October 2006. http://www.wsmo.org/TR/d2/v1.3/</ref>, based on the [[workflow]] CASheW-S model <ref>Barry Norton, Carlos Pedrinaci: ''3-Level Service Composition and Cashew: A Model for Orchestration and Choreography in Semantic Web Services''. Springer LNCS 4277, 2006, pp. 58–67</ref>.
* [[Methodology]]: ''Requirement-driven approach''<ref name="Ralf Klischewski 2007, pp. 133-140"/>. The method originally designed and developed within the Access-eGov project by one of the project partners ([[German University in Cairo]]), was used as the main resource for ontology creation. This approach provides a generic method how to collect, relate, and formally express the information needs of the public administrations, as service providers, to design the specific semantic structures and descriptions of provided governmental services.
* ''Resource [[Ontology|ontologies]]'', proposed as the specification of system data for the services and workflow structures within the Access-eGov system.<ref>D7.1 Public administration resource ontologies. Access-eGov project, Public Deliverable. 30 November 2007. http://www.accessegov.org/acegov/uploadedFiles/webfiles/cffile_2_20_08_5_50_43_PM.zip</ref>
* Tools:
** ''Annotation tool'', which provides for public administration officers a capability to semantically annotate the resources as services, contact data, working hours, fees, etc. A set of forms and templates was designed for specification of preconditions and non-functional properties as parameters of the annotated government services, which can then be grouped into complex workflow sequences. The tool is designed as a standard web application, using the extended WSMO object model and [[JavaServer Faces|JSF]] technology.
** ''Personal Assistant client'', a tool that provides browsing, discovery, and execution capabilities of the services for citizens and businesses according to a specified life event or goal. Users can browse sub-goals and provide their answers when customization input is requested. Then the system automatically resolves the sub-goals and navigates the user to a new set of sub-goals and services inferred from the conceptual model. The electronic services provided via standardized [[Web Service]] interface can be directly invoked. Finally, the citizen obtains all available information on the life event customized to his/her case, and has also the possibility to execute the actions required for particular services needed for the accomplishing of the life event. The Personal Assistant client was implemented as a web application using [[JavaServer Faces|JSF]] technology. Layout, structure, and ordering of tabs in the interface are dynamically created from the annotated services and are customized according to the conditions of the given user.

==References==
{{reflist}}

== External links ==
* [http://www.accessegov.org/ Access-eGov Project Home]
** [http://www.accessegov.org/acegov/web/uk/index.jsp?id=50268 Public Deliverables]
** [http://www.accessegov.org/acegov/web/uk/index.jsp?id=50035 List of Publications]
* [http://ec.europa.eu/research/fp6/index_en.cfm Sixth Framework Programme home page]
* [http://ec.europa.eu/index_en.htm European Commission]

==Related Projects==
* [http://www.egovernet.org eGOVERNET]
* [http://www.egovrtd2020.org eGovRTD2020]
* [http://www.ontogov.com OntoGov]
* [http://www.sake-project.org SAKE]
* [http://www.semantic-gov.org SemanticGov]
* [http://www.terregov.eupm.net/my_spip/index.php Terregov]
* [http://dip.semanticweb.org DIP Integrated Project]
* other, see [http://ec.europa.eu/information_society/activities/egovernment/research/fp6_projects/index_en.htm List of FP6 EU-funded eGovernment research projects]
{{Use dmy dates|date=November 2010}}

{{DEFAULTSORT:Access-Egov}}
[[Category:European Commission projects]]
[[Category:FP6 Projects]]
[[Category:Semantic Web]]
[[Category:European Union and science and technology]]
[[Category:Public administration]]</text>
</page>
<page>
<id>785</id>
<title>Access control vestibule</title>
<text>The '''Access Control Vestibule''' (ACV) is a [[security]] screening system for the [[detection]] of individuals carrying [[weapons]] into any facility without [[authorization]], therefore minimizing the possibility of an [[armed]] takeover. The ACV is composed of an [[aluminum]] frame, separate entrance and exit doors, a [[metal detection]] system, and [[bullet-proof glass]]. If a weapon is detected, the doors to the ACV automatically lock.<ref>http://www.freepatentsonline.com/5992094.html</ref> The ACV is typically used in [[bank]]s and other secure facilities.<ref>http://www.bizjournals.com/orlando/stories/2007/06/18/daily18.html?from_rss=1</ref>

== Patent ==
Novacomm, Inc. patented the ACV in 1994.

== Technology ==
The ACV incorporates several [[security]] [[technologies]] that security [[personnel]] can use to assist with the [[screening]] process. Included are: 1) an [[intercom]] for communications; 2) optional [[camera]] so personnel can see the individual requesting [[access]]; 3) [[metal detector]] to ferret out any [[weapons]] that may be present on the individual requesting access; and 4) [[access control]] for physical access to the business. When a customer enters the vestibule a passive [[infrared detector]] senses that someone is present within the enclosure, locking the doors behind and in front of him/her, thus forming a [[mantrap]]. The door behind the person is locked to prevent [[Piggybacking (security)|piggybacking]]. Both doors are secured using [[Electromagnetism|electromagnetic]] locks. At no time is the person inside the entrance of the [[mantrap]] prevented from leaving through the door they first entered, but the inside door to the inner sanctum of the business cannot be opened until the [[metal detector]] has determined that no weapons are present.<ref>http://www.securitysales.com/t_news_print.aspx?action=article&storyID=3237</ref>

==See also==
*[[Mantrap]]
*[[Bullet-proof glass]]
*[[access control]]
*[[security]]

== References ==
{{reflist}}

== External links ==
* [http://novaacu.com/ Novacomm, Inc.] - The manufacturer of the Access Control Vestibule
* [http://www.novaacu.com/blog/   Conversations about Access Control Vestibules]
* [http://www.freepatentsonline.com/5992094.html   ACV Patent]
* [http://www.youtube.com/watch?v=sIgAYh_7z2Y   Bank Robber trapped in ACV]
* [http://www.guardiansecureentrance.com/accesscontrolvestibule_article.html   

[[Category:Access control]]</text>
</page>
<page>
<id>788</id>
<title>Access structure</title>
<text>'''Access structures''' are used in the study of security system where multiple parties need to work together to obtain a resource. Groups of parties that are granted access are called qualified. In [[set theory|set theoretic]] terms they are referred to as qualified sets. In turn, the set of all such qualified sets is called the access structure of the system. Less formally it is a description of who needs to cooperate with whom in order to access the resource. In its original use in [[cryptography]], the resource was a secret [[secret sharing|shared]] among the participants. Only subgroups of participants contained in the access structure, are able to join their shares to recompute the secret. More generally, the resource can also be a task that a group of people can complete together, such as creating a [[digital signature]], or decrypting an encrypted message.

It is reasonable to assume that access structures are [[monotone]] in the sense that, if a subset S is in the access structure, all sets that contain S as a subset should also form part of the access structure.

==See also==

* [[Access control]]
* [[Secret sharing]]
* [[Threshold cryptosystem]]

[[Category:Access control]]


{{crypto-stub}}</text>
</page>
<page>
<id>789</id>
<title>Access token</title>
<text>{{Unreferenced|date=August 2010}}
In [[Microsoft Windows]] [[operating system]]s, an '''access token''' contains the security information for a [[login session]] and identifies the [[user (computing)|user]], the user's groups, and the user's privileges.

==Overview==
An ''access token'' is an [[Object Manager (Windows)|object]] encapsulating the [[security descriptor]] of a [[Process (computing)|process]].<ref name="atoken">{{cite web | url = http://msdn2.microsoft.com/en-us/library/Aa374909.aspx | title = Access Tokens | publisher = [[MSDN]] | accessdate = 2007-10-08}}</ref> Attached to a process, a security descriptor identifies the owner of the object (in this case, the process) and [[Access Control List|ACL]]s that specifies accessing rights allowed or denied to the owner of the object.<ref>{{cite web | url = http://msdn2.microsoft.com/en-us/library/aa379563.aspx | title = Security Descriptors | accessdate = 2007-10-08}}</ref><ref>{{cite web | url = http://msdn2.microsoft.com/en-us/library/aa379557.aspx | title = Securable Objects | accessdate = 2007-10-08}}</ref> While a token is used to represent only the security information, it is technically free-form and can enclose any data. The access token is used by Windows when the process or thread tries to interact with objects whose security descriptors enforce access control (''securable objects'').<ref name="atoken"/> An access token is represented by the [[Object Manager (Windows)|system object]] of type <code>Token</code>. Because a token is a regular system object, access to a token itself can be [[access control|controlled]] by attaching a [[security descriptor]], but it is generally never done in practice.

The access token is generated by the [[login|logon]] service when a user logs on to the system and the credentials provided by the user are authenticated against the authentication database, by specifying the rights the user has in the [[security descriptor]] enclosed by the token. The token is attached to every process created by the user session (processes whose owner is the user).<ref name="atoken"/> Whenever such a process accesses any resource which has [[access control]] enabled, Windows looks up in the security descriptor in the access token whether the user owning the process is eligible to access the data, and if so, what operations (read, write/modify, etc.) the user is allowed to do. If the accessing operation is allowed in the context of the user, Windows allows the process to continue with the operation, else it is denied access.

==Types of tokens==
There are two types of tokens:
;Primary token: Primary tokens can only be associated to [[Process (computing)|processes]], and they represent a process's security subject. The creation of primary tokens and their association to processes are both privileged operations, requiring two different privileges in the name of [[privilege separation]] - the typical scenario sees the authentication service creating the token, and a logon service associating it to the user's [[operating system shell]]. Processes initially inherit a copy of the parent process's primary token. Impersonation tokens can only be associated to [[thread (computer science)|threads]], and they represent a ''client'' process's security subject. Impersonation tokens are usually created and associated to the current thread implicitly, by [[Inter-process communication|IPC]] mechanisms such as DCE [[Remote procedure call|RPC]], [[Dynamic Data Exchange|DDE]] and [[named pipe]]s.

;Impersonation token: Impersonation is a security concept unique to Windows NT, that allows a server application to temporarily "be" the client in terms of access to secure objects. Impersonation has three possible levels: ''identification'', letting the server inspect the client's identity, ''impersonation'', letting the server act on behalf of the client, and ''delegation'', same as impersonation but extended to remote systems to which the server connects (through the preservation of credentials). The client can choose the maximum impersonation level (if any) available to the server as a connection parameter. Delegation and impersonation are privileged operations (impersonation initially wasn't, but historical carelessness in the implementation of client [[application programming interface|API]]s failing to restrict the default level to "identification", letting an unprivileged server impersonate an unwilling privileged client, called for it).

==Contents of a token==
A token is composed of various fields, including but not limited to:
* an identifier.
* the identifier of the associated logon session. The session is maintained by the authentication service, and is populated by the authentication packages with a collection of all the information ([[credentials]]) the user provided when logging in. Credentials are used to access remote systems without the need for the user to re-authenticate ([[single sign-on]]), provided that all the systems involved share an authentication authority (e.g. a [[Kerberos (protocol)|Kerberos]] ticket server)
* the user identifier. This field is the most important and it's strictly read-only.
* the identifiers of groups the user (or, more precisely, the subject) is part of. Group identifiers cannot be deleted, but they can be disabled. At most one of the groups is designated as the ''session id'', a volatile group representing the logon session, allowing access to volatile objects associated to the session, such as the display.
* the restricting group identifiers (optional). This additional set of groups doesn't grant additional access, but further restricts it: access to an object is only allowed if it's allowed ''also'' to one of these groups. Restricting groups cannot be deleted nor disabled. Restricting groups are a recent addition, and they are used in the implementation of [[sandbox (security)|sandboxes]].
* the privileges, i.e. special capabilities the user has. Most privileges are disabled by default, to prevent damage from non-security-conscious programs. Starting in Windows XP Service Pack 2 and Windows Server 2003 privileges can be permanently removed from a token by a call to <code>AdjustTokenPrivileges()</code> with the <code>SE_PRIVILEGE_REMOVED</code> attribute.
* the default owner, primary group and ACL for objects created by the subject associated to the token.

==References==
{{Reflist}}

{{Windows Components}}

{{DEFAULTSORT:Access Token}}
[[Category:Computer security]]
[[Category:Microsoft Windows security technology]]

[[id:Access token]]
[[it:Access token]]</text>
</page>
<page>
<id>803</id>
<title>Accounting method</title>
<text>{{dablink|For accounting methods in business and financial reporting, see [[Accounting methods]].}}
In the field of [[analysis of algorithms]] in [[computer science]], the '''accounting method''' is a method of [[amortized analysis]] based on [[accounting]].  The accounting method often gives a more intuitive account of the amortized cost of an operation than either [[aggregate analysis]] or the [[potential method]].  Note, however, that this does not guarantee such analysis will be immediately obvious; often, choosing the correct parameters for the accounting method requires as much knowledge of the problem and the complexity bounds one is attempting to prove as the other two methods.

The accounting method is most naturally suited for proving a [[Big O notation|O]](1) bound on time.  The method as explained here is for proving such a bound.

==The method==

Preliminarily, we choose a set of elementary operations which will be used in the [[algorithm]], and arbitrarily set their cost to 1.  The fact that the costs of these operations may in reality differ presents no difficulty in principle.  What is important, is that each elementary operation has a constant cost.

Each aggregate operation is assigned a "payment".  The payment is intended to cover the cost of elementary operations needed to complete this particular operation, with some of the payment left over, placed in a pool to be used later.

The difficulty with problems that require amortized analysis is that, in general, some of the operations will require greater than constant cost.  This means that no constant payment will be enough to cover the worst case cost of an operation, in and of itself.  With proper selection of payment, however, this is no longer a difficulty; the expensive operations will only occur when there is sufficient payment in the pool to cover their costs.

==Examples==

A few examples will help to illustrate the use of the accounting method.

===Table expansion===

It is often necessary to create a table before it is known how much space is needed.  One possible strategy is to double the size of the table when it is full.  Here we will use the accounting method to show that the amortized cost of an insertion operation in such a table is [[O]](1).

Before looking at the procedure in detail, we need some definitions.  Let T be a table, E an element to insert, num(T) the number of elements in T, and size(T) the allocated size of T.  We assume the existence of operations create_table(n), which creates an empty table of size n, for now assumed to be free, and elementary_insert(T,E), which inserts element E into a table T that already has space allocated, with a cost of 1.

The following [[pseudocode]] illustrates the table insertion procedure:
  '''function''' table_insert(T,E)
      '''if''' num(T) = size(T)
          U := create_table(2 &times; size(T))
          '''for each''' F '''in''' T
              elementary_insert(U,F)
          T := U
      elementary_insert(T,E)

Without amortized analysis, the best bound we can show for n insert operations is O(n<sup>2</sup>) &mdash; this is due to the loop at line 4 that performs num(T) elementary insertions.

For analysis using the accounting method, we assign a payment of 3 to each table insertion.  Although the reason for this is not clear now, it will become clear during the course of the analysis.

Assume that initially the table is empty with size(T) = m.  The first m insertions therefore do not require reallocation and only have cost 1 (for the elementary insert).  Therefore, when num(T) = m, the pool has (3 - 1)&times;m = 2m.

Inserting element m + 1 requires reallocation of the table.  Creating the new table on line 3 is free (for now).  The loop on line 4 requires m elementary insertions, for a cost of m.  Including the insertion on the last line, the total cost for this operation is m + 1.  After this operation, the pool therefore has 2m + 3 - (m + 1) = m + 2.

Next, we add another m - 1 elements to the table.  At this point the pool has m + 2 + 2&times;(m - 1) = 3m.  Inserting an additional element (that is, element 2m + 1) can be seen to have cost 2m + 1 and a payment of 3.  After this operation, the pool has 3m + 3 - (2m + 1) = m + 2.  Note that this is the same amount as after inserting element m + 1.  In fact, we can show that this will be the case for any number of reallocations.

It can now be made clear why the payment for an insertion is 3.  1 goes to inserting the element the first time it is added to the table, 1 goes to moving it the next time the table is expanded, and 1 goes to moving one of the elements that was already in the table the next time the table is expanded.

We initially assumed that creating a table was free.  In reality, creating a table of size n may be as expensive as O(n).  Let us say that the cost of creating a table of size n is n.  Does this new cost present a difficulty?  Not really; it turns out we use the same method to show the amortized O(1) bounds.  All we have to do is change the payment.

When a new table is created, there is an old table with m entries.  The new table will be of size 2m.  As long as the entries currently in the table have added enough to the pool to pay for creating the new table, we will be all right.

We cannot expect the first <math>\frac{m}{2}</math> entries to help pay for the new table.  Those entries already paid for the current table.  We must then rely on the last <math>\frac{m}{2}</math> entries to pay the cost <math>2m</math>.  This means we must add <math>\frac{2m}{m/2} = 4</math> to the payment for each entry, for a total payment of 3 + 4 = 7.

== References ==

* [[Thomas H. Cormen]], [[Charles E. Leiserson]], [[Ronald L. Rivest]], and [[Clifford Stein]]. ''[[Introduction to Algorithms]]'', Second Edition. MIT Press and McGraw-Hill, 2001. ISBN 0-262-03293-7. Section 17.2: The accounting method, pp. 410&ndash;412.

[[Category:Analysis of algorithms]]

[[de:Account-Methode]]</text>
</page>
<page>
<id>808</id>
<title>Accuracy paradox</title>
<text>{{Refimprove|date=December 2009}}
The '''accuracy paradox''' for [[predictive analytics]] states that predictive models with a given level of [[accuracy]] may have greater [[predictive power]] than models with higher accuracy. It may be better to avoid the accuracy metric in favor of other metrics such as [[Accuracy and precision|precision]] and [[Recall (information retrieval)|recall]].   

Accuracy is often the starting point for analyzing the quality of a predictive model, as well as an obvious criterion for prediction. Accuracy measures the ratio of correct predictions to the total number of cases evaluated. It may seem obvious that the ratio of correct predictions to cases should be a key metric. A predictive model may have high accuracy, but be useless.

In an example predictive model for an [[insurance fraud]] application, all cases that are predicted as high-risk by the model will be investigated. To evaluate the performance of the model, the insurance company has created a sample data set of 10,000 claims. All 10,000 cases in the [[validation]] sample have been carefully checked and it is known which cases are fraudulent. To analyze the quality of the model, the insurance uses the [[table of confusion]].  The definition of accuracy, the table of confusion for model M<sub>1</sub><sup>Fraud</sup>, and the calculation of accuracy for model M<sub>1</sub><sup>Fraud</sup> is shown below.

<math>\mathrm{A}(M) = \frac{TN + TP}{TN + FP + FN + TP}</math>
where
: TN is the number of true negative cases
: FP is the number of false positive cases
: FN is the number of false negative cases
: TP is the number of true positive cases

''Formula 1: Definition of Accuracy''

{|class="prettytable"
!
!Predicted Negative
!Predicted Positive
|-
|Negative Cases||9,700||150
|-
|Positive Cases||50||100
|}

''Table 1: Table of Confusion for Fraud Model M<sub>1</sub><sup>Fraud</sup>.''

<math>\mathrm A (M) = \frac{9,700 + 100}{9,700 + 150 + 50 + 100} = 98.0%</math>

''Formula 2: Accuracy for model M<sub>1</sub><sup>Fraud</sup>''

With an accuracy of 98.0% model M<sub>1</sub><sup>Fraud</sup> appears to perform fairly well. The paradox lies in the fact that accuracy can be easily improved to 98.5% by always predicting "no fraud". The table of confusion and the accuracy for this trivial “always predict negative” model M<sub>2</sub><sup>Fraud</sup> and the accuracy of this model are shown below.

{|class="prettytable"
!
!Predicted Negative
!Predicted Positive
|-
|Negative Cases||9,850||0
|-
|Positive Cases||150||0
|}

''Table 2: Table of Confusion for Fraud Model M<sub>2</sub><sup>Fraud</sup>.''

<math>\mathrm{A}(M) = \frac{9,850 + 0}{9,850 + 150 + 0 + 0} = 98.5%</math>

''Formula 3: Accuracy for model M<sub>2</sub><sup>Fraud</sup>''

Model M<sub>2</sub><sup>Fraud</sup>reduces the rate of inaccurate predictions from 2% to 1.5%. This is an apparent improvement of 25%. The new model M<sub>2</sub><sup>Fraud</sup> shows fewer incorrect predictions and markedly improved accuracy, as compared to the original model M<sub>1</sub><sup>Fraud</sup>, but is obviously useless. 

The alternative model M<sub>2</sub><sup>Fraud</sup> does not offer any value to the company for preventing fraud. The less accurate model is more useful than the more accurate model.  

Model improvements should not be measured in terms of accuracy gains. It may be going too far to say that accuracy is irrelevant, but caution is advised when using accuracy in the evaluation of predictive models.

==See also==
*[[Receiver operating characteristic]] for other measures of how good model predictions are.

==Bibliography==
{{refbegin}}
* {{citation |last=Zhu |first=Xingquan |title=Knowledge Discovery and Data Mining: Challenges and Realities |publisher=IGI Global | url=http://books.google.com/?id=zdJQAAAAMAAJ&q=data+mining+challenges+and+realities&dq=data+mining+challenges+and+realities |year=2007 |isbn=9781599042527 |pages=118–119}}
*  {{doi|10.1117/12.785623}}
* pp 86-87 of [http://www.utwente.nl/ewi/trese/graduation_projects/2009/Abma.pdf this Master's thesis]
{{refend}}

[[Category:Statistical paradoxes]]
[[Category:Machine learning]]
[[Category:Data mining]]</text>
</page>
<page>
<id>816</id>
<title>Ackermann function</title>
<text>In [[computability theory]], the '''Ackermann function''', named after [[Wilhelm Ackermann]], is one of the simplest and earliest-discovered examples of a [[total function|total]] [[computable function]] that is not [[Primitive recursive function|primitive recursive]]. All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive.

After Ackermann's publication<ref name="Ack">{{cite journal | author=Wilhelm Ackermann | journal=[[Mathematische Annalen]] | title=''Zum Hilbertschen Aufbau der reellen Zahlen'' | year=1928 | volume=99 | pages=118–133 | doi=10.1007/BF01459088}}</ref> of his function (which had three nonnegative integer arguments), many authors modified it to suit various purposes, so that today "the Ackermann function" may refer to any of numerous variants of the original function. One common version, the two-argument '''Ackermann–Péter function''', is defined as follows for nonnegative integers ''m'' and ''n'':

:<math> A(m, n) =
\begin{cases}
n+1 & \mbox{if } m = 0 \\
A(m-1, 1) & \mbox{if } m > 0 \mbox{ and } n = 0 \\
A(m-1, A(m, n-1)) & \mbox{if } m > 0 \mbox{ and } n > 0.
\end{cases}
</math>

Its value grows rapidly, even for small inputs.  For example ''A''(4,2) is an integer of 19,729 decimal digits.<ref>[http://www.kosara.net/thoughts/ackermann42.html Decimal expansion of A(4,2)] {{Wayback|url=http://www.kosara.net/thoughts/ackermann42.html|date =20080317104411}}</ref>

==History==
In the late 1920s, the mathematicians [[Gabriel Sudan]] and [[Wilhelm Ackermann]], students of [[David Hilbert]], were studying the foundations of computation.  Both Sudan and Ackermann are credited<ref>{{cite journal | author=Cristian Calude, [[Solomon Marcus]] and Ionel Tevy | journal = Historia Math. | title=The first example of a recursive function which is not primitive recursive | month=November | year=1979 | pages=380–84 | volume=6 | issue=4 | doi=10.1016/0315-0860(79)90024-7}}</ref> with discovering [[total function|total]] [[computable function]]s (termed simply "recursive" in some references) that are not [[primitive recursive function|primitive recursive]].  Sudan published the lesser-known [[Sudan function]], then shortly afterwards and independently, in 1928, Ackermann published his function <math>\phi\,\!</math>.  Ackermann's three-argument function, <math>\phi(m, n, p)\,\!</math>, is defined such that for ''p'' = 0, 1, 2, it reproduces the basic operations of addition, multiplication, and exponentiation as
:<math>\phi(m, n, 0) = m+n,\,\!</math>
:<math>\phi(m, n, 1) = m\cdot n,\,\!</math>
:<math>\phi(m, n, 2) = m^n,\,\!</math>
and for ''p'' > 2 it extends these basic operations in a way that happens to be expressible in [[Knuth's up-arrow notation]] as
:<math>\phi(m, n, p) = m\uparrow^{p - 1}(n + 1)\,\!</math>.
(Aside from its historic role as a total-computable-but-not-primitive-recursive function, Ackermann's original function is seen to extend the basic arithmetic operations beyond exponentiation, although not as seamlessly as do variants of Ackermann's function that are specifically designed for that purpose — such as [[Reuben Goodstein|Goodstein's]] [[hyperoperation]] sequence.)

In ''On the Infinite'', David Hilbert hypothesized that the Ackermann function was not primitive recursive, but it was Ackermann, Hilbert’s personal secretary and former student, who actually proved the hypothesis in his paper ''On Hilbert’s Construction of the Real Numbers''. ''On the Infinite'' was Hilbert’s most important paper on the foundations of mathematics, serving as the heart of [[Hilbert's program]] to secure the foundation of [[transfinite number]]s by basing them on finite methods.<ref name="Ack"/><ref>von Heijenoort. [http://mathgate.info/cebrown/notes/vonHeijenoort.php From Frege To Gödel], 1967.</ref>

[[Rózsa Péter]] and [[Raphael Robinson]] later developed a two-variable version of the Ackermann function that became preferred by many authors.<ref>{{cite journal | author=Raphael M. Robinson | title=Recursion and Double Recursion | journal=[[Bulletin of the American Mathematical Society]] | year=1948 | volume=54 | pages=987–93 | url=http://projecteuclid.org/DPubS?verb=Display&version=1.0&service=UI&handle=euclid.bams/1183512393&page=record | doi=10.1090/S0002-9904-1948-09121-2}}</ref>

==Definition and properties==
Ackermann's original three-argument function <math>\phi(m, n, p)\,\!</math> is defined [[recursion|recursively]] as follows for nonnegative integers ''m'', ''n'', and ''p'':

:<math> \begin{cases}
\phi(m, n, 0) = m + n \\
\phi(m, 0, 1) = 0 \\
\phi(m, 0, 2) = 1 \\
\phi(m, 0, p) = m \text{ for } p > 2 \\
\phi(m, n, p) = \phi(m, \phi(m, n-1, p), p - 1) \text{ for } n > 0 \text{ and } p > 0.
\end{cases}\,\!</math>

Of the various two-argument versions, the one developed by Péter and Robinson (called "the" Ackermann function by some authors) is defined for nonnegative integers ''m'' and ''n'' as follows:

:<math> A(m, n) =
\begin{cases}
n+1 & \mbox{if } m = 0 \\
A(m-1, 1) & \mbox{if } m > 0 \mbox{ and } n = 0 \\
A(m-1, A(m, n-1)) & \mbox{if } m > 0 \mbox{ and } n > 0.
\end{cases}
</math>

It may not be immediately obvious that the evaluation of <math> A(m, n)</math> always terminates. However, the recursion is bounded because in each recursive application either ''m'' decreases, or ''m'' remains the same and ''n'' decreases. Each time that ''n'' reaches zero, ''m'' decreases, so ''m'' eventually reaches zero as well. (Expressed more technically, in each case the pair (''m'', ''n'') decreases in the [[lexicographic order]], which preserves the [[well-order]]ing of the non-negative integers.) However, when ''m'' decreases there is no upper bound on how much ''n'' can increase — and it will often increase greatly.

The Péter-Ackermann function can also be expressed in terms of various other versions of the Ackermann function:
* the indexed version of [[Knuth's up-arrow notation]] (extended to integer indices = -2):
::''A''(''m'', ''n'') = <math>2\uparrow^{m-2} (n+3) - 3.</math>
:The part of the definition ''A''(''m'', 0) = A(''m''-1, 1) corresponds to <math>2\uparrow^{m+1} 3=2\uparrow^m 4.</math>

* [[hyper operator]]s:
::''A''(''m'', ''n'') = hyper(2, m, n + 3) - 3.

* [[Conway chained arrow]] notation:
::''A''(''m'', ''n'') = (2 ? (''n''+3) ? ''(m'' - 2)) - 3 for ''m'' > 2
:hence
::2 ? ''n'' ? ''m'' = ''A''(''m''+2,''n''-3) + 3 for ''n''>2.
:(''n''=1 and ''n''=2 would correspond with ''A''(''m'',-2) = -1 and ''A''(''m'',-1) = 1, which could logically be added.)

For small values of ''m'' like 1, 2, or 3, the Ackermann function grows relatively slowly with respect to ''n'' (at most [[exponential growth|exponentially]]). For ''m'' = 4, however, it grows much more quickly; even ''A''(4, 2) is about 2{{e|19728}}, and the decimal expansion of ''A''(4, 3) is very large by any typical measure.

If we define the function ''f'' (''n'') = ''A''(''n'', ''n''), which increases both ''m'' and ''n'' at the same time, we have a function of one variable that dwarfs every primitive recursive function, including very fast-growing functions such as the [[exponential function]], the factorial function, multi- and [[superfactorial]] functions, and even functions defined using Knuth's up-arrow notation (except when the indexed up-arrow is used).

This extreme growth can be exploited to show that ''f'', which is obviously computable on a machine with infinite memory such as a [[Turing machine]] and so is a [[computable function]], grows faster than any primitive recursive function and is therefore not primitive recursive.  In a category with exponentials, using the isomorphism <math>A \times B \rightarrow C \cong A \rightarrow (B \rightarrow C)</math> (in computer science, this is called [[currying]]), the Ackermann function may be defined via primitive recursion over higher-order functionals as follows:

:<math>
\begin{array}{lcl}
\operatorname{Ack}(0) & = & \operatorname{Succ} \\
\operatorname{Ack}(m+1) & = & \operatorname{Iter}(\operatorname{Ack}(m))
\end{array}
</math>

where ''Succ'' is the usual [[successor function]] and ''Iter'' is defined by primitive recursion as well:

:<math>
\begin{array}{lcl}
\operatorname{Iter}(f)(0) & = & f(1) \\
\operatorname{Iter}(f)(n+1) & = & f(\operatorname{Iter}(f)(n)).
\end{array}
</math>

One interesting aspect of the Ackermann function is that the only arithmetic operations it ever uses are addition and subtraction of 1. Its properties come solely from the power of unlimited recursion. This also implies that its running time is at least proportional to its output, and so is also extremely huge. In actuality, for most cases the running time is far larger than the output; see below.

==Table of values==
Computing the Ackermann function can be restated in terms of an infinite table. We place the natural numbers along the top row. To determine a number in the table, take the number immediately to the left, then look up the required number in the previous row, at the position given by the number just taken. If there is no number to its left, simply look at the column headed "1" in the previous row. Here is a small upper-left portion of the table:

{| class="wikitable"
|+ Values of ''A''(''m'', ''n'')
|-
! ''m''\''n''
! 0
! 1
! 2
! 3
! 4
! n
|-
! 0
| 1 || 2 || 3 || 4 || 5 || <math>n + 1</math>
|-
! 1
| 2 || 3 || 4 || 5 || 6 || <math>n + 2 = 2 + (n + 3) - 3</math>
|-
! 2
| 3 || 5 || 7 || 9 || 11 || <math>2n + 3 = 2\cdot(n + 3) - 3</math>
|-
! 3
| 5 || 13 || 29 || 61 || 125 || <math>2^{(n+3)} - 3</math>
|-
! 4
| 13 || 65533
| 2<sup>65536</sup> - 3
| <math>{2^{2^{65536}}} - 3</math>
| <math>{2^{2^{2^{65536}}}} - 3</math>
| <math>\begin{matrix}\underbrace{{2^2}^{{\cdot}^{{\cdot}^{{\cdot}^2}}}} - 3 \\n\mbox{ + 3}\end{matrix}</math>
|}

The numbers listed here in a recursive reference are very large and cannot be easily notated in some other form.

Despite the large values occurring in this early section of the table, some even larger numbers have been defined, such as [[Graham's number]], which cannot be written with any small number of [[Knuth's up-arrow notation|Knuth arrows]]. This number is constructed with a technique similar to applying the Ackermann function to itself recursively.

This is a repeat of the above table, but with the values replaced by the relevant expression from the function definition to show the pattern clearly:

{| class="wikitable"
|+ Values of ''A''(''m'', ''n'')
|-
! ''m''\''n''
! 0
! 1
! 2
! 3
! 4
! n
|-
! 0
| 0+1 || 1+1 || 2+1 || 3+1 || 4+1 || <math>n + 1</math>
|-
! 1
| A(0,1) || A(0,A(1,0)) || A(0,A(1,1)) || A(0,A(1,2)) || A(0,A(1,3)) || <math>n + 2 = 2 + (n + 3) - 3</math>
|-
! 2
| A(1,1) || A(1,A(2,0)) || A(1,A(2,1)) || A(1,A(2,2)) || A(1,A(2,3)) || <math>2n + 3 = 2\cdot(n + 3) - 3</math>
|-
! 3
| A(2,1) || A(2,A(3,0)) || A(2,A(3,1)) || A(2,A(3,2)) || A(2,A(3,3)) || <math>2^{(n+3)} - 3</math>
|-
! 4
| A(3,1) || A(3,A(4,0)) || A(3,A(4,1)) || A(3,A(4,2)) || A(3,A(4,3)) ||
<math>\begin{matrix}\underbrace{{2^2}^{{\cdot}^{{\cdot}^{{\cdot}^2}}}} - 3 \\n\mbox{ + 3}\end{matrix}</math>
|-
! 5
| A(4,1) || A(4,A(5,0)) || A(4,A(5,1)) || A(4,A(5,2)) || A(4,A(5,3)) ||
''A''(4, ''A''(5, n-1))
|-
! 6
| A(5,1) || A(5,A(6,0)) || A(5,A(6,1)) || A(5,A(6,2)) || A(5,A(6,3)) ||
''A''(5, ''A''(6, n-1))
|}



==Expansion==
To see how the Ackermann function grows so quickly, it helps to expand out some simple expressions using the rules in the original definition. For example, we can fully evaluate <math>A(1, 2)</math> in the following way:

:<math>\begin{align}
A(1,2) & = A(0, A(1, 1))       \\
& = A(0, A(0, A(1, 0))) \\
& = A(0, A(0, A(0, 1))) \\
& = A(0, A(0, 2))       \\
& = A(0, 3)             \\
& = 4.
\end{align}</math>

To demonstrate how <math>A(4, 3)</math>'s computation results in many steps and in a large number:
:<math>\begin{align}
A(4, 3) & = A(3, A(4, 2))                                     \\
& = A(3, A(3, A(4, 1)))                               \\
& = A(3, A(3, A(3, A(4, 0))))                         \\
& = A(3, A(3, A(3, A(3, 1))))                         \\
& = A(3, A(3, A(3, A(2, A(3, 0)))))                   \\
& = A(3, A(3, A(3, A(2, A(2, 1)))))                   \\
& = A(3, A(3, A(3, A(2, A(1, A(2, 0))))))             \\
& = A(3, A(3, A(3, A(2, A(1, A(1, 1))))))             \\
& = A(3, A(3, A(3, A(2, A(1, A(0, A(1, 0)))))))       \\
& = A(3, A(3, A(3, A(2, A(1, A(0, A(0, 1)))))))       \\
& = A(3, A(3, A(3, A(2, A(1, A(0, 2))))))             \\
& = A(3, A(3, A(3, A(2, A(1, 3)))))                   \\
& = A(3, A(3, A(3, A(2, A(0, A(1, 2))))))             \\
& = A(3, A(3, A(3, A(2, A(0, A(0, A(1, 1)))))))       \\
& = A(3, A(3, A(3, A(2, A(0, A(0, A(0, A(1, 0)))))))) \\
& = A(3, A(3, A(3, A(2, A(0, A(0, A(0, A(0, 1)))))))) \\
& = A(3, A(3, A(3, A(2, A(0, A(0, A(0, 2))))))        \\
& = A(3, A(3, A(3, A(2, A(0, A(0, 3)))))              \\
& = A(3, A(3, A(3, A(2, A(0, 4)))))                   \\
& = A(3, A(3, A(3, A(2, 5))))                         \\
& = ...                                               \\
& = A(3, A(3, A(3, 13)))                              \\
& = ...                                               \\
& = A(3, A(3, 65533))                                 \\
& = ...                                               \\
& = A(3, 2^{65536} - 3)                               \\
& = ...                                               \\
& = 2^{2^{ \overset{65536}{} }} - 3.                  \\
\end{align}</math>

Written as a power of 10, this is roughly equivalent to 10<sup>6.031{{e|19727}}</sup>.

==Inverse==
Since the function  ''f'' (''n'') = ''A''(''n'', ''n'') considered above grows very rapidly, its [[inverse function]], ''f''<sup>-1</sup>, grows very slowly. This '''inverse Ackermann function''' ''f''<sup>-1</sup> is usually denoted by a. In fact, a(n) is less than 5 for any practical input size ''n'', since A(4, 4) is on the order of <math>2^{2^{10^{19729}}}</math>.

This inverse appears in the time [[computational complexity theory|complexity]] of some [[algorithm]]s, such as the [[disjoint-set data structure]] and [[Bernard Chazelle|Chazelle]]'s algorithm for [[minimum spanning tree]]s. Sometimes Ackermann's original function or other variations are used in these settings, but they all grow at similarly high rates. In particular, some modified functions simplify the expression by eliminating the ''-3'' and similar terms.

A two-parameter variation of the inverse Ackermann function can be defined as follows, where <math>\lfloor x \rfloor</math> is the [[floor function]]:
:<math>\alpha(m,n) = \min\{i \geq 1 : A(i,\lfloor m/n \rfloor) \geq \log_2 n\}.</math>
This function arises in more precise analyses of the algorithms mentioned above, and gives a more refined time bound. In the disjoint-set data structure, ''m'' represents the number of operations while ''n'' represents the number of elements; in the minimum spanning tree algorithm, ''m'' represents the number of edges while ''n'' represents the number of vertices.
Several slightly different definitions of a(''m'', ''n'') exist; for example, log<sub>2</sub> ''n'' is sometimes replaced by ''n'', and the floor function is sometimes replaced by a [[ceiling function|ceiling]].

Other studies might define an inverse function of one where m is set to a constant, such that the inverse applies to a particular row.<ref>[http://cat.inist.fr/?aModele=afficheN&cpsidt=15618233 An inverse-Ackermann style lower bound for the online minimum spanning tree verification problem] November 2002</ref>

==Use as benchmark==
The Ackermann function, due to its definition in terms of extremely deep recursion, can be used as a benchmark of a [[compiler]]'s ability to optimize recursion.  The first use of Ackermann's function in this way was by Yngve Sundblad, ''The Ackermann function. A Theoretical, computational and formula manipulative study.'' (BIT 11 (1971), 107119).

This seminal paper was taken up by Brian Wichmann (co-author of the [[Whetstone (benchmark)|Whetstone benchmark]]) in a trilogy of papers written between 1975 and 1982.<ref>{{cite web | title=Ackermann's Function: A Study In The Efficiency Of Calling Procedures | year = 1975 | url=http://history.dcs.ed.ac.uk/archive/docs/Imp_Benchmarks/ack.pdf}}</ref><ref>{{cite web | title=How to Call Procedures, or Second Thoughts on Ackermann's Function | year = 1977 | url=http://history.dcs.ed.ac.uk/archive/docs/Imp_Benchmarks/ackpe.pdf}}</ref><ref>{{cite web | title=Latest results from the procedure calling test, Ackermann's function | year = 1982 | url=http://history.dcs.ed.ac.uk/archive/docs/Imp_Benchmarks/acklt.pdf}}</ref>

For example, a compiler which, in analyzing the computation of ''A''(3, 30), is able to save intermediate values like ''A''(3, ''n'') and ''A''(2, ''n'') in that calculation rather than recomputing them, can speed up computation of ''A''(3, 30) by a factor of hundreds of thousands. Also, if ''A''(2, ''n'') is computed directly rather than as a recursive expansion of the form ''A''(1, ''A''(1, ''A''(1,...''A''(1, 0)...))), this will save significant amounts of time. Computing ''A''(1, ''n'') takes linear time in ''n''. Computing ''A''(2, ''n'') requires quadratic time, since it expands to [[Big O notation|O]](''n'') nested calls to ''A''(1, ''i'') for various ''i''. Computing ''A''(3, ''n'') requires time proportionate to 4<sup>''n''+1</sup>. The computation of ''A''(3, 1) in the example above takes 16 (4<sup>2</sup>) steps.

''A''(4, 2), which appears as a decimal expansion in several web pages, cannot possibly be computed by simple recursive application of the Ackermann function in any tractable amount of time. Instead, shortcut formulas such as ''A''(3, ''n'') = 8×2<sup>''n''</sup>-3 are used as an optimization to complete some of the recursive calls.

A practical method of computing functions similar to Ackermann's is to use [[memoization]]<!--NOT memorization--> of intermediate results. A compiler could apply this technique to a function automatically using [[Donald Michie]]'s "[[memo function]]s".<ref>[http://www.gtoal.com/plsql/ackerman-memo.pls.html Example: Explicit memo function version of Ackermann's function] implemented in PL/SQL</ref>{{Citation needed|date=February 2007}}

==Ackermann numbers==<!-- This section is linked from [[Googolplex]] -->
In ''The Book of Numbers'', [[John Horton Conway]] and [[Richard K. Guy]] define the sequence of '''Ackermann numbers''' to be 1?1, 2??2, 3???3, etc.;<ref>John Horton Conway and Richard K. Guy. [http://books.google.com/books?id=0--3rcO7dMYC&lpg=PA60&dq=%22Ackermann%20number%22&pg=PA60#v=onepage&q=%22Ackermann%20number%22&f=false ''The Book of Numbers'']. New York: Springer-Verlag, pp. 60-61, 1996. ISBN 978-0-387-97993-9</ref> that is, the n<sup>th</sup> Ackermann number is defined to be n?<sup>n</sup>n (''n'' = 1, 2, 3, ...), where m?<sup>k</sup>n is [[Knuth's up-arrow notation|Knuth's up-arrow]] version of the Ackermann function.

The first few Ackermann numbers are:
:* 1?1 = 1<sup>1</sup> = 1,
:* 2??2 = 2?2 = 2<sup>2</sup> = 4,
:* 3???3 = 3??3??3 = 3??(3?3?3) = <math>3\uparrow\uparrow3^{3^3} = 3\uparrow\uparrow7625597484987 = \underbrace{3^{3^{3^{3^{.^{.^{.^{3}}}}}}}}_{7625597484987{\rm\ threes}}</math>

The fourth Ackermann number, 4????4, can be written in terms of [[tetration]] towers as follows:

:4????4 = 4???4???4???4 = 4???4???(4??4??4??4)
:::<math> = \underbrace{~~^{^{^{^{^{^{^{^{4}.}.}.}4}4}4}4}4~~}_{\underbrace{~^{^{^{^{^{4}.}.}.}4}4~}_{^{^{^{^4}4}4}4 {\rm\ fours}} {\rm fours}}</math>

Explanation: in the middle layer, there is a tower of tetration whose full height is <math>^{^{^{^4}4}4}4</math> and the final result is the top layer of tetrated 4's whose full height equals the calculation of the middle layer. Note that by way of size comparison, the simple expression <sup>4</sup>4 already exceeds a [[googolplex]], so the fourth Ackermann number is quite large.

Alternatively, this can be written in terms of [[exponentiation]] towers as
:<math>4\uparrow\uparrow\uparrow\uparrow 4 = </math>
:<math>\quad</math>
:<math>
\left.
\begin{matrix} 4^{4^{\cdot^{\cdot^{\cdot^{\cdot^{4}}}}}}\end{matrix}
\right \}
\left.
\begin{matrix}4^{4^{\cdot^{\cdot^{\cdot^{4}}}}}\end{matrix}
\right \}
\dots
\left.
\begin{matrix}4^{4^{4^4}}\end{matrix}
\right \}
4,
</math>
:where the number of towers on the previous line (including the rightmost "4") is
:<math>
\left.
\begin{matrix}4^{4^{\cdot^{\cdot^{\cdot^{\cdot^{4}}}}}}\end{matrix}
\right \}
\left.
\begin{matrix}4^{4^{\cdot^{\cdot^{\cdot^{4}}}}}\end{matrix}
\right \}
\dots
\left.
\begin{matrix}4^{4^{4^4}}\end{matrix}
\right \}
4,
</math>
:where the number of towers on the previous line (including the rightmost "4") is
:<math>
\left.
\begin{matrix}4^{4^{\cdot^{\cdot^{\cdot^{4}}}}}\end{matrix}
\right \}
\left.
\begin{matrix}4^{4^{\cdot^{\cdot^{\cdot^{4}}}}}\end{matrix}
\right \}
\left.
\begin{matrix}4^{4^{4^4}}\end{matrix}
\right \}
4,
</math>
where the number of "4"s in each tower, on each of the lines above, is specified by the value of the next tower to its right (as indicated by a brace).

==See also==
* [[Computability theory]]
* [[Recursion (computer science)]]
* [[Primitive recursive function]]
* [[Double recursion]]

==References==
{{reflist|2}}

==External links==
* {{mathworld | urlname = AckermannFunction | title = Ackermann function}}
* {{DADS|Ackermann's function|ackermann}}
* [http://www.gfredericks.com/main/sandbox/arith/ackermann An animated Ackermann function calculator]
* [[Scott Aaronson]], ''[http://www.scottaaronson.com/writings/bignumbers.html Who can name the biggest number?]'' (1999)
* [http://www-users.cs.york.ac.uk/~susan/cyc/a/ackermnn.htm Ackermann function's]. Includes a table of some values.
* [http://forum.wolframscience.com/showthread.php?s=&threadid=579 Hyper-operations: Ackermann's Function and New Arithmetical Operation]
* [http://www.mrob.com/pub/math/largenum.html Robert Munafo's Large Numbers] describes several variations on the definition of ''A''.
* Gabriel Nivasch, [http://www.yucs.org/~gnivasch/alpha/index.html Inverse Ackermann without pain] on the inverse Ackermann function.
* Raimund Seidel, ''[http://cgi.di.uoa.gr/~ewcg06/invited/Seidel.pdf Understanding the inverse Ackermann function]'' (PDF presentation).
* [http://rosettacode.org/wiki/Ackermann_Function The Ackermann function written in different programming languages], (on [[Rosetta Code]])
* [http://www.geocities.com/hjsmithh/Ackerman/index.html Ackermann's Function] ([http://www.webcitation.org/5km8K6GSP Archived] 2009-10-24) - some study and programming by Harry J. Smith

{{DEFAULTSORT:Ackermann Function}}
[[Category:Arithmetic]]
[[Category:Large integers]]
[[Category:Special functions]]
[[Category:Theory of computation]]
[[Category:Recursion theory]]

{{Link FA|de}}
{{Link FA|es}}

[[ca:Funció d'Ackermann]]
[[cs:Ackermannova funkce]]
[[de:Ackermannfunktion]]
[[es:Función de Ackermann]]
[[eo:Akermana funkcio]]
[[fa:???? ?????]]
[[fr:Fonction d'Ackermann]]
[[ko:??? ??]]
[[it:Funzione di Ackermann]]
[[he:???????? ?????]]
[[hu:Ackermann-függvény]]
[[nl:Ackermannfunctie]]
[[ja:????????]]
[[pms:Fonsion d'Ackermann]]
[[pl:Funkcja Ackermanna]]
[[pt:Função de Ackermann]]
[[ru:??????? ?????????]]
[[sr:?????????? ????????]]
[[fi:Ackermannin funktio]]
[[sv:Ackermanntalen]]
[[tr:Ackermann islevi]]
[[uk:??????? ????????]]
[[vi:Hàm s? Ackermann]]
[[zh:?????]]</text>
</page>
<page>
<id>817</id>
<title>Acklam Grange Secondary School</title>
<text>{{Unreferenced|date=May 2009}}
'''Acklam Grange School''' is a [[Specialist school|specialist college]] of mathematics and computing, situated at the end of Lodore Grove, [[Acklam, Middlesbrough|Acklam]], [[Middlesbrough]].  It opened in 1952 and has gone through many changes, being first Hugh Bell School, then [[Acklam, Middlesbrough#Stainsby|Stainsby]] School, and currently Acklam Grange [[High school|Secondary School]].

The current Headteacher is John Bate, and together with his leadership team he has been responsible for much revolutionizing of the school and its' policies. 

The school is one of the few in the area that have continue to be a part of [[Building Schools for the Future]] after announced spending cuts by the Government.

== Facilities ==
On the site of the School is the [http://www.mclc.org.uk/ Middlesbrough City Learning Centre], providing specialist [[Information and Communications Technology|ICT]] facilities for the school and others in the area.  The centre is located on the Lodore side of school; there is also the Acorn Centre, a local sports centre, situated at the Heythrop entrance. 

== New Build ==

As of 6th September 2010, the school is open to pupils. Prior to this, pupils had involvement in areas ranging from landscaping to the naming of select areas. This has helped to make the school right for the pupils, as befits a Building Schools for the Future school.

The old school (consisting of the former Oaklands and Stainsby school) is due to be demolished from August 2010 to December 2010. It will be replaced by a carpark and landscaping to lead up to the school from the Lodore Grove entrance.

== [http://www.acklamgrange.org.uk/acorn/index.htm Acorn Centre] ==

The Acorn Centre is a £2.2 million sport and inclusion{{Clarify|date=November 2009}} facility which was opened in late January 2005 following its official launch by Gary Pallister (former Middlesbrough and England International footballer) and Councillor Hazel Pearson OBE. Situated on the site of Acklam Grange School, a specialist college of Mathematics and Computing in West Middlesbrough. The development has been made possible due to receiving significant investment from Acklam Grange School, Middlesbrough Council, The West Middlesbrough Neighbourhood Trust (WMNT) and The Big Lottery Fund.

The Acorn Centre is a Dual Use facility for local school and community networks.

The new building is currently being constructed on the playing fields opposite the school by contractors Wilmott Dixon. The build is expected to open in September 2010 and has cost over £27 million.

==Notable past pupils==
*[[Pete Firman]] - Comedian/Magician
*[[Journey South]] - Singing Duo
*[[Stephen Mark Barchan]] - Composer
*[[Chris Rea]] Singer


{{Coord|54.54489|-1.26401|display=title}}

[[Category:Education in Middlesbrough]]
[[Category:Educational institutions established in 1952]]
[[Category:Mathematics and Computing Colleges in England]]
[[Category:Comprehensive schools in North Yorkshire]]


{{Tees-school-stub}}</text>
</page>
<page>
<id>818</id>
<title>Acknowledgment (creative arts)</title>
<text>
In the [[Creative Arts|creative arts]] and [[scientific literature]], an '''acknowledgment''' (also spelled '''acknowledgement''') is an expression of gratitude for assistance in creating a literary or artistic work. 

Receiving [[credit (creative arts)|credit]] by way of acknowledgment rather than authorship indicates that the person or organization did not have a direct hand in producing the work in question, but may have contributed funding, criticism, or encouragement to the author(s).  Various schemes exist for classifying acknowledgments; Giles & Councill (2004) give the following six categories:
# [[moral support]]
# [[funding|financial support]]
# [[editing|editorial support]]
# [[presentation|presentational support]]
# [[technical support|instrumental/technical support]]
# [[conceptual support]], or [[peer interactive communication]] (PIC)
Apart from [[citation]], which is not usually considered to be an acknowledgment, acknowledgment of conceptual support is widely considered to be the most important for identifying intellectual debt.  Some acknowledgments of financial support, on the other hand, may simply be legal formalities imposed by the granting institution.

==References==

*Isaac G. Councill, C. Lee Giles, Hui Han, and Eren Manavoglu. [http://portal.acm.org/citation.cfm?id=1088622.1088627 Automatic Acknowledgement Indexing: Expanding the Semantics of Contribution in the CiteSeer Digital Library]. In ''Proceedings of the Third International Conference on Knowledge Capture (K-CAP 2005)''.  ACM Press, New York, NY, 19–26.  ISBN 1-59593-163-5.
*C. Lee Giles and Isaac G. Councill. [http://clgiles.ist.psu.edu/papers/PNAS-2004-Acknowledgements.pdf Who gets acknowledged: Measuring scientific contributions through automatic acknowledgment indexing]. In ''[[Proceedings of the National Academy of Sciences]]'' 101(51):17599–17604, 21 December 2004.  ISSN 0027-8424.

==See also==
*[[Acknowledgment index]]
*[[Attribution]]
*[[Authorship]]
*[[Citation]]
*[[Credit (creative arts)]]
{{Book structure}}
[[Category:Arts]]
[[Category:Writing]]
[[Category:Academic publishing]]
[[Category:Collaboration]]

[[ta:????????? (????)]]</text>
</page>
<page>
<id>854</id>
<title>ActivMedia Robotics</title>
<text>{{Unreferenced|date=December 2008}}
{{Cleanup|date=December 2008}}

[[Image:ActivMedia Pioneer 3-AT robot.jpg|thumb|An ActivMedia Pioneer 3-AT robot at the [[Georgia Institute of Technology]]]]
[[Image:Seekur.jpg|thumb]] 
[[Image:Pioneer 3-AT in Gazebo.png|thumb|A Pioneer 3-AT robot in the [[Player Project|Gazebo]] 3D robot simulator with a [[Sick AG|SICK]] [[laser rangefinder]] mounted on top]]

'''ActivMedia Robotics''', former name of '''MobileRobots Inc''', is a company in [[Amherst, New Hampshire|Amherst]], [[New Hampshire]] that designs and manufactures [[autonomous robot]]s, commercial [[service robot]]s, [[robot software]] and navigation systems for robot developers and manufacturers.<ref>http://www.robots-dreams.com/2006/03/the_story_behin.html</ref>

Founded in 1995, it was an early developer of [[autonomous robots]] ubiquitous to universities and often the first serious robot used by students involved in learning to be roboticists, as evidenced by the fact that it was chosen by Microsoft as the reference platform on which to implement their new Robotics SDK and is supported by [[ROS]] and Player Stage Robot APIs.

Following in the footsteps of Cybermotion and MDARS-I, the company developed [[security robots]], but with more powerful computers and new autonomous techniques such as SLAM, Monte Carlo/Markov localization and modified value-iterated search path planning to create a new generation of [[autonomous robots]] for delivery and security purposes in hospitals, offices, labs and other buildings.<ref>* [http://search2.foxnews.com/search?access=p&getfields=*&sort=date%3AD%3AS%3Ad1&output=xml_no_dtd&ie=UTF-8&client=my_frontend&filter=0&site=video&proxystylesheet=my_frontend&q= Company Leads the Way in Robot Innovation, 2007-12-12 FOX News video]</ref> 

MobileRobots has also been a pioneer in flexible intelligent AGV applications, designing the Motivity control system used by [http://www.rmtrobotics.com RMT Robotics] to develop its ADAM iAGV (Self-Guided Vehicle), used for complex pick-n-place operations, in conjunction with gantry systems and [[industrial robot]] arms, used in first-tier auto supply factories to move products from process to process in non-linear layouts. Smaller versions also work in semi-conductor plant clean rooms, carrying product from workstation to workstation.

In 2007, the company released a unique omni-directional Seekur security rover. The omni-directional wheels let it drive sideways as well as forwards and back, to perform in tight spaces. In early 2008, Seekur demonstrated autonomous navigation in GPS-blocked spaces around buildings.

In 2009, the company expanded the capabilities of its Motivity robot autonomy to enable fleets to behave more like people, following site-specific traffic rules and varying its speech and other aspects of its "personality" in ways appropriate to its workplace.

On June 14, 2010 MobileRobots Inc. was acquired by [[Adept Technology]]<ref name="adeptacqmobrob">{{cite web| title = Adept Technology Announces Acquisition Of Leading Autonomous Mobile Robot Provider| url =http://go.adept.com/content/adeptacqmobrob06142010 | accessdate    = 2008-07-09}}</ref>. Since then the company has been testing [http://ir.adept.com/releasedetail.cfm?releaseid=522983 mobile conveyor robots] and [http://www.nytimes.com/2010/09/05/science/05robots.html?pagewanted=all telepresence systems] for use in corporate and hospital settings.

* [[Bill Kennedy (computer scientist)|William P. Kennedy, PhD, Co-Founder]]

==External links==
*[http://www.mobilerobots.com/ Official website, MobileRobots Inc]
*[http://www.adept.com/ Official website, Adept Technology, Inc]
*[http://users.aber.ac.uk/jnw/CS364/4.php A class project using the company's technology]
*[http://www.automatedbuildings.com/news/may04/interviews/dietsch.htm Automated  Buildings: Interview with Jeanne Dietsch, CEO, ActivMedia Robotics]
*[http://www.manufacturing.net/ctl/article/CA452753.html Control Engineering: "ESC 2004: ActivMedia, VersaLogic embed intelligence in mobile robot"]
*[http://www.adamsgv.com/ Official Website, RMT Robotics' ADAM, The Self-Guided Vehicle]

==References==
{{reflist}}


{{DEFAULTSORT:Activmedia Robotics}}
[[Category:Robotics companies]]
[[Category:Companies based in Hillsborough County, New Hampshire]]</text>
</page>
<page>
<id>864</id>
<title>ActiveVideo Networks</title>
<text>{{Infobox company
|company_name     = ActiveVideo Networks, Inc.
|company_logo     = [[Image:AVNetworksLogo 72dpi Web w200pxl.png]]
|company_type     = Privately held
|location_city    = San Jose, California, United States
|key_people       = Jeff Miller (CEO, president), John Callahan (CTO), Christine Munson (CFO), Michael Taylor (SVP, Business Development), Terry Shaftel (SVP, Program Management), Edgar Villalpando (SVP, Marketing), Ronald Brockmann (Managing Director, Europe)<ref>[http://activevideo.com/company_management.php ActiveVideo Networks–Management Team]</ref>.
|industry         = Interactive TV
|products         = CloudTV
|homepage         = [http://www.activevideo.com www.ActiveVideo.com] 
}}

'''ActiveVideo Networks''' is a software company based in [[San Jose, California]], that enables “cloud-based” [[interactive television]] programming <ref>[http://www.activevideo.com ActiveVideo Networks homepage]</ref>.

== History and overview ==
ActiveVideo's [[CloudTV]]™ platform enables [[Content development|content developers]] to store and process video content in the network “cloud” <ref>{{cite web |url=http://latimesblogs.latimes.com/technology/2010/01/ces-hook-up-internet-tv-without-getting-a-new-box.html |title=CES: Hook Up Internet TV Without Getting a New Box |date=January 8, 2010 |publisher=Los Angeles Times}}</ref>. CloudTV delivers both traditional [[television]] and Web-based content to cable digital [[set-top box]]es, Web-connected [[consumer electronics]] devices and [[CI Plus]]-enabled televisions as a single [[MPEG]] stream <ref>{{cite web |url=http://www.highdefdigest.com/news/show/ActiveVideo/CES_2010/CloudTV/Streaming_Content/CES_2010:_Hands_on_with_ActiveVideo%E2%80%99s_CloudTV/4037 |title=CES 2010: Hands on with ActiveVideo’s CloudTV |publisher=High-Def Digest |date=January 8, 2010}}</ref><ref>{{cite web |url=http://itvt.com/interview/5951/radio-activevideos-jeff-miller-companys-work-cablevision-time-warner-cable-and-more |title=Radio: ActiveVideo’s Jeff Miller on the Company’s Work with Cablevision, Time Warner Cable, and More |publisher=InteractiveTV Today—itvt |date=October 29, 2009}}</ref>. CloudTV combines the personalized, social Web experience with the immediacy and [[Remote control|remote-control]] navigation of television, and requires a small-footprint [[software client]] on the end user device <ref>{{cite web |url=http://itvt.com/interview/5951/radio-activevideos-jeff-miller-companys-work-cablevision-time-warner-cable-and-more |title=Radio: ActiveVideo’s Jeff Miller on the Company’s Work with Cablevision, Time Warner Cable, and More |publisher=InteractiveTV Today—itvt |date=October 29, 2009}}</ref>.

ActiveVideo Networks is the product of a 2006 merger between [[ICTV (TV)|ICTV]], a pioneer in interactive television content and platforms, and Switched Media, a developer of solutions for the [[customization]] of [[Video streaming|video streams]] within the compressed domain <ref>{{cite web |url=http://www.cedmagazine.com/article.aspx?id=52440 |title=ICTV acquires Switched Media |publisher=CED |date=February 7, 2006}}</ref>. The company was rechristened as ActiveVideo Networks in 2008 <ref>{{cite web |url=http://newteevee.com/2008/05/17/ictv-is-now-activevideo-networks/ |title=ICTV Is Now ActiveVideo Networks |publisher=NewTeeVee |date=May 17, 2008}}</ref>. In 2009, the company established a presence in Europe with the acquisition of Avinity Systems, B.V.<ref>{{cite web |url=http://www.multichannel.com/article/277515-ActiveVideo_Snaps_Up_Dutch_ITV_Firm.php?q=Avinity |title=ActiveVideo Snaps Up Dutch iTV Firm |publisher=Multichannel News |date=June 1, 2009}}</ref>.

At the end of 2009, the CloudTV system was in approximately five million homes through cable and [[IPTV]] providers such as [[Cablevision]] Systems Corporation, Oceanic Time Warner Cable and [[PCCW]] <ref>{{cite web |url=http://www.lightreading.com/blog.asp?blog_sectionid=419&doc_id=183923&site=cdn |title=ActiveVideo's Year of Reckoning |publisher=Cable Digital News |date= October 30, 2009}}</ref>; the company expects CloudTV to be in 10 million homes by the end of 2010 <ref>{{cite web |url=http://itvt.com/story/6412/activevideo-signs-trailer-park-first-major-content-developer-its-cloudtv-platform |title=ActiveVideo Signs Up Trailer Park as First Major Content Developer for its CloudTV Platform |publisher=InteractiveTV Today—itvt |date=January 25, 2010}}</ref>.

== Expanding partnership with Cablevision ==
In February 2010, ActiveVideo's technology was used to power a Cablevision digital cable interactive channel dedicated to the 2010 Vancouver Olympic Games. The channel provided a mosaic of small video images that offered one-click, instant access to coverage on NBCU's various networks, along with supplemental Olympics content <ref>{{cite web |url=http://www.broadcastingcable.com/article/448950-Cablevision_Provides_Interactive_Multiplatform_Olympic_Coverage.php |title=Cablevision Provides Interactive, Multiplatform Olympic Coverage |publisher=Broadcasting & Cable |date=February 11, 2010}}</ref>. The channel was available to all Cablevision customers with a digital set-top box <ref>{{cite web |url=http://www.cedmagazine.com/News-ActiveVideo-Cablevision-Olympics-coverage-021210.aspx?wnnvz=1749,01295804030 |title=ActiveVideo enhances Cablevision’s Olympics coverage |publisher=CED Magazine |date=February 12, 2010}}</ref>. ActiveVideo powered a similar interactive mosaic channel for Time Warner Cable’s Oceanic system in Hawaii <ref>{{cite web |url=http://www.lightreading.com/document.asp?doc_id=187931&site=lr_cable |title=Winter Games Go Interactive… for Some TV Viewers |publisher=Light Reading |date=February 12, 2010}}</ref>. ActiveVideo revealed that the mosaic application and the platform through which all of the content was made available was the same ActiveVideo technology employed by Time Warner Cable's Oceanic system during the 2008 Summer Olympics, and that several other unidentified cable operators were using the ActiveVideo platform to provide similar 2010 Vancouver Olympics coverage <ref>{{cite web |url=http://www.cedmagazine.com/News-ActiveVideo-Cablevision-Olympics-coverage-021210.aspx?wnnvz=1749,01295804030 |title=ActiveVideo enhances Cablevision’s Olympics coverage |publisher=CED Magazine |date=February 12, 2010}}</ref>.

Two published cable trade magazine reports in February 2010 speculated, but did not confirm, that ActiveVideo technology was being used to power a new Cablevision service to be tested in June 2010 called PC to TV Media Relay, which the cable operator said will deliver media sourced from a cable subscriber's PC (such as iTunes content, digital photos, and Web video) to digital set-top boxes, and from there onto the subscriber's TV screen <ref>{{cite web |url=http://www.broadcastingcable.com/article/449355-Cablevision_Launches_Web_to_TV_Product.php?rssid=20065 |title=Cablevision Launches Web-to-TV Product |publisher=Broadcasting & Cable |date=February 24, 2010}}</ref><ref>{{cite web |url=http://www.lightreading.com/document.asp?doc_id=188331&site=lr_cable& |title=Cablevision to Deliver Net Content to Set-Tops |publisher=Light Reading |date=February 24, 2010}}</ref>. Cablevision confirmed in May 2010 that it has used ActiveVideo’s CloudTV platform to launch over two dozen new interactive channel experiences for its digital cable subscribers, including hyper-local sports, news and children’s channels, advertising showcases and mosaic programming, and that additional channels including more personalized content and hyper-targeted advertising are in development. Examples include MSG Varsity Interactive, News12 Interactive, and several navigational mosaic channels called iO Quick Views <ref>{{cite web |url=http://www.broadcastingcable.com/article/452415-ActiveVideo_Powers_Cablevision_Interactive_Apps.php |title=ActiveVideo Powers Cablevision Interactive Apps |publisher=Broadcasting & Cable |date=May 10, 2010}}</ref>.

== Consumer electronics strategy ==
In December 2009, ActiveVideo announced that it was extending availability of the CloudTV platform to consumer electronics devices such as HDTVs, Blu-ray players, media servers, game consoles and mobile devices<ref>{{cite web |url=http://www.twice.com/article/441083-ActiveVideo_Advances_CloudTV_CE_Strategy.php?rssid=20328&q=activevideo |title=ActiveVideo Advances CloudTV Strategy |publisher=TWICE |date=December 18, 2009}}</ref>.

== Partnership with Blockbuster ==
In January 2010, [[Blockbuster Inc.|Blockbuster]] announced that it will use CloudTV to provide a Web-based interface for its Blockbuster On Demand movie service across multiple connected platforms <ref>{{cite web |url=http://www.broadcastnewsroom.com/articles/viewarticle.jsp?id=948306 |title=Blockbuster Inks Deal with ActiveVideo |publisher=Broadcast Newsroom |date=January 6, 2010}}</ref>.

== Partnership with Trailer Park ==
In January 2010, ActiveVideo signed a deal with entertainment [[marketing]] agency [[Trailer Park, Inc.|Trailer Park]], under which Trailer Park's Advanced Content group became the first major content developer to officially embrace CloudTV <ref>{{cite web |url=http://itvt.com/story/6412/activevideo-signs-trailer-park-first-major-content-developer-its-cloudtv-platform |title=ActiveVideo Signs Up Trailer Park as First Major Content Developer for its CloudTV Platform |publisher=InteractiveTV Today—itvt |date=January 25, 2010}}</ref>.

== Developments at ANGA Cable Show 2010 ==
At the ANGA Cable Show in May 2010, ActiveVideo demonstrated its iPhone Remote Control App, which enables gesture-based interactivity; improved keyboarding, navigation, and search and discovery; and the ability to upload photos on a cable subscriber's TV. The company claimed this “touch-navigated” app can be used in combination with any smartphone or web device, and can bring two-way functionality to existing one-way cable operator networks <ref>{{cite web |url=http://www.broadbandtvnews.com/2010/04/28/activevideo-showcases-iphone-controlled-interactive-tv/ |title=ActiveVideo shows iPhone-controlled interactive TV |publisher=Broadband TV News |date=April 28, 2010}}</ref>. ActiveVideo also announced at ANGA an integraton partnership with SMiT, a provider of conditional access modules to European cable operators like Kabel Deutschland and Ziggo, in which ActiveVideo’s CloudTV platform works with SMiT’s CI Plus modules. ActiveVideo demonstrated how Cloud TV can enable operator-branded menus on CI Plus-enabled TVs, including TVs without set-top boxes when combined with the Ethernet or WiFi connectivity of the host TV as a return channel. The integration also supported ActiveVideo’s iPhone Remote Control App <ref>{{cite web |url=http://www.cable360.net/ct/news/thewire/SMiT-and-ActiveVideo-Partner-for-Demo-at-ANGA_41185.html |title=SMiT and ActiveVideo Partner for Demo at ANGA |publisher=Communications Technology |date=May 4, 2010}}</ref>.

== Acquisition of TAG Networks ==
ActiveVideo expanded its relationship with games-on-demand provider TAG Networks in January 2010, with the goal of bringing TAG content to broadband-connected consumer electronics devices <ref>{{cite web |url=http://www.broadbandgear.net/archives/bgr/2010/012110/products.cfm#6 |title=ActiveVideo Expands Relationship with TAG Networks |publisher=Broadband Gear Report |date=January 21, 2010}}</ref>. In May 2010, ActiveVideo formalized the relationship by acquiring TAG Networks <ref>{{cite web |url=http://newteevee.com/2010/05/05/activevideo-adds-gaming-with-tag-networks-acquisition/ |title=ActiveVideo Adds Gaming With TAG Networks Acquisition |publisher=NewTeeVee |date=May 5, 2010}}</ref>. With this transaction, ActiveVideo expressed its intention to expand the availability of on-demand games through cable set-top boxes by adding TAG’s casual gaming capabilities to its CloudTV platform, and enabling developers to create games that can be accessed directly through set-top boxes, Internet-connected TVs and other IP-capable consumer electronics devices. Although terms of the deal were not disclosed, it was announced that the TAG Networks management team and staff would join ActiveVideo, and that the TAG offices would move from Mountain View, Calif., to ActiveVideo's headquarters in San Jose <ref>{{cite web |url=http://sanjose.bizjournals.com/sanjose/stories/2010/05/03/daily60.html |title=ActiveVideo acquires TAG Networks |publisher=San Jose Business Journal |date=May 5, 2010}}</ref>.

== NCTA Cable Show 2010: iVOD ==
At the NCTA Cable Show in May 2010, ActiveVideo demonstrated how its CloudTV platform can enable [[iVOD]] applications that would allow cable operators to enhance their video-on-demand (VOD) services. Such proposed services would provide subscribers with unified content across multiple platforms, a higher degree of personalization, improved recommendations to other content, and social networking functions. ActiveVideo’s demonstration proposes to bring linear television, VOD, interactive TV, Web video, casual games, advertising and user-generated content into one interface <ref>{{cite web |url=http://www.itvt.com/story/6754/activevideo-networks-outline-ivod-concept-ncta-cable-show |title=ActiveVideo Networks to Outline "iVOD" Concept at NCTA Cable Show |publisher=ITVT |date=May 11, 2010}}</ref>.

ActiveVideo also announced a joint initiative with advanced advertising technology provider This Technology at The Cable Show that the companies said would enable cable operators and programmers to derive increased monetization and control over iVOD advertising. Under the initiative, ActiveVideo's CloudTV platform and This Technology's Metamore and Spotbuilder software will be paired to create an SCTE-130-compliant ad serving and delivery solution for operators and programmers that dynamically targets traditional, Web-based and interactive advertising in conjunction with viewers' VOD activity <ref>{{cite web |url=http://itvt.com/story/6764/activevideo-networks-technology-team-dynamic-advertising-solution-ivod |title=ActiveVideo Networks, This Technology Team on Dynamic Advertising Solution for "iVOD" |publisher=ITVT |date=May 12, 2010}}</ref>.

== References ==
{{Reflist}}

== External links ==
* [http://www.activevideo.com ActiveVideo Networks homepage]

{{DEFAULTSORT:Activevideo Networks}}
[[Category:Interactive television]]
[[Category:Cloud computing]]</text>
</page>
<page>
<id>865</id>
<title>ActiveX Document</title>
<text>{{Context|date=January 2008}}
{{Expert-subject-multiple|Computing|Microsoft Windows|date=February 2009}}
'''ActiveX Document''' (also known as '''DocObject''' or '''DocObj''')<ref>[http://www.pcmag.com/encyclopedia_term/0,2542,t=ActiveX+Documents&i=37473,00.asp Definition of ActiveX Documents]</ref> is a [[computer file]] in the form of a [[compound document|compound (text-based)]] document that allows{{Clarify|date=February 2009}} a container application{{Vague|date=February 2009}} to use the full capabilities of server applications.{{ambig}} This approach{{Clarify|date=February 2009}} distinguishes between a document, such as a word document or [[video clip]], and the software that can be [[Application software|applied]] (open, edit, display, save) to the document. [[ActiveX]] documents consist of two components: the 'document' itself ''and'' the 'ActiveX DLL or EXE server' that supports it.

A single [[server (computing)|server]] can support an unlimited number of documents, just as [[Microsoft Word]] can support any number of document files. The server for an ActiveX document can be an EXE or a DLL server. The document generally has the extension .VBD, though ActiveX documents can be stored within other files as well, using a mechanism{{ambig}} called [[Object Linking and Embedding|OLE]] [[structured storage]].

==References==
{{reflist}}

==External links==
*[http://pntpm3.ulb.ac.be/Info/Activex/ch23.htm ActiveX document fundamentals]

{{Microsoft Windows components}}

[[Category:Microsoft initiatives]]
[[Category:Windows software]]
[[Category:Windows software stubs]]


{{Windows-software-stub}}</text>
</page>
<page>
<id>875</id>
<title>Active database</title>
<text>{{orphan|date=November 2009}}

An '''Active Database''' is a [[database]] that includes an event driven architecture (often in the form of [[Event Condition Action|ECA rules]]) which can respond to conditions both inside and outside the database.  Possible uses include security monitoring, alerting, statistics gathering and authorization.

Most modern relational databases include active database features in the form of [[Database trigger|SQL Triggers]].

==See also==
*[[Event-driven architecture]]

==References==
*{{cite journal|last=Paton|first=Norman W|coauthors=Díaz, Oscar|title=Active database systems|journal=ACM Computing Surveys |year=1999|volume=31|issue=1|pages=63–103|doi=10.1145/311531.311623|url=http://portal.acm.org/citation.cfm?id=311623|accessdate=8 July 2010|publisher=ACM|location=NY, USA|issn=0360-0300}}
*{{cite web|title=Active Database|url=http://it.toolbox.com/wiki/index.php/Active_Database|publisher=IT Toolbox|accessdate=8 July 2010}}

{{Use dmy dates|date=October 2010}}

{{DEFAULTSORT:Active Database}}
[[Category:Databases]]


{{Database-stub}}</text>
</page>
<page>
<id>897</id>
<title>Activity diagram</title>
<text>[[Image:Activity conducting.svg|thumb|upright=2|UML 1.x Activity diagram for a guided [[brainstorming]] [[process]]]]

'''Activity diagrams''' are graphical representations of [[workflow]]s of stepwise activities and actions with support for choice, iteration and concurrency.<ref>[http://highered.mcgraw-hill.com/sites/0077110005/student_view0/glossary.html Glossary of Key Terms] at McGraw-hill.com. Retrieved 20 July 2008.</ref> In the [[Unified Modeling Language]], activity diagrams can be used to describe the business and operational step-by-step [[workflow]]s of components in a system. An activity diagram shows the overall flow of control.

== Construction ==
Activity diagrams are constructed from a limited repertoire of shapes, connected with arrows.  The most important shape types:
* ''rounded rectangles'' represent ''activities'';
* ''diamonds'' represent ''decisions'';
* ''bars'' represent the start (''split'') or end (''join'') of concurrent activities;
* a ''black circle'' represents the start (''initial state'') of the workflow;
* an ''encircled black circle'' represents the end (''final state'').
Arrows run from the start towards the end and represent the order in which activities happen.

Hence they can be regarded as a form of [[flowchart]].  Typical flowchart techniques lack constructs for expressing concurrency.  However, the join and split symbols in activity diagrams only resolve this for simple cases; the meaning of the model is not clear when they are arbitrarily combined with decisions or loops.

While in UML 1.x, activity diagrams were a specialized form of state diagrams, in UML 2.x, the activity diagrams were reformalized to be based on [[Petri net]]-like semantics, increasing the scope of situations that can be modeled using activity diagrams. These changes cause many UML 1.x activity diagrams to be interpreted differently in UML 2.x

== '''Applications''' ==
In [[Systems Modeling Language|SysML]] the activity diagram has been extended to indicate flows among steps that convey physical matter (e.g., gasoline) or energy (e.g., torque, pressure). Additional changes allow the diagram to better support continuous behaviors and continuous data flows.

== Alternatives ==
In UML 1.x, an alternative to activity diagrams is the [[State_diagram#UML state diagram|UML State diagram]], in which states can be used to represent activities (namely the state of that activity being performed), and transitions represent the start or completion of activities.

This mapping of activity diagram features to state diagram were formalized in UML 1.x, leaving activity diagrams little more that the use of state machines to capture behavior and partially concurrent behavior within a work flow.

Despite the (small) advantages of using UML 1.x activity diagram over state machines, such as the ability to cover the behaviors of collaborating elements, while state machines are limited to a single element, many modelers continued using state diagrams. State machines were attractive to use as the states may also represent conditions that hold before or after the activities. Activity diagrams and state diagram had similar abilities to express concurrency, though the run-to-completion (RTC) semantics of State machines limited the expressiveness of the concurrency.  

Perhaps the most important reason why state machines were more popular in UML 1.x over activity diagrams was that the tool vendors were slow to implement robust activity diagram capabilities.     

With UML 2.x, the foundation of activity diagram changed from being based on state-machine semantics to now being based on [[Petri net]] semantics. This vastly expand the number of circumstances where activity diagrams are more appropriate to capture the paths of work flow in a system. Now with the advent of robust activity diagram implementations, activity diagrams are now generally used more than state machine diagrams.

==See also==
* [[Control flow graph]]
* [[Data flow diagram]]
* [[Event-driven process chain]]
* [[Petri net]]
* [[List of UML tools]]
* [[State diagram]]
* [[Pseudocode]]
* [[Business Process Modeling Notation]]

== References ==
{{reflist}}

== External links ==
{{commons cat|Activity diagrams}}
*[http://www.omg.org/technology/documents/formal/uml.htm UML 2.0 Specification Documents]
*[http://www.agilemodeling.com/artifacts/activityDiagram.htm Introduction to UML 2 Activity Diagrams]
*[http://www.uml-diagrams.org/activity-diagrams.html UML 2 Activity Diagrams]

{{UML}}

{{DEFAULTSORT:Activity Diagram}}
[[Category:UML diagrams]]
[[Category:SysML]]

{{uml-stub}}

[[cs:Diagram aktivit]]
[[de:Aktivitätsdiagramm]]
[[es:Diagrama de actividades]]
[[fr:Diagramme d'activité]]
[[it:Activity diagram]]
[[lt:Veiklos diagrama]]
[[nl:Activiteitendiagram]]
[[ja:????????]]
[[pl:Diagram czynnosci]]
[[pt:Diagrama de atividade]]
[[ru:????????? ????????????]]
[[sk:Diagram aktivít]]
[[fi:Aktiviteettikaavio]]
[[tr:Faaliyet Diyagrami]]
[[uk:???????? ??????????]]</text>
</page>
<page>
<id>898</id>
<title>Activity recognition</title>
<text>'''Activity recognition''' aims to recognize the actions and goals of one or more agents from a series of observations on the agents' actions and the environmental conditions. Since the 1980s, this research field has captured the attention of several [[computer science]] communities due to its strength in providing personalized support for many different applications and its connection to many different fields of study such as medicine, human-computer interaction, or sociology.

To understand activity recognition better, consider the following scenario. An elderly man wakes up at dawn in his small studio apartment, where he stays alone. He lights the stove to make a pot of tea, switches on the toaster oven, and takes some bread and jelly from the cupboard. After taking his morning medication, a computer-generated voice gently reminds him to turn off the toaster. Later that day, his daughter accesses a secure website where she scans a check-list, which was created by a sensor network in her father's apartment. She finds that her father is eating normally, taking his medicine on schedule, and continuing to manage his daily life on his own. That information puts her mind at ease.

Many different applications have been studied by researchers in activity recognition; examples include assisting the sick and disabled. For example, Pollack et al.<ref>Pollack, M.E., and et al., L. E. B. 2003. "Autominder: an intelligent cognitive orthotic system for people with memory impairment". ''Robotics and Autonomous Systems'' 44(3-4):273–282.</ref> show that by automatically monitoring human activities, home-based rehabilitation can be provided for people suffering from traumatic brain injuries. One can find applications ranging from security-related applications and logistics support to location-based services. Due to its many-faceted nature, different fields may refer to activity recognition as plan recognition, goal recognition, intent recognition, behavior recognition, location estimation and location-based services.

==Types of activity recognition==
===Sensor-based, single-user activity recognition===
[[Sensor]]-based activity recognition integrates the emerging area of sensor networks with novel [[data mining]] and [[machine learning]] techniques to model a wide range of human activities.<ref>Tanzeem Choudhury, Gaetano Borriello, et al. The Mobile Sensing Platform: An Embedded System for Activity Recognition. Appears in the IEEE Pervasive Magazine - Special Issue on Activity-Based Computing, April 2008.</ref> Mobile devices (e.g. smart phones) provide sufficient sensor data and calculation power to enable physical activity recognition to provide an estimation of the energy consumption during everyday life. Sensor-based activity recognition researchers believe that by empowering [[ubiquitous computing|ubiquitous computers]] and sensors to monitor the behavior of agents (under consent), these computers will be better suited to act on our behalf.

====Levels of sensor-based activity recognition====
Sensor-based activity recognition is a challenging task due to the inherent noisy nature of the input. Thus, [[statistical modeling]] has been the main thrust in this direction in layers, where the recognition at several intermediate levels is conducted and connected. At the lowest level where the sensor data are collected, statistical learning concerns how to find the detailed locations of agents from the received signal data. At an intermediate level, [[statistical inference]] may be concerned about how to recognize individuals' activities from the inferred location sequences and environmental conditions at the lower levels. Furthermore, at the highest level a major concern is to find out the overall goal or subgoals of an agent from the activity sequences through a mixture of logical and statistical reasoning. Scientific conferences where activity recognition work from wearable and environmental often appears are [[ISWC]] and [[UbiComp]].

===Sensor-based, multi-user activity recognition===
Recognizing activities for multiple users using on-body sensors first appeared in the work by ORL using active badge systems <ref>Want R., Hopper A., Falcao V., Gibbons J.: The Active Badge Location System, ACM Transactions on Information, Systems, Vol. 40, No. 1, pp. 91-102, January 1992</ref> in the early 90´s. Other sensor technology such as acceleration sensors were used for identifying group activity patterns during office scenarios.<ref>Bieber G., Kirste T., Untersuchung des gruppendynamischen Aktivitaetsverhaltes im Office-Umfeld, 7. Berliner Werkstatt Mensch-Maschine-Systeme, Berlin, Germany, 2007</ref> Activities of Multiple Users in intelligent environments are addressed in Gu et al.<ref>Tao Gu, Zhanqing Wu, Liang Wang, Xianping Tao, and Jian Lu. Mining Emerging Patterns for Recognizing Activities of Multiple Users in Pervasive Computing. In Proc. of the 6th International Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services (MobiQuitous '09), Toronto, Canada, July 13–16, 2009.</ref> In this work, they investigate the fundamental problem of recognizing activities for multiple users from sensor readings in a home environment, and propose a novel pattern mining approach to recognize both single-user and multi-user activities in a unified solution. Many interesting research topics can be spawn from this work.

===Vision-based activity recognition===
It is a very important and challenging problem to track and understand the behavior of agents through videos taken by various cameras. The primary technique employed is computer vision. Vision-based activity recognition has found many applications such as human-computer interaction, user interface design, robot learning, and surveillance, among others.
Scientific conferences where vision based activity recognition work often appears are [[ICCV]] and [[CVPR]].

In vision-based activity recognition, a great deal of work has been done. Researchers have attempted a number of methods such as [[optical flow]], [[Kalman filtering]], hidden [[Markov model]]s, etc., under different modalities such as single camera, stereo, and infrared. In addition, researchers have considered multiple aspects on this topic, including single pedestrian tracking, group tracking, and detecting dropped objects.

====Levels of vision-based activity recognition====
In vision-based activity recognition, the computational process is often divided into four steps, namely human detection, human tracking, human activity recognition and then a high-level activity evaluation.

==Approaches of activity recognition==
===Activity recognition through logic and reasoning===
Logic-based approaches keep track of all [[logically consistent]] explanations of the observed actions. Thus, all possible and consistent plans or goals must be considered. Kautz<ref>H. Kautz. "A formal theory of plan recognition". In PhD thesis, University of Rochester, 1987.</ref> provided a formal theory of plan recognition. He described plan recognition as a logical inference process of circumscription. All actions, plans are uniformly referred to as goals, and a recognizer's knowledge is represented by a set of first-order statements called event hierarchy encoded in first-order logic, which defines abstraction, decomposition and functional relationships between types of events.

Kautz's general framework for plan recognition has an exponential time complexity in worst case, measured in the size of input hierarchy. Lesh and Etzioni<ref>N. Lesh and O. Etzioni. "A sound and fast goal recognizer". In ''Proceedings of the International Joint Conference on Artificial Intelligence'', 1995.</ref> went one step further and presented methods in scaling up goal recognition to scale up his work computationally. In contrast to Kautz's approach where the plan library is explicitly represented, Lesh and Etzioni's approach enables automatic plan-library construction from domain primitives. Furthermore, they introduced compact representations and efficient algorithms for goal recognition on large plan libraries.

Inconsistent plans and goals are repeatedly pruned when new actions arrive. Besides, they also presented methods for adapting a goal recognizer to handle individual idiosyncratic behavior given a sample of an individual's recent behavior. Pollack et al. described a direct argumentation model that can know about the relative strength of several kinds of arguments for belief and intention description.

A serious problem of logic-based approaches is their inability or inherent infeasibility to represent uncertainty. They offer no mechanism for preferring one consistent approach to another and incapable of deciding whether one particular plan is more likely than another, as long as both of them can be consistent enough to explain the actions observed. There is also a lack of learning ability associated with logic based methods.

===Activity recognition through probabilistic reasoning===
Probability theory and statistical learning models are more recently applied in activity recognition to reason about actions, plans and goals.

Plan recognition can be done as a process of reasoning under uncertainty, which is convincingly argued by Charniak and Goldman.<ref>E. Charniak and R.P. Goldman. "A Bayesian model of plan recognition". ''Artificial Intelligence'', 64:53–79, 1993.</ref> They argued that any model that does not incorporate some theory of uncertainty reasoning cannot be adequate. In the literature, there have been several approaches which explicitly represent uncertainty in reasoning about an agent's plans and goals.

Using sensor data as input, Hodges and Pollack designed machine learning-based systems for identifying individuals as they perform routine daily activities such as making coffee.<ref>M.R. Hodges and M.E. Pollack. "An 'object-use fingerprint': The use of electronic sensors for human identification". In ''Proceedings of the 9th International Conference on Ubiquitous Computing'', 2007.</ref> Intel Research (Seattle) Lab and University of Washington at Seattle have done some important works on using sensors to detect human plans.<ref>Mike Perkowitz, Matthai Philipose, Donald J. Patterson, and Kenneth P. Fishkin. "Mining models of human activities from the web". In ''Proceedings of the Thirteenth International World Wide Web Conference (WWW 2004), pages 573–582, May 2004.</ref><ref>Matthai Philipose, Kenneth P. Fishkin, Mike Perkowitz, Donald J. Patterson, Dieter Fox, Henry Kautz, and Dirk Hähnel. "Inferring activities from interactions with objects". In ''IEEE Pervasive Computing'', pages 50–57, October 2004.</ref><ref>Dieter Fox Lin Liao, Donald J. Patterson and Henry A. Kautz. "Learning and inferring transportation routines". ''Artif. Intell.'', 171(5-6):311–331, 2007.</ref> Some of these works infer user transportation modes from readings of radio-frequency identifiers (RFID) and global positioning systems (GPS).

===Wi-Fi-based activity recognition===
When activity recognition is performed indoors and in cities using the widely available [[Wi-Fi]] signals and [[802.11]] access points, there is much noise and uncertainty. These uncertainties are modeled using a dynamic [[Bayesian network]] model by Yin et al.<ref>Jie Yin, Xiaoyong Chai and Qiang Yang, "High-level Goal Recognition in a Wireless LAN". In ''Proceedings of the Nineteenth National Conference on Artificial Intelligence'' (AAAI-04), San Jose, CA USA, July 2004. Pages 578-584</ref> A multiple goal model that can reason about user's interleaving goals is presented by Chai and Yang,<ref>Xiaoyong Chai and Qiang Yang, "Multiple-Goal Recognition From Low-level Signals". ''Proceedings of the Twentieth National Conference on Artificial Intelligence'' (AAAI 2005), Pittsburg, PA USA, July 2005. Pages 3-8.</ref> where a [[deterministic]] state transition model is applied. A better model that models the concurrent and interleaving activities in a probabilistic approach is proposed by Hu and Yang.<ref>Derek Hao Hu, Qiang Yang. "CIGAR: Concurrent and Interleaving Goal and Activity Recognition", to appear in AAAI 2008</ref> A user action discovery model is presented by Yin et al.,<ref>Jie Yin, Dou Shen, Qiang Yang and Ze-nian Li "Activity Recognition through Goal-Based Segmentation". ''Proceedings of the Twentieth National Conference on Artificial Intelligence'' (AAAI 2005), Pittsburg, PA USA, July 2005. Pages 28-33.</ref> where the Wi-Fi signals are segmented to produce possible actions.

A fundamental problem in Wi-Fi-based activity recognition is to estimate the user locations. Two important issues are how to reduce the human labelling effort and how to cope with the changing signal profiles when the environment changes. Yin et al.<ref>Jie Yin, Qiang Yang and Lionel Ni. "Adaptive Temporal Radio Maps for Indoor Location Estimation". In ''Proceedings of the 3rd Annual IEEE International Conference on Pervasive Computing and Communications'' (IEEE PerCom 2005), Kauai Island, Hawaii, March, 2005. Pages 85-94.</ref> dealt with the second issue by transferring the labelled knowledge between time periods. Chai and Yang<ref>Xiaoyong Chai and Qiang Yang. "Reducing the Calibration Effort for Location Estimation Using Unlabeled Samples". In ''Proceedings of the 3rd Annual IEEE International Conference on Pervasive Computing and Communications'', (IEEE PerCom 2005) Kauai Island, Hawaii, March 2005. Pages 95--104.</ref> proposed a hidden Markov model-based method to extend labelled knowledge by leveraging the unlabelled user traces. J. Pan et al.<ref>Jeffrey Junfeng Pan, Qiang Yang and Sinno Jialin Pan. "Online Co-Localization in Indoor Wireless Networks". In ''Proceedings of the 22nd AAAI Conference on Artificial Intelligence'' (AAAI'07) Vancouver, British Columbia, Canada. July 2007. 1102-1107</ref> propose to perform location estimation through online co-localization, and S. Pan et al.<ref>Sinno Jialin Pan, James T. Kwok, Qiang Yang, Jeffrey Junfeng Pan. "Adaptive localization in a dynamic WiFi environment through multi-view learning". In ''Proceedings of the 22nd AAAI Conference on Artificial Intelligence'' (AAAI'07) Vancouver, British Columbia, Canada. July 2007. 1108-1113</ref> proposed to apply multi-view learning for migrating the labelled data to a new time period.

===Data mining based approach to activity recognition===
Different from traditional machine learning approaches, a novel approach based on data mining has been recently proposed by a research group led by Dr. Gu.<ref>Tao Gu, Zhanqing Wu, Xianping Tao, Hung Keng Pung, and Jian Lu. epSICAR: An Emerging Patterns based Approach to Sequential, Interleaved and Concurrent Activity Recognition. In Proc. of the 7th Annual IEEE International Conference on Pervasive Computing and Communications (Percom '09), Galveston, Texas, March 9–13, 2009.</ref> In this approach, the problem of activity recognition is formulated as a pattern-based classification problem. They proposed a novel data mining approach based on discriminative patterns which describe significant changes between any two activity classes of data to recognize sequential, interleaved and concurrent activities in a unified solution. The advantages of such an approach are: Firstly, they provide a solution which recognizes sequential, interleaved and concurrent activities in a unified computation framework. Secondly, no training is required for interleaved and concurrent activities since these two activity models can be derived directly from the sequential activity model. Thirdly, their solution is more noise tolerant because mining the differences of classes will not include noise patterns provided the noise distribution is random among classes. The noise-tolerant feature is particularly important in sensor-based activity recognition.

==Labs in the world==
* [http://www.eecs.umich.edu/~pollackm/ Martha Pollack's research group]
* [http://www.cse.ust.hk/~qyang/ Prof Qiang Yang's research group]
* [http://www.cs.washington.edu/ai/Mobile_Robotics/ RSE Lab @ University of Washington, leading by Dieter Fox]
* [http://www.igd.fhg.de/igd-a1/index.html Fraunhofer IGD Lab for Ambient Intelligence]
* [http://www.imada.sdu.dk/~gu Dr. Tao Gu's Pervasive Computing and Information System Lab at University of Southern Denmark]
* [http://www.pancube.com/MLMC/MLWSN.html Jeffrey Junfeng Pan's Sensor-based Localization and Tracking Project]
* [http://www.cuslab.com/eng/template/vba.php Ajou University CUSLAB Vision-based Activity Awareness]
* [http://pac.cs.dartmouth.edu/ Tanzeem Choudhury's People-Aware Computing (PAC) Group]
* [http://www.wearable.ethz.ch/ Wearable Computing Lab at ETH Zurich]
* [http://www.eng.yale.edu/enalab/behaviorscope.htm The BehaviorScope Project at ENALAB - Yale]
* [http://www.ess.tu-darmstadt.de The Embedded Sensing Systems group] at [http://en.wikipedia.org/wiki/Darmstadt_University_of_Technology TU Darmstadt]
* [http://ailab.wsu.edu/casas/ WSU CASAS Smart Home Project]
* [http://www.kn-s.dlr.de/activity/ DLR Institute for Communications and Navigation Activity Recognition Project]

==Related conferences==
* [http://www.aaai.org/ AAAI]
* [http://vision.eecs.ucf.edu/ CVPR]
* [http://www.iccv2009.org/ ICCV]
* [http://www.ijcai.org/ IJCAI]
* [http://nips.cc/ NIPS]
* [http://www.pervasive2008.org/ PERVASIVE]
* [http://www.ubicomp.org/ Ubicomp]
* [http://www.percom.org/ PerCom]
* [http://www.iswc.net/ ISWC]

==See also==
* [[Planning]]
* [[Naive Bayes classifier]]
* [[Support vector machines]]
* [[Hidden Markov model]]
* [[Conditional random field]]

==References==
{{reflist}}

{{DEFAULTSORT:Activity Recognition}}
[[Category:Cognition]]
[[Category:Artificial intelligence applications]]
[[Category:Machine learning]]</text>
</page>
<page>
<id>908</id>
<title>Actor model and process calculi</title>
<text>{{Copy to Wikibooks}}

In [[computer science]], the '''[[Actor model]]''' and [[Process calculi|'''process calculi''']] are two closely related approaches to the modelling of [[concurrency (computer science)|concurrent digital computation]].  See [[Actor model and process calculi history]].

There are many similarities between the two approaches, but also several differences (some philosophical, some technical):
*There is only one [[Actor model]] (although it has numerous formal systems for design, analysis, verification, modeling, ''etc.''); there are numerous [[process calculi]], developed for reasoning about a variety of different kinds of concurrent systems at various levels of detail (including calculi that incorporate time, stochastic transitions, or constructs specific to application areas such as security analysis).
*The Actor model was inspired by the laws of [[physics]] and depends on them for its fundamental axioms, ''i.e.'' [[physical law]]s (see [[Actor model theory]]); the process calculi were originally inspired by [[algebra]] {{harv|Milner|1993}}. 
*Processes in the process calculi are anonymous, and communicate by sending messages either through named [[Channel (communications)|channels]] (synchronous or asynchronous), or via [[Ambient calculus|ambients]] (which can also be used to model channel-like communications {{harv|Cardelli and Gordon|1998}}). In contrast, actors in the Actor model possess an identity, and communicate by sending messages to the mailing addresses of other actors (this style of communication can also be used to model channel-like communications &mdash; see below).    

The publications on the Actor model and on process calculi have a fair number of cross-references, acknowledgments, and reciprocal citations (see [[Actor model and process calculi history]]).

==How do channels work?==
Indirect communication using channels (''e.g.'' Gilles Kahn and David MacQueen [1977]) has been an important issue for communication in parallel and concurrent computation affecting both semantics and performance.  Some process calculi differ from the Actor model in their use of channels as opposed to direct communication.

==Issues with synchronous channels==
Synchronous channels have the property that a sender putting a message in the channel must wait for a receiver to get the message out of the channel before the sender can proceed.

===Simple synchronous channels===

A synchronous channel can be modeled by an Actor that receives <tt>put</tt> and <tt>get</tt> communications.  The following is the behavior of an Actor for a simple synchronous channel:
*Each <tt>put</tt> communication has a message and an address to which an acknowledgment is sent when the message is received by a <tt>get</tt> communication from the channel in [[FIFO]] order.
*Each <tt>get</tt>  communication has an address to which the received message is sent.

===Synchronous channels in process calculi===

However, simple synchronous channels do not suffice for process calculi such as [[Communicating Sequential Processes]] (CSP) [Hoare 1978 and 1985] because use of the ''guarded choice'' (after Dijkstra) command (called the ''alternative'' command in CSP).  In a guarded choice command multiple offers (called guards) can be made concurrently on multiple channels to <tt>put</tt> and <tt>get</tt> messages; however at most one of the guards can be chosen for each execution of the guarded choice command.  Because only one guard can be chosen, a guarded choice command in general effectively requires a kind of [[two-phase commit protocol]] or perhaps even a [[three-phase commit protocol]] if [[Timeout (telecommunication)|time-outs]] are allowed in guards (as in Occam 3 [1992]).

Consider the following program written in CSP [Hoare 1978]:
 [X :: Z!stop() ||
  Y :: guard: boolean; guard := true;
      *[guard  ?  Z!go(); Z?guard] ||
  Z :: n: integer; n:= 0;
        *[X?stop()  ?  Y!false; print!n;
          [] Y?go()  ?  n := n+1; Y!true]
 ]
According to Clinger [1981], this program illustrates global nondeterminism, since the nondeterminism arises from incomplete specification of the timing of signals between the three processes <tt>X</tt>, <tt>Y</tt>, and <tt>Z</tt>.  The repetitive guarded command in the definition of <tt>Z</tt> has two alternatives:  
#the <tt>stop</tt> message is accepted from <tt>X</tt>, in which case <tt>Y</tt> is sent the value '''false''' and <tt>print</tt> is sent the value <tt>n</tt>
#a <tt>go</tt> message is accepted from <tt>Y</tt>, in which case <tt>n</tt> is incremented and <tt>Y</tt> is sent the value '''true'''.
If <tt>Z</tt> ever accepts the <tt>stop</tt> message from <tt>X</tt>, then <tt>X</tt> terminates.  Accepting the <tt>stop</tt> causes <tt>Y</tt> to be sent '''false''' which when input as the value of its guard will cause <tt>Y</tt> to terminate.  When both <tt>X</tt> and <tt>Y</tt> have terminated, <tt>Z</tt> terminates because it no longer has live processes providing input.

In the above program, there are synchronous channels from <tt>X</tt> to <tt>Z</tt>, <tt>Y</tt> to <tt>Z</tt>, and <tt>Z</tt> to <tt>Y</tt>.

===Analogy with the committee coordination problem===
According to Knabe [1992], Chandy and Misra [1988] characterized this as analogous to the committee coordination problem:

:Professors in a university are assigned to various committees.  Occasionally a professor will decide to attend a meeting of any of her committees, and will wait until that is possible.  Meetings may begin only if there is full attendance.  The task is to ensure that if all the members of a committee are waiting, then at least one of them will attend some meeting.
:The crux of this problem is that two or more committees might share a professor.  When that professor becomes available, she can only choose one of the meetings, while the others continue to wait.

===A simple distributed protocol===
This section presents a simple distributed protocol for channels in synchronous process calculi.  The protocol has some problems that are addressed in the sections below.

The behavior of a guarded choice command is as follows:
*The command sends a message to each of its guards to <tt>prepare</tt>.
*When it receives the first response from one of its guards that it is prepared, then it sends a message to that guard to <tt>prepare to commit</tt> and sends messages to all of the other guards to <tt>abort</tt>.
**When it receives a message from the guard that it is <tt>prepared to commit</tt>, then it sends the guard a <tt>commit</tt> message. However, if the guard throws an exception that it cannot <tt>prepare to commit</tt>, then guarded choice command starts the whole process all over again.
*If all of its guards respond that they cannot <tt>prepare</tt>, then the guarded command does nothing.

The behavior of a guard is as follows:
*When a message to <tt>prepare</tt> is received, then the guard sends a <tt>prepare</tt> message to each of the channels with which it is offering to communicate.  If the guard has booleans such that it cannot <tt>prepare<tt> or if any of the channels respond that they cannot <tt>prepare</tt>, then it sends <tt>abort</tt> messages to the other channels and then responds that it cannot <tt>prepare</tt>.
:*When a message to <tt>prepare to commit</tt> is received, then the guard sends a <tt>prepare to commit</tt> message to each of the channels. If any of the channels respond that they cannot <tt>prepare to commit</tt>, then it sends <tt>abort</tt> messages to the other channels and then throws an exception that it cannot <tt>prepare to commit</tt>.
:*When a message to <tt>commit</tt> is received, then the guard sends an <tt>commit</tt> message to each of the channels.
:*When a message to <tt>abort</tt> is received, then the guard sends an <tt>abort</tt> message to each of the channels.

The behavior of a channel is as follows:
*When a <tt>prepare to put</tt> communication is received, then respond that it is prepared if there is a <tt>prepare to get<tt> communication pending unless a <tt>terminate</tt> communication has been received, in which case throw an exception that it cannot <tt>prepare to put</tt>.
*When a <tt>prepare to get</tt> communication is received, then respond that it is prepared if there is a <tt>prepare to put<tt> communication pending unless a <tt>terminate</tt> communication has been received, in which case throw an exception that it cannot <tt>prepare to get</tt>.
:*When a <tt>prepare to commit to put</tt> communication is received, then respond that it is prepared if there is a <tt>prepare to commit to get<tt> communication pending unless a <tt>terminate</tt> communication has been received, in which case throw an exception that it cannot <tt>prepare to commit to put</tt>.
:*When a <tt>prepare to commit to get</tt> communication is received, then respond that it is prepared if there is a <tt>prepare to commit to put<tt> communication pending unless a <tt>terminate</tt> communication has been received, in which case throw an exception that it cannot <tt>prepare to commit to get</tt>.
::*When a <tt>commit put<tt> communication is received, then depending on which of the following is received:
::**When a <tt>commit get<tt> communication is received, then if not already done perform the <tt>put</tt> and <tt>get</tt> and clean up the preparations.
::**When an <tt>abort get<tt> communication is received, then cancel the preparations
::*When a <tt>commit get<tt> communication is received, then depending on which of the following is received:
::**When a <tt>commit put<tt> communication is received, then if not already done perform the <tt>get</tt> and <tt>put</tt> and clean up the preparations.
::**When an <tt>abort put<tt> communication is received, then cancel the preparations.
::*When an <tt>abort put<tt> communication is received, then cancel the preparations.
::*When an <tt>abort get<tt> communication is received, then cancel the preparations.

===Starvation on getting from multiple channels===
Again consider the program written in CSP (discussed in [[Actor model and process calculi#Synchronous channels in process calculi|Synchronous channels in process calculi]] above):
 [X :: Z!stop() ||
  Y :: guard: boolean; guard := true;
      *[guard  ?  Z!go(); Z?guard] ||
  Z :: n: integer; n:= 0;
        *[X?stop()  ?  Y!false; print!n;
          [] Y?go()  ?  n := n+1; Y!true]
 ]

As pointed out in Knabe [1992], a problem with the above protocol ([[Actor model and process calculi#A simple distributed protocol|A simple distributed protocol]]) is that the process <tt>Z</tt> might never accept the <tt>stop</tt> message from <tt>X</tt> (a phenomenon called [[Resource starvation|starvation]]) and consequently the above program might never print anything.

In contrast consider, a simple Actor system that consists of Actors '''X''', '''Y''', '''Z''', and '''print''' where

:the Actor '''X''' is created with the following behavior:
:*If the message <tt>"start"</tt> is received, then send '''Z''' the message  <tt>"stop"</tt>

:the Actor '''Y''' is created with the following behavior:
:*If the message <tt>"start"</tt> is received, then send '''Z''' the message  <tt>"go"</tt>
:*If the message '''true''' is received, then send '''Z''' the message  <tt>"go"</tt>
:*If the message '''false''' is received, then do nothing

:the Actor '''Z''' is created with the following behavior that has a count <tt>n</tt> that is initially '''0''':
:*If the message <tt>"start"</tt> is received, then do nothing.
:*If the message <tt>"stop"</tt> is received, then send '''Y''' the message '''false''' and send '''print''' the message the count <tt>n</tt>.
:*If the message <tt>"go"</tt> is received, then send '''Y''' the message '''true''' and process the next message received with count <tt>n</tt> being <tt>n+1</tt>.

By the laws of Actor semantics, the above Actor system will always halt when the Actors '''X''', '''Y''', are '''Z''' are each sent a <tt>"start"</tt> message resulting in sending '''print''' a number that can be unbounded large.

The difference between the CSP program and the Actor system is that the Actor '''Z''' does not get messages using a guarded choice command from multiple channels.  Instead it processes messages in arrival ordering, and by the laws for Actor systems, the <tt>stop</tt> message is guaranteed to arrive.

===Livelock on getting from multiple channels===
Consider the following program written in CSP  [Hoare 1978]:
 [Bidder1 :: b: bid;
        *[Bids1?b  ?  process1!b;
          [] Bids2?b  ?  process1!b;] ||
  Bidder2 :: b: bid;
        *[Bids1?b  ?  process2!b;
          [] Bids2?b  ?  process2!b;] 
 ]

As pointed out in Knabe [1992], an issue with the above protocol ([[Actor model and process calculi#A simple distributed protocol|A simple distributed protocol]]) is that the process <tt>Bidder2</tt> might never accept a bid from <tt>Bid1</tt> or <tt>Bid2</tt> (a phenomenon called [[livelock]]) and consequently <tt>process2</tt> might never be sent anything.  In each attempt to accept a message, <tt>Bidder2</tt> is thwarted because the bid that was offered by <tt>Bids1</tt> or <tt>Bids2</tt> is snatched away by <tt>Bidder1</tt> because it turns out that <tt>Bidder1</tt> has much faster access than <tt>Bidder2</tt> to <tt>Bids1</tt> and <tt>Bids2<tt>.  Consequently <tt>Bidder1</tt> can accept a bid, process it and accept another bid before <tt>Bidder2</tt> can commit to accepting a bid.

===Efficiency===
As pointed out in Knabe [1992], an issue with the above protocol ([[Actor model and process calculi#A simple distributed protocol|A simple distributed protocol]]) is the large number of communications that must be sent in order to perform the handshaking in order to send a message through a synchronous channel.  Indeed as shown in the previous section ([[Actor model and process calculi#Livelock on getting from multiple channels|Livelock]]), the number of communications can be unbounded.

===Summary of Issues===
The subsections above have articulated the following three issues concerned with the use of synchronous channels for process calculi:
#''Starvation.'' The use of sychronous channels can cause starvation when a process attempts to get messages from multiple channels in a guarded choice command.
#''Livelock.'' The use of synchronous channels can cause a process to be caught in livelock when it attempts to get messages from multiple channels in a guarded choice command.
#''Efficiency.''  The use of synchronous channels can require a large number of communications in order to get messages from multiple channels in a guarded choice command.

It is notable that in all of the above, issues arise from the use of a guarded choice command to get messages from multiple channels.

==Asynchronous channels==
Asynchronous channels have the property that a sender putting a message in the channel need not wait for a receiver to get the message out of the channel.

===Simple asynchronous channels===

An asynchronous channel can be modeled by an Actor that receives <tt>put</tt> and <tt>get</tt> communications.  The following is the behavior of an Actor for a simple asynchronous channel:
*Each <tt>put</tt> communication has a message and an address to which an acknowledgment is sent immediately (without waiting for the message to be gotten by a <tt>get</tt> communication).
*Each <tt>get</tt>  communication has an address to which the gotten message is sent.

===Asynchronous channels in process calculi===
The Join-calculus programming language (published in 1996) implemented local and distributed concurrent computations.  It incorporated asynchronous channels as well as a kind of synchronous channel that is used for procedure calls. Agha's Ap Actor calculus {{harv|Agha and Thati|2004}} is based on a typed version of the asynchronous [[Pi-calculus|p-calculus]].

==Algebras==
The use of algebraic techniques was pioneered in the process calculi.  Subsequently several different process calculi intended to provide algebraic reasoning about Actor systems have been developed in {{harv|Gaspari and Zavattaro|1997}}, {{harv|Gaspari and Zavattaro|1999}}, {{harv|Agha and Thati|2004}}

==Denotational Semantics==
Will Clinger (building on the work of Irene Greif [1975], Gordon Plotkin [1976], [[Henry Baker (computer scientist)|Henry Baker]] [1978], Michael Smyth [1978], and Francez, [[Hoare]], Lehmann, and de Roever [1979]) published the first satisfactory mathematical [[Denotational semantics|denotational]] theory of the [[Actor model]] using [[domain theory]] in [[denotational semantics of the Actor model#Clinger's Model|his dissertation]] in 1981.  His semantics contrasted the [[unbounded nondeterminism]] of the [[Actor model]] with the bounded nondeterminism of [[Communicating Sequential Processes|CSP]] [Hoare 1978] and Concurrent Processes [Milne and Milner 1979] (see [[denotational semantics]]). Roscoe [2005] has developed a denotational semantics with unbounded nondeterminism for a subsequent version of Communicating Sequential Processes Hoare [1985].  More recently [[Carl Hewitt]] [2006b] developed a denotational semantics for Actors based on [[Denotational semantics of the Actor model#The Timed Diagrams Model|timed diagrams]]. 

Ugo Montanari and Carolyn Talcott [1998] have contributed to attempting to reconcile Actors with process calculi.

==References==
*Carl Hewitt, Peter Bishop and Richard Steiger. '''A Universal Modular Actor Formalism for Artificial Intelligence'''  IJCAI 1973.
*Robin Milner. '''Processes: A Mathematical Model of Computing Agents''' in Logic Colloquium 1973.
*Irene Greif and Carl Hewitt.  '''[http://www.ai.mit.edu/research/publications/publications Actor Semantics of PLANNER-73]''' Conference Record of ACM Symposium on Principles of Programming Languages. January 1975.
*Irene Greif.  '''Semantics of Communicating Parallel Professes''' MIT EECS Doctoral Dissertation.  August 1975.
*Gordon Plotkin.  '''A powerdomain construction''' SIAM Journal of Computing  September 1976.
*Carl Hewitt and Henry Baker '''[http://www.lcs.mit.edu/publications/pubs/pdf/MIT-LCS-TR-194.pdf Actors and Continuous Functionals]'''  Proceeding of IFIP Working Conference on Formal Description of Programming Concepts. August 1-5, 1977.
*Gilles Kahn and David MacQueen. '''Coroutines and networks of parallel processes''' IFIP. 1977
*Aki Yonezawa '''Specification and Verification Techniques for Parallel Programs Based on Message Passing Semantics''' MIT EECS Doctoral Dissertation. December 1977.
* Michael Smyth.  ''Power domains''  Journal of Computer and System Sciences.  1978.
* George Milne and [[Robin Milner]].  ''Concurrent processes and their syntax''  JACM.  April, 1979.
* [[CAR Hoare]].  [http://www.usingcsp.com/ '''Communicating Sequential Processes'''] CACM.  August, 1978.
* Nissim Francez, [[C.A.R. Hoare]], Daniel Lehmann, and Willem de Roever.  '''Semantics of nondetermiism, concurrency, and communication'''  Journal of Computer and System Sciences.  December 1979. 
*Mathew Hennessy and Robin Milner. '''On Observing Nondeterminism and Concurrency''' LNCS 85.  1980.
*Will Clinger.  '''[https://dspace.mit.edu/handle/1721.1/6935 Foundations of Actor Semantics]''' MIT Mathematics Doctoral Dissertation. June 1981.
*Mathew Hennessy. '''A Term Model for Synchronous Processes''' Computer Science Dept. Edinburgh University.  CSR-77-81. 1981.
*J.A. Bergstra and J.W. Klop. '''Process algebra for synchronous communication''' Information and Control. 1984.
*Luca Cardelli.  '''An implementation model of rendezvous communication'''  Seminar on Concurrency. Lecture Notes in Computer Science 197.  Springer-Verlag. 1985
*Robert van Glabbeek.  '''Bounded nondeterminism and the approximation induction principle in process algebra''' Symposium on Theoretical Aspects of Computer Sciences on STACS 1987.
*K. Mani Chandy and Jayadev Misra. '''Parallel Program Design: A Foundation''' Addison-Wesley 1988.
*Robin Milner, Joachim Parrow and David Walker.  '''A calculus of mobile processes''' Computer Science Dept.  Edinburgh.  Reports ECS-LFCS-89-85 and ECS-LFCS-89-86.  June 1989.  Revised Sept. 1990 and Oct. 1990 respectively.
*Robin Milner.  '''The Polyadic pi-Calculus: A Tutorial'''  Edinburgh University.  LFCS report ECS-LFCS-91-180.  1991.
*Kohei Honda and Mario Tokoro.  '''An Object Calculus for Asynchronous Communication'''  ECOOP 91.
*José Meseguer. '''Conditional rewriting logic as a unified model of concurrency''' in Selected papers of the Second Workshop on Concurrency and compositionality.  1992.
*Frederick Knabe. '''A Distributed Protocol for Channel-Based Communication with Choice''' PARLE 1992.
*Geoff Barrett.  [http://www.wotug.org/occam/ '''Occam 3 reference manual'''] INMOS. 1992. 
*Benjamin Pierce, Didier Rémy and David Turner.  '''A typed higher-order programming language based on the pi-calculus'''  Workshop on type Theory and its application to computer Systems.  Kyoto University.  July 1993.
*{{citation|last = Milner|first =Robin|authorlink = Robin Milner|title = Elements of interaction: Turing award lecture|publisher = CACM|month = January|year = 1993|url = http://doi.acm.org/10.1145/151233.151240}}.
*R. Amadio and S. Prasad.  '''Locations and failures'''  Foundations of Software Technology and Theoretical Computer Science Conference.  1994.
*Cédric Fournet and Georges Gonthier.  '''The reflexive chemical abstract machine and the join-calculus''' POPL 1996.
*Cédric Fournet, Georges Gonthier, Jean-Jacques Lévy, Luc Maranget, and Didier Rémy. '''A Calculus of Mobile Agents'''  CONCUR 1996.
*Tatsurou Sekiguchi and [[Akinori Yonezawa]].  '''A Calculus with Code Mobility'''  FMOODS 1997.
*{{citation|ref={{harvid|Gaspari and Zavattaro|1997}}|first1=Mauro |last1=Gaspari |first2=Gianluigi|last2=Zavattaro |title = An Algebra of Actors|format = Technical Report|number = UBLCS-97-4|publisher = University of Bologna|date = May 1997}} 
* {{citation|ref={{harvid|Cardelli and Gordon|1998}}|author= Luca Cardelli and Andrew Gordon|title = Mobile Ambients|journal = Foundations of Software Science and Computational Structures|editor = Maurice Nivat|work = Lecture Notes in Computer Science|volume = 1378|publisher = Springer|year = 1998}}
*Ugo Montanari and Carolyn Talcott.  '''Can Actors and Pi-Agents Live Together?'''  Electronic Notes in Theoretical Computer Science.  1998.
*Robin Milner. '''Communicating and Mobile Systems: the Pi-Calculus''' Cambridge University Press.  1999.
*{{citation|ref={{harvid|Gaspari and Zavattaro|1999}}|author = M. Gaspari and G. Zavattaro|title = An Algebra of Actors| journal = Formal Methods for Open Object Based Systems|year = 1999}}
*Davide Sangiorgi and David Walker. '''The Pi-Calculus : A Theory of Mobile Processes'''  Cambridge University Press.  2001.
*P. Thati, R. Ziaei, and G. Agha. '''A theory of may testing for asynchronous calculi with locality and no name matching''' Algebraic Methodology and Software Technology. Springer Verlag. September 2002. LNCS 2422.
*{{citation|ref = {{harvid|Agha and Thati|2004}}|author = Gul Agha and Prasanna Thati|url = http://formal.cs.uiuc.edu/papers/ATactors_festschrift.pdf|title = An Algebraic Theory of Actors and Its Application to a Simple Object-Based Language|journal =  OO to FM (Dahl Festschrift) LNCS|volume = 2635|publisher =  Springer-Verlag|year = 2004}}
*J.C.M. Baeten, T. Basten, and M.A. Reniers. '''Algebra of Communicating Processes''' Cambridge University Press. 2005.
*He Jifeng and C.A.R. Hoare. '''Linking Theories of Concurrency''' United Nations University International Institute for Software Technology UNU-IIST Report No. 328.  July, 2005.
*Luca Aceto and Andrew D. Gordon (editors). '''Algebraic Process Calculi: The First Twenty Five Years and Beyond''' Process Algebra. Bertinoro, Forl`i, Italy, August 1–5, 2005.
*{{citation|ref={{harvid|Roscoe|2005}}|authorlink = Bill Roscoe|first = A. W.|last =  Roscoe|title = The Theory and Practice of Concurrency|publisher = [[Prentice Hall]]|isbn = 0-13-674409-5|year = Revised 2005}}
*Carl Hewitt (2006b) [http://www.pcs.usp.br/~coin-aamas06/10_commitment-43_16pages.pdf ''What is Commitment? Physical, Organizational, and Social'']  COIN@AAMAS.  2006.

[[Category:Actor model]]
[[Category:Process calculi]]</text>
</page>
<page>
<id>921</id>
<title>Acunetix</title>
<text>{{orphan|date=April 2010}}

== Acunetix ==

'''Acunetix''' is a security company that develops a web vulnerability scanner which allows companies to find potential security issues in their web applications. The company was founded in 2004 and its product has been on the market since early 2005

Acunetix engineers maintain a security blog which publishes regular articles about web application security. One such article highlighted the issues of passwords in popular web based email services and was referenced in leading publications such as the New York Time <ref>http://gadgetwise.blogs.nytimes.com/2009/10/06/more-e-mail-account-details-leaked-online/?em</ref>, The Telegraph <ref>http://www.telegraph.co.uk/technology/news/6269929/Email-phishing-attack-spreading-say-experts.html</ref>, ZDnet <ref>http://blogs.zdnet.com/security/?p=4538</ref>,  ABN <ref>http://www.abc.net.au/news/stories/2009/10/08/2708669.htm?section=australia</ref> and Computerworld <ref>http://www.computerworld.com/s/article/9139098/Researcher_refutes_Microsoft_s_account_of_hijacked_Hotmail_passwords?taxonomyId=82</ref>

Acunetix customers include [[NASA]], [[Ernst & Young]], [[KPMG]], [[Telstra]], [[Adidas]], [[Samsung]], [[Disney]], [[Fujitsu]], [[Panasonic]], Bank of China, the United States Airforce and the United States Army.

== Product ==

The Acunetix Web Vulnerability Scanner is an automated black box scanner that checks for web vulnerabilities such as SQL injection, Cross Site scripting and other vulnerabilities.

The product feature set includes:

* An automatic client script analyzer allowing for security testing of Ajax and Web 2.0 applications
* SQL injection and Cross site scripting testing
* Penetration testing tools, such as the HTTP Editor and the HTTP Fuzzer
* Visual macro recorder to test web forms and password protected areas
* Ability to test pages with CAPTCHA, single sign-on and Two Factor authentication mechanisms
* Reporting facilities

==References==
{{Reflist}}

==External links==
* [http://www.acunetix.com acunetix.com]
* [http://www.acunetix.com/blog/ acunetix blog]
* [http://alliancetechpartners.com/wordpress/?cat=225 Acunetix Discussion]
* [http://www.alliancetechpartners.com/acunetix/index.htm Acunetix Whitepapers, Videos, Feeds]
<!--- Categories --->

[[Category:Computer security software]]


{{security-software-stub}}</text>
</page>
<page>
<id>925</id>
<title>AdChina</title>
<text>{{Infobox Company  
| company_name   = AdChina {{lang|zh|???}}
| logo           = [[File:AdChina LOGO.png]]
| foundation     = [[Silicon Valley, California]], [[United States|USA]] (2007) 
| location       = Shanghai, China
| industry       = [[Digital Marketing & Sales]]
| homepage       = [http://www.adchina.com www.adchina.com]
}}

'''AdChina'''({{zh|c=[[wikt:?|?]][[wikt:?|?]][[wikt:?|?]]}}) is an [[integrated digital platform]] in [[China]] that runs its own [[ad network]], ePR network, [[eCommerce]] platform and SNS ([[social networking sites]]) network. AdChina provides brands ([[Procter & Gamble|P&G]], [[China Telecom]], [[Unilever]], [[L'Oreal]], [[Nike, Inc.|Nike]], etc.) and agencies ([[Vivaki]], [[OgilvyOne]], etc.) with integrated digital marketing and sales products and services, including branding, iWOM, and online sales.

==History==
In April 2007, AdChina was founded in [[Silicon Valley]], [[United States]]. AdChina headquarters in [[Shanghai]], with offices in [[Beijing]] and [[Guangzhou]].

===Financing===
AdChina is a venture-backed technology company. Its investors include [[GSR Ventures]], [[Richmond Management]] and [[News Corporation]].

*'''1st Round Funding:''' AdChina closed its first round funding led by [[GSR Ventures]] in June, 2008 <ref>{{cite web | author = Mark Hefflinger | title = Chinese Online Ad Network AdChina Lands $10 Million | publisher = Digital Media Wire | url = http://www.dmwmedia.com/news/2008/06/13/chinese-online-ad-network-adchina-lands-$10-million}}</ref>.

*'''2nd Round Funding:''' AdChina raised its second round funding led by [[Richmond Management]], along with co-investors [[GSR Ventures]] and [[News Corporation]] in June, 2009<ref>{{cite web | author = Mark Hefflinger | title = Chinese Online Ad Network AdChina Closes Second Round | publisher = Digital Media Wire | url = http://www.dmwmedia.com/news/2009/07/20/chinese-online-ad-network-adchina-closes-second-round}}</ref>. AdChina will use the funds to grow its staff and invest in several new technology and commercial initiatives planned for 2009-2010.

===Partnerships===
====[[MSN China]]====
AdChina built strategic partnership with [[MSN]] China on [[online advertising]] as well as [[eCommerce]]. AdChina serves online ads on news, entertainment, finance and video channels of [[MSN China]]. Moreover, the partnership extended to an exclusive management rights for the [[B2C]] online shopping platform on [[MSN China]]([http://shop.msn.com.cn shop.msn.com.cn]) launched in November 2009.

====China Network Television (CNTV)====
On January 7, 2010, [[China Network Television]] ([http://www.cntv.cn]), a newly established national Internet TV station owned by China Central Television ([[CCTV]]), and AdChina announced a strategic partnership to jointly develop China's online video ad market<ref>{{cite web | title = China Central Television's (CCTV) CNTV and AdChina Announce Strategic Partnership to Develop China's Online Video Ad Market | publisher = Yahoo! Finance | url = http://finance.yahoo.com/news/China-Central-Televisions-prnews-868230913.html?x=0&.v=100}}</ref>. <br />The two parties have set up a joint ''CNTV-AdChina Online Video Ad Lab'', aiming to develop new ad formats, audience segmentation, and ad targeting and optimization technologies. They will also establish online video ad guidelines and standards, and develop a brand tracking system to allow advertisers and agencies to measure the online video ads' impact on brand metrics on CNTV and in the industry. <br />CNTV is licensing [[AdChina AdManager]] as CNTV's ad serving, tracking, and brand measurement platform.

====HunanTV.com====
On January 19, 2010, Hunantv.com([http://www.hunantv.com www.hunantv.com]), the new media platform of [[Hunan Satellite Television]], which just launched its online TV station ([http://www.imgo.tv www.imgo.tv]), and AdChina announced a strategic partnership<ref>{{cite news | title = HunanTV New Media and AdChina Announce Strategic Partnership to Develop China's Online Video Ad Market | publisher = Reuters | url = http://www.reuters.com/article/idUS136752+25-Jan-2010+PRN20100125 | date=January 25, 2010}}</ref>, and set up a joint online video ad lab which is the first video ad lab in new media area founded by a province level satellite TV station in China. <br />Hunantv.com is licensing [[AdChina AdManager]] as the ad serving, tracking, and brand measurement platform for hunantv.com and imgo.tv.

==Products & Services==
[[File:WebTV syndication.png|thumb|Syndication WebTV|200px]][[File:WebTV onsite.png|thumb|On-site WebTV|200px]][[File:MSN shopping channel.png|thumb|MSN Shopping Channel|200px]]

===Display [[ad network|Ad Network]]===
AdChina display ad network reaches 350 million unique visitors<ref name = "AdChina_website">{{cite web | title = About AdChina ({{lang|zh|?????}}) | publisher = AdChina, Inc. | url = http://www.adchina.com/Introduction.aspx }}</ref> – 92% of total netizens in China(384 million<ref>{{cite web| author = Chen Limin | title = Internet users hit 384 million
| publisher = China Daily | url = http://www.chinadaily.com.cn/china/2010-01/16/content_9330415.htm}}</ref>) and can access 9 billion page views per month<ref name = "AdChina_website" />. Over 400 portal and vertical sites have joined in the AdChina display ad network <ref>{{cite web | title = AdChina Ad Network ({{lang|zh|???????}}) | publisher = AdChina, Inc. | url = http://www.adchina.com/AdvertiserAdnetwork.aspx}}</ref>.
AdChina runs its own [[ad server]], named AdManager, and serves rich media ad formats. AdManager provides advertisers with various targeting technologies, including [[content targeting]], [[geo targeting]], [[retargeting]] and [[behavioral targeting]], as well as campaign optimization technologies, such as [[frequency capping]] and [[creative sequencing]]. <br />AdChina provides 3rd party campaign reports by [[Nielsen Online]] to its clients for all online campaigns.

===Video [[ad network|Ad Network]]===
AdChina video [[ad network]] integrates WebTV platform and online video websites.

====WebTV Platform====
Based on the partnerships with TV media (CNTV and HunanTV.com), AdChina build a platform to serve ads along with TV video contents, named WebTV, in terms of video [[content syndication]] via the AdChina ad network and on-site video ad formats.<br />
The syndication WebTV looks like a floating AdTV with multiple TV video clips (15~30 sec.) embedded, and [[Television advertisement|TVC]] ads are served between the clips. The on-site video ad formats refer to regular video ad formats including pre-roll and background ad on the online platforms of TV media.

====Online Video Website====
AdChina integrates the ad inventory of online video websites and client programs into its video ad network.

===Social Media([[social networking sites]]) Network===
AdChina SNS network integrates a number of applications (APP) on multiple [[social networking sites]] to provide marketers with advertising services in terms of expandable banner ad, brand image embedding into APP and tailored APP. Moreover, AdChina leverages the demographic information of [[social networking sites]] users to deliver demographic targeted ads across the whole AdChina [[ad network]]. Besides advertising, AdChina cooperates with plenty of [[opinion leaders]] on social networking sites to implement ePR campaigns for marketers.

===[[eCommerce]]===
AdChina operates the [[B2C]] online shopping platform on [[MSN China]], the MSN shopping channel ([http://shop.msn.com.cn shop.msn.com.cn]). MSN shopping channel sells products in various categories, including cosmetics & skincare, fashion & apparel and home improvements. With the eCommerce platform, AdChina bridges online branding and sales for its clients.

===ePR Network===
AdChina ePR network helps marketers to promote iWOM. The ePR network integrates portal and vertical Web sites, as well as [[UGC]] media, such as [[social networking sites]], [[blogs]], [[Bulletin Board System|BBS]] and [[UGC]] video sites.<br />
AdChina provides 3 major ePR solutions: campaign specific ePR services, continuous iWOM maintenance and [[crisis management]].

===[[Mobile Web|Mobile]] Network===
AdChina [[Mobile Web|mobile]] network extends products and services of AdChina from Internet to mobile, including display [[ad network]], ePR network, social media network and video [[ad network]], to offer advertisers integrated digital marketing solutions across [[Mobile Web|mobile]] and [[Internet]].

==Culture==
'''C.A.R.E.'''
*'''''C''''' - Communication
*'''''A''''' - Accountability
*'''''R''''' - Respect
*'''''E''''' - Entrepreneurship

==References==
{{Reflist}}

{{DEFAULTSORT:Adchina}}
[[Category:Advertising]]
[[Category:Social network services]]
[[Category:Video]]
[[Category:Internet advertising services and affiliate networks]]
[[Category:Internet companies]]</text>
</page>
<page>
<id>927</id>
<title>AdSense</title>
<text>{{Infobox software
| released = {{start date|2003|6|18}}<ref>[http://www.google.com/press/pressrel/adsense.html Google Expands Advertising Monetization Program for Websites], June 18, 2003, Press Release, Google</ref>
| name = AdSense
| logo = [[Image:Google Adsense logo.png]]
| screenshot = <!-- SCREENSHOT NEEDED -->
| caption =
| developer = [[Google Inc.]]
| latest_release_version =
| latest_release_date =
| latest_preview_version =
| latest_preview_date =
| operating_system = [[Cross-platform]] (web-based application)
| genre = [[Online advertising]]
| license =
| website = [http://www.google.com/adsense http://www.google.com/adsense]
}}

'''AdSense''' is an [[ad serving]] application run by [[Google Inc.]] Website owners can enroll in this program to enable text, image, and video [[advertisements]] on their websites. These advertisements are administered by Google and generate revenue on either a [[Cost Per Click|per-click]] or [[Cost Per Impression|per-impression]] basis. Google [[beta-testing|beta tested]] a [[Cost Per Action|cost-per-action]] service, but discontinued it in October 2008 in favor of a [[DoubleClick]] offering (also owned by Google).<ref>[http://adwords.google.com/support/bin/answer.py?answer=97264 What happened to the pay-per-action beta?]</ref> In Q1 2010, Google earned US$2.04 billion ($8.16 billion annualized), or 30% of total revenue, through AdSense.<ref>[http://investor.google.com/earnings/2010/Q1_google_earnings.html "Google Announces First Quarter 2010 Financial Results"]. Google. Retrieved June 18, 2010.</ref>

==Overview==
{{Ref improve section|date=September 2010}}

Google uses its [[Internet search]] technology to serve advertisements based on website content, the user's geographical location, and other factors. Those wanting to advertise with Google's targeted advertisement system may enroll through [[AdWords]]. AdSense has become a popular method of placing advertising on a website because the advertisements are less intrusive than most [[banner ads|banners]], and the content of the advertisements is often relevant to the website.

Many websites use AdSense to monetize their content; it is the most popular advertising network. AdSense has been particularly important for delivering advertising revenue to small websites that do not have the resources for developing advertising sales programs and sales people. To fill a website with advertisements that are relevant to the topics discussed, webmasters implement a brief script on the websites' pages. Websites that are content-rich have been very successful with this advertising program, as noted in a number of publisher case studies on the AdSense website.

Some webmasters invest significant effort into maximizing their own AdSense income. They do this in three ways:{{Citation needed|date=June 2008}}
# They use a wide range of [[Web traffic|traffic]]-generating techniques, including but not limited to [[online advertising]].
# They build valuable content on their websites that attracts AdSense advertisements, which pay out the most when they are clicked.
# They use text content on their websites that encourages visitors to click on advertisements. Note that Google prohibits webmasters from using phrases like "Click on my AdSense ads" to increase click rates. The phrases accepted are "Sponsored Links" and "Advertisements".

The source of all AdSense income is the AdWords program, which in turn has a complex pricing model based on a [[Vickrey auction|Vickrey]] second price auction. AdSense commands an advertiser to submit a sealed bid (i.e., a bid not observable by competitors). Additionally, for any given click received, advertisers only pay one bid increment above the second-highest bid. Google currently shares 68% of revenues generated by AdSense with content network partners.<ref name="10QJul10">{{cite web | url=http://investor.google.com/documents/20100630_google_10Q.html | title=Google Form 10-Q, Q2 2010 | date=2010-07-15 | accessdate=2010-09-08}}</ref>

==History==
Oingo, Inc., a privately held company located in Los Angeles, was started in 1998 by Gilad Elbaz and Adam Weissman. Oingo developed a proprietary search algorithm that was based on word meanings and built upon an underlying lexicon called [[WordNet]], which was developed over the previous 15 years by researchers at [[Princeton University]], led by [[George Armitage Miller|George Miller]].<ref>{{cite news|url=http://www.infotoday.com/newsbreaks/nb1220-2.htm|title=Beyond Keyword Searching|publisher=Info Today|author=Paula J. Hane|date=1999-12-20}}</ref>

Oingo changed its name to [[Applied Semantics (company)]] in 2001,<ref>{{cite news|url=http://searchenginewatch.com/showPage.html?page=2196001|title=Google Buys Applied Semantics|publisher=Incisive Interactive Marketing LLC|date=2003-04-24}}</ref> which was later acquired by Google in April 2003 for US$102 million.<ref>{{cite news|url=http://www.google.com/press/pressrel/applied.html|title=Google Acquires Applied Semantics|publisher=Press release|date=2003-04-23}}</ref>

In 2009, Google AdSense announced that it would now be offering new features, including the ability to "enable multiple networks to display ads".

==Types==
===AdSense for Feeds===
In May 2005, Google announced a limited-participation [[beta version]] of '''AdSense for Feeds''', a version of AdSense that runs on [[RSS (file format)|RSS]] and [[Atom (standard)|Atom]] feeds that have more than 100 active subscribers. According to the Official Google Blog, "advertisers have their ads placed in the most appropriate feed articles; publishers are paid for their original content; readers see relevant advertising—and in the long run, more quality feeds to choose from."<ref name="google_blog_feed_me">{{cite web | url=http://googleblog.blogspot.com/2005/05/feed-me.html | title=Official Google Blog: Feed me | author=[[Shuman Ghosemajumder]] | date=2005-05-17 | accessdate=2007-12-29}}</ref>

AdSense for Feeds works by inserting images into a feed. When the image is displayed by a RSS reader or Web browser, Google writes the advertising content into the image that it returns. The advertisement content is chosen based on the content of the feed surrounding the image. When the user clicks the image, he or she is redirected to the advertiser's website in the same way as regular AdSense advertisements.

AdSense for Feeds remained in its beta state until August 15, 2008, when it became available to all AdSense users.

===AdSense for search===
A companion to the regular AdSense program, '''AdSense for search''', allows website owners to place Google search boxes on their websites. When a user searches the Internet or the website with the search box, Google shares 51% of the advertising revenue it makes from those searches with the website owner.<ref name="10QJul10"/> However the publisher is paid only if the advertisements on the page are clicked; AdSense does not pay publishers for mere searches.

===AdSense for mobile content===
AdSense for mobile content allows publishers to generate earnings from their [[mobile website]]s using targeted Google advertisements. Just like AdSense for content, Google matches advertisements to the content of a website — in this case, a mobile website.

===AdSense for domains===
Adsense for domains allows advertisements to be placed on domain names that have not been developed. 
This offers domain name owners a way to monetize domain names that are otherwise dormant.
Adsense for domains is currently being offered to some users, with plans to make it available to all in stages.

On December 12, 2008, ''[[TechCrunch]]'' reported that AdSense for Domains is available for all US publishers.<ref>[http://www.techcrunch.com/2008/12/12/adsense-for-domains-now-available-for-all-us-publishers/ AdSense For Domains Now Available For All US Publishers], Robin Wauters, Dec 12, 2008, TechCrunch</ref>

===AdSense for video===
AdSense for video allows publishers with video content to generate revenue using ad placements from Google's extensive [[Advertising network]] including popular [[Youtube]] videos.<ref>{{cite web | url = http://www.businessweek.com/news/2010-05-03/google-s-youtube-boosts-display-advertisers-10-fold-update1-.html | title = Google’s YouTube Boosts Display Advertisers 10-Fold (Update1) | author = Brian Womack | publisher = Bloomberg Businessweek | date = 2010-05-03 | accessdate = 2010-05-03}}</ref>

==XHTML compatibility==
As of September 2007, the [[HTML]] code for the AdSense search box does not validate as [[XHTML]], and does not follow modern principles of website design because of its use of
* non-standard [[HTML tag|end tags]], such as <code></img></code> and <code></input></code>,
* the [[HTML#Attributes|attribute]] <code>checked</code> rather than <code>checked="checked"</code>,
* presentational attributes other than <code>id</code>, <code>class</code>, or <code>style</code> — for example, <code>bgcolor</code> and <code>align</code>,
* a table structure for purely presentational (i.e., non-tabular) purposes,<sup>1</sup> and
* the <code>font</code> tag.<sup>2</sup>

<small>1: using a table structure for unintended purposes is strongly discouraged by the [[W3C]],<ref>{{cite web|url=http://www.w3.org/TR/CSS2/tables.html|title=Tables|author=W3C|accessdate=2009-10-06}}</ref> but nevertheless does not cause a document to fail validation — there is currently no algorithmic method of determining whether a table is used "correctly" (for displaying tabular data or for displaying elements, that get proportionally wider or narrower when browser window resizes in width without active client side scripting).<br />
2: the <code>font</code> tag is deprecated but does not fail validation in any XHTML standard{{Citation needed|date=October 2009}}.</small>

Additionally, the AdSense advertisement units use the JavaScript method <code>document.write()</code>, which does not work correctly when rendered with the <code>application/xhtml+xml</code> [[MIME type]]. The units also use the <code>[[iframe]]</code> HTML tag, which is not validated correctly with the ''XHTML 1.0 Strict'' or ''XHTML 1.0 Transitional'' [[Xhtml#DOCTYPEs|DOCTYPEs]].

The terms of the AdSense program forbid its [[affiliates]] from modifying the code, thus preventing these participants from having valid XHTML websites.

However, a workaround has been found by creating a separate HTML webpage containing only the AdSense advertisement units, and then importing this page into an XHTML webpage with an <code>object</code> tag.<ref>{{cite web|url=http://www.cssplay.co.uk/menu/adsense.html|title=Adding AdSense to application/xhtml+xml pages|author=Stu Nicholls|accessdate=2008-02-02}}</ref> This workaround appears to be accepted by Google.<ref>{{cite web|url=http://www.456bereastreet.com/archive/200409/content_negotiation_adsense_and_comments/ | title=Content negotiation, AdSense, and comments | author=Roger Johansson | date=2004-09-01| accessdate=2008-02-02}}</ref>

==How AdSense works==
* The webmaster inserts the AdSense JavaScript code into a webpage.
* Each time this page is visited, the JavaScript code uses inlined [[JSON]] to display content fetched from Google's servers.
* For [[:Contextual advertising|contextual advertisements]], Google's servers use a [[cache]] of the page to determine a set of high-value [[Keyword (Internet search)|keywords]]. If keywords have been cached already, advertisements are served for those keywords based on the AdWords bidding system. (More details are described in the [http://appft1.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=1&f=G&l=50&co1=AND&d=PG01&s1=20040059708&OS=20040059708&RS=20040059708 AdSense patent].)
* For site-targeted advertisements, the advertiser chooses the page(s) on which to display advertisements, and pays based on [[cost per mille]] (CPM), or the price advertisers choose to pay for every thousand advertisements displayed.<ref>{{cite web
|url=http://adwords.google.com/support/bin/answer.py?answer=54411&topic=13175
|title=Google AdSense Help Center: What are CPM ads?
|date=2007-12-29
}}</ref><ref>{{cite web
|url=http://www.google.com/ads/sitetargeted.html
|title=Google AdWords: All About Site-Targeted Ads
|date=2007-12-29
}}</ref>
* For referrals, Google adds money to the advertiser's account when visitors either download the referred software or subscribe to the referred service.<ref>{{cite web
|url=https://www.google.com/adsense/support/bin/answer.py?answer=25890&topic=11724
|title=Google AdSense Help Center: What is the referrals feature?
|date=2007-12-29
}}</ref> The referral program was retired in August 2008.<ref>
{{cite journal
  | title = Google yanks AdSense referral program, offers shoddy surrogate
  | journal = blog.anta.net
  | date = 2008-07-01
  | url = http://blog.anta.net/2008/07/01/google-yanks-adsense-referral-program-offers-shoddy-surrogate/
  | issn = 1797-1993
  | accessdate = 2008-07-01 }}
</ref>
* [[#AdSense for search|Search advertisements]] are added to the list of results after the visitor performs a search.
* Because the JavaScript is sent to the Web browser when the page is requested, it is possible for other website owners to copy the JavaScript code into their own webpages. To protect against this type of fraud, AdSense customers can specify the pages on which advertisements should be shown. AdSense then ignores clicks from pages other than those specified.

==Abuse==
Some webmasters create websites tailored to lure searchers from Google and other engines onto their AdSense website to make money from clicks. These "zombie" websites often contain nothing but a large amount of interconnected, automated content (e.g., a directory with content from the [[Open Directory Project]], or [[scraper site|scraper websites]] relying on RSS feeds for content). Possibly the most popular form of such "AdSense farms" are [[splog]]s (spam blogs), which are centered around known high-paying keywords. Many of these websites use content from other websites, such as [[Wikipedia]], to attract visitors. These and related approaches are considered to be search engine [[Spam (electronic)|spam]] and can be reported to Google. {{Citation needed|date=May 2009}}

A [[Scraper site#Made for AdSense|Made for AdSense]] (MFA) website or webpage has little or no content, but is filled with advertisements so that users have no choice but to click on advertisements. Such pages were tolerated in the past, but due to complaints, Google now disables such accounts.

There have also been reports of [[Trojan horse (computing)|Trojan horses]] engineered to produce counterfeit Google advertisements that are formatted looking like legitimate ones. The Trojan uploads itself onto an unsuspecting user's computer through a webpage and then replaces the original advertisements with its own set of malicious advertisements.<ref>{{cite news|url=http://www.techshout.com/internet/2005/27/a-trojan-horse-program-that-targets-google-ads-has-been-detected-by-an-indian-web-publisher/|title=Trojan Horse program that targets Google AdSense ads|publisher=TechShout|date=2005-12-27|author=Benaifer Jah}}</ref>

==Criticism==
Due to alleged concerns about [[click fraud]], Google AdSense has been criticized by some [[search engine optimization]] firms as a large source of what Google calls "invalid clicks", in which one company clicks on a rival's search engine advertisements to drive up the other company's costs.<ref>{{cite news
|url=http://www.wired.com/wired/archive/14.01/fraud.html
|title=How click fraud could swallow the internet|publisher=[[Wired (magazine)|Wired]]
|author=[[Charles C. Mann]]
|date=January 2006}}</ref>

To help prevent click fraud, AdSense publishers can choose from a number of click-tracking programs.{{Citation needed|date=October 2007}} These programs display detailed information about the visitors who click on the AdSense advertisements. Publishers can use this to determine whether or not they have been a victim of click fraud. There are a number of commercial tracking scripts available for purchase.

The payment terms for webmasters have also been criticized.<ref>{{cite news
|url=http://lembingley.computing.co.uk/2007/02/google-keeps-co.html
|title=Google keeps on coining it in|publisher=[[IT Week]]
|date=2007-02-01
|author=Lem Bingley
}}</ref>
Google withholds payment until an account reaches US$100,<ref>{{cite web
|url=https://www.google.com/adsense/support/bin/answer.py?answer=9905
|title=When do I get paid?
|publisher=Google AdSense Help Center
}}</ref>
but many micro content providers {{Citation needed|date=July 2008}} require a long time—years in some cases—to build up this much AdSense revenue. However, Google will pay all earned revenue greater than US$10 when an AdSense account is closed and not disabled.

Many website owners complain that their AdSense accounts have been disabled just before they were supposed to receive their first paycheck from Google. Google claims accounts have been disabled due to click fraud or forbidden content, but have offered no proof of this. An automated email is sent to the publisher's owner which offers no reasoning, or options but a link to file an appeal. In the email, Google states that "Because we have a
responsibility to protect our AdWords advertisers from inflated costs due to invalid activity, we've found it necessary to disable your AdSense
account. Your outstanding balance and Google's share of the revenue will both be fully refunded back to the affected advertisers." The revenue generated - whether legitimate or not - is taken, and all complaints are deferred.<ref>{{cite web|url=http://www.google.com/adsense/support/bin/answer.py?answer=57153
|title=Disabled Account FAQ - AdSense Help
|date=2010-11-08}}</ref>

Google came under fire when the official Google AdSense Blog showcased the French video website Imineo.com. This website violated Google's AdSense Program Policies by displaying AdSense alongside sexually explicit material. Typically, websites displaying AdSense have been banned from showing such content.<ref>{{cite news
|url=https://www.google.com/adsense/support/bin/answer.py?hl=en&answer=105957 
|title=Adult content
|publisher=Google AdSense Help Center}}</ref>  Some sites have been banned for distributing copyrighted material even when they hold the copyright themselves or are authorized by the copyright holder to distribute the material.<ref>{{cite web
|url=https://www.google.com/adsense/support/bin/answer.py?answer=48182&sourceid=aso&subid=ww-ww-et-asui&medium=link
|title=Google AdSense Program Policies
|date=2007-12-29
}}</ref> 

It has been reported that using both AdSense and AdWords may cause a website to pay Google a commission when the website advertises itself.<ref>{{cite web
|url=http://blog.colnect.com/2009/02/be-careful-when-using-both-adsense.html
|title=BE CAREFUL when using both AdSense + AdWords by Google
|date=2009-02-19
}}</ref>

In some cases, AdSense displays inappropriate or offensive ads. For example, in a news story about a terrorist attack in [[India]], an advert was generated for a (presumably non-existent) educational qualification in terrorism.<ref>{{cite web
|url=http://www.businessinsider.com/googles-worst-ads-ever-2009-8
|title=Google's Worst Ads Ever (GOOG)
|date=2009-08-20
}}</ref>

AdSense sets [[tracking cookie]]s that are viewed by some<ref>[http://www.scroogle.org/adsense.html Criticism of AdSense cookies]</ref> as a threat to privacy. Webmasters that use AdSense must place the appropriate warning in the privacy policy page.<ref>[https://www.google.com/adsense/localized-terms Google AdSense terms]</ref>

==See also==
* ''[[The AdSense Code]]'' (book)
* [[Google AdWords]]
* [[List of Google products]]
* [[Pay per play]]
* [[Scraper site|Scraper website]]

==References==
{{Reflist|2}}

==External links==
* [http://www.adsense.com/ Google AdSense]
* [http://appft1.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=1&f=G&l=50&co1=AND&d=PG01&s1=20040059708&OS=20040059708&RS=20040059708 Google AdSense patent application]
* [http://adsense.blogspot.com/ Inside AdSense] — Google's official weblog on AdSense
<!--======================== {{No more links}} ============================
    | PLEASE BE CAUTIOUS IN ADDING MORE LINKS TO THIS ARTICLE. Wikipedia  |
    | is not a collection of links nor should it be used for advertising. |
    |                                                                     |
    |           Excessive or inappropriate links WILL BE DELETED.         |
    | See [[Wikipedia:External links]] & [[Wikipedia:Spam]] for details.  |
    |                                                                     |
    | If there are already plentiful links, please propose additions or   |
    | replacements on this article's discussion page, or submit your link |
    | to the relevant category at the Open Directory Project (dmoz.org)   |
    | and link back to that category using the {{dmoz}} template.         |
    ======================= {{No more links}} =============================-->

{{Google Inc.}}

{{DEFAULTSORT:Adsense}}
[[Category:Google services]]
[[Category:Internet advertising services and affiliate networks]]
[[Category:Web 2.0]]
[[Category:Internet marketing]]
[[Category:1998 establishments]]

[[ar:???? ?????]]
[[bn:??????????]]
[[be-x-old:Google AdSense]]
[[ca:AdSense]]
[[cs:Google AdSense]]
[[da:Google AdSense]]
[[de:Google AdSense]]
[[es:AdSense]]
[[eu:AdSense]]
[[fa:???? ?????]]
[[fr:AdSense]]
[[gl:AdSense]]
[[ko:????]]
[[hi:???? ???????]]
[[id:AdSense]]
[[it:AdSense]]
[[he:Google AdSense]]
[[kn:????? ?????????]]
[[hu:AdSense]]
[[arz:?????]]
[[ms:AdSense]]
[[nl:Google AdSense]]
[[ja:Google AdSense]]
[[no:AdSense]]
[[nn:AdSense]]
[[pl:Google AdSense]]
[[pt:AdSense]]
[[ru:AdSense]]
[[sk:Google Adsense]]
[[fi:AdSense]]
[[sv:AdSense]]
[[th:?????? ????????]]
[[tr:AdSense]]
[[uk:Google AdSense]]
[[ur:???? ???????]]
[[vi:AdSense]]
[[zh:Google AdSense]]</text>
</page>
<page>
<id>930</id>
<title>AdaBoost</title>
<text>'''AdaBoost''', short for Adaptive [[Boosting]], is a [[machine learning]] algorithm, formulated by [[Yoav Freund]] and [[Robert Schapire]]<ref>Yoav Freund, Robert E. Schapire. [http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.56.9855 "A Decision-Theoretic Generalization of on-Line Learning and an Application to Boosting"], 1995</ref>. It is a [[meta-algorithm]], and can be used in conjunction with many other learning algorithms to improve their performance. AdaBoost is adaptive in the sense that subsequent classifiers built are tweaked in favor of those instances misclassified by previous classifiers. AdaBoost is sensitive to noisy data and [[outlier]]s. However in some problems it can be less susceptible to the [[overfitting (machine learning)|overfitting]] problem than most learning algorithms. 

AdaBoost calls a [[Boosting|weak classifier]] repeatedly in a series of rounds <math> t = 1,\ldots,T</math>. For each call a distribution of weights <math>D_{t}</math> is updated that indicates the importance of examples in the data set for the classification. On each round, the weights of each incorrectly classified example are increased (or alternatively, the weights of each correctly classified example are decreased), so that the new classifier focuses more on those examples. 

== The algorithm for the binary classification task ==
Given: <math>(x_{1},y_{1}),\ldots,(x_{m},y_{m})</math> where <math>x_{i} \in X,\, y_{i} \in Y = \{-1, +1\}</math>

Initialize <math>D_{1}(i) = \frac{1}{m}, i=1,\ldots,m.</math>

For <math>t = 1,\ldots,T</math>:

* Find the classifier <math>h_{t} : X \to \{-1,+1\}</math> that minimizes the error with respect to the distribution <math>D_{t}</math>:
: <math>h_{t} = \underset{h_{t} \in \mathcal{H}}{\operatorname{argmin}} \; \epsilon_{t}</math>, where <math> \epsilon_{t} = \sum_{i=1}^{m} D_{t}(i)[y_i \ne h_{t}(x_{i})]</math>
* if <math>\epsilon_{t} \geq 0.5</math> then stop.
* Choose <math>\alpha_{t} \in \mathbb{R}</math>, typically <math>\alpha_{t}=\frac{1}{2}\textrm{ln}\frac{1-\epsilon_{t}}{\epsilon_{t}}</math> where <math>\epsilon_{t}</math> is the weighted error rate of classifier <math>h_{t}</math>.
* Update:
: <math>D_{t+1}(i) = \frac{ D_t(i) \exp(-\alpha_t y_i h_t(x_i)) }{ Z_t }</math><br>
where <math>Z_{t}</math> is a normalization factor (chosen so that <math>D_{t+1}</math> will be a [[probability distribution]], i.e. sum one over all x).

Output the final classifier:

: <math>H(x) = \textrm{sign}\left( \sum_{t=1}^{T} \alpha_{t}h_{t}(x)\right)</math>

The equation to update the distribution <math>D_{t}</math> is constructed so that:

: <math>- \alpha_{t} y_{i} h_{t}(x_{i}) \begin{cases} <0, & y(i)=h_{t}(x_{i}) \\ >0, & y(i) \ne h_{t}(x_{i}) \end{cases}</math>

Thus, after selecting an optimal classifier <math>h_{t} \,</math> for the distribution <math>D_{t} \,</math>, the examples <math>x_{i} \,</math> that the classifier <math>h_{t} \,</math> identified correctly are weighted less and those that it identified incorrectly are weighted more.  Therefore, when the algorithm is testing the classifiers on the distribution <math>D_{t+1} \,</math>, it will select a classifier that better identifies those examples that the previous classifer missed.

==Statistical Understanding of Boosting==

Boosting can be seen as minimization of a [[convex loss function]] over a [[convex set]] of functions. <ref>T. Zhang, "Statistical behavior and consistency of classification methods based on convex risk minimization", Annals of Statistics 32 (1), pp. 56-85, 2004.</ref> Specifically, the loss being minimized is the exponential loss

:<math>\sum_i e^{-y_i f(x_i)}</math>

and we are seeking a function

:<math>f = \sum_t \alpha_t h_t</math>

==See also==
* [[Bootstrap aggregating]]
* [[LPBoost]]
* [[GentleBoost]]

==References==
{{reflist}}

==Implementations==
*[http://www.inf.fu-berlin.de/inst/ag-ki/adaboost4.pdf AdaBoost and the Super Bowl of Classifiers - A Tutorial on AdaBoost.] 
*[http://codingplayground.blogspot.com/2009/03/adaboost-improve-your-performance.html Adaboost in C++], an implementation of Adaboost in C++ and boost by Antonio Gulli
*[http://www.mathworks.com/matlabcentral/fileexchange/27813  Easy readable Matlab Implementation of Classic AdaBoost]
*[http://code.google.com/p/icsiboost/ icsiboost], an open source implementation of Boostexter
*[http://jboost.sourceforge.net JBoost], a site offering a classification and visualization package, implementing AdaBoost among other boosting algorithms. 
*[http://graphics.cs.msu.ru/en/science/research/machinelearning/adaboosttoolbox MATLAB AdaBoost toolbox. Includes Real AdaBoost, Gentle AdaBoost and Modest AdaBoost implementations.] 
*[http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=21317&objectType=file A Matlab Implementation of AdaBoost]
*[http://luispedro.org/software/milk milk] for Python implements [http://packages.python.org/milk/adaboost.html AdaBoost].
*[http://www.esuli.it/mpboost MPBoost++], a C++ implementation of the original AdaBoost.MH algorithm and of an improved variant, the MPBoost algorithm.
*[http://npatternrecognizer.codeplex.com/ NPatternRecognizer ], a fast machine learning algorithm library written in C#. It contains support vector machine, neural networks, bayes, boost, k-nearest neighbor, decision tree, ..., etc.
*[http://opencv.willowgarage.com/documentation/boosting.html OpenCV implementation of several boosting variants] 


==External links==
*[http://www.boosting.org Boosting.org], a site on boosting and related ensemble learning methods
*[http://cmp.felk.cvut.cz/~sochmj1/adaboost_talk.pdf AdaBoost] Presentation summarizing Adaboost (see page 4 for an illustrated example of performance)
*[http://www.site.uottawa.ca/~stan/csi5387/boost-tut-ppr.pdf A Short Introduction to Boosting] Introduction to Adaboost by Freund and Schapire from 1999
*[http://citeseer.ist.psu.edu/cache/papers/cs/2215/http:zSzzSzwww.first.gmd.dezSzpersonszSzMueller.Klaus-RobertzSzseminarzSzFreundSc95.pdf/freund95decisiontheoretic.pdf A decision-theoretic generalization of on-line learning and an application to boosting] ''Journal of Computer and System Sciences'', no. 55. 1997  (Original paper of Yoav Freund and Robert E.Schapire where Adaboost is first introduced.)
*[http://www.cs.ucsd.edu/~yfreund/adaboost/index.html An applet demonstrating AdaBoost]
*[http://engineering.rowan.edu/~polikar/RESEARCH/PUBLICATIONS/csm06.pdf Ensemble Based Systems in Decision Making], R. Polikar, IEEE Circuits and Systems Magazine, vol.6, no.3, pp. 21-45, 2006. A tutorial article on ensemble systems including pseudocode, block diagrams and implementation issues for AdaBoost and other ensemble learning algorithms.
*[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.9525 Additive logistic regression: a statistical view of boosting] by Jerome Friedman, Trevor Hastie, Robert Tibshirani. Paper introducing probabilistic theory for AdaBoost, and introducing GentleBoost

[[Category:Classification algorithms]]
[[Category:Ensemble learning]]

[[fr:AdaBoost]]
[[ja:AdaBoost]]
[[pl:AdaBoost]]
[[pt:AdaBoost]]
[[ru:AdaBoost]]</text>
</page>
<page>
<id>938</id>
<title>Ada Semantic Interface Specification</title>
<text>{{wiktionarypar|ASIS}}

The '''Ada Semantic Interface Specification''' ('''ASIS''') is a layered, open architecture providing vendor-independent access to the [[Ada programming language|Ada]] Library Environment. It allows for the static analysis of Ada programs and libraries.

== References ==
* ''ISO/IEC 15291: Information technology — Programming languages — Ada Semantic Interface Specification (ASIS)''
* [http://www.acm.org/sigada/WG/asiswg/specs/asis20s.txt ASIS 2.0 specification]

== External links ==
* [http://www.acm.org/sigada/WG/asiswg/ ASIS Working Group]

== See also ==
* [[Ada programming language]]

{{compu-lang-stub}}
{{standard-stub}}

[[Category:Computer and telecommunication standards]]

[[yo:ISO/IEC 15291]]</text>
</page>
<page>
<id>955</id>
<title>Adaptive-additive algorithm</title>
<text>In the studies of [[Fourier optics]], [[sound synthesis]], [[Stellar astronomy|stellar]] [[interferometry]], [[optical tweezers]], and diffractive optical elements (DOEs) it is often important to know the [[spatial frequency]] phase of an observed wave source. In order to reconstruct this [[phase (waves)|phase]] the '''Adaptive-Additive Algorithm''' (or '''AA algorithm'''), which derives from a group of adaptive (input-output) algorithms, can be used. The AA algorithm is an [[iterative]] [[algorithm]] that utilizes the [[Fourier Transform]] to calculate an unknown part of a propagating wave, normally the [[spatial frequency]] [[phase (waves)|phase]] (k space). This can be done when given the phase’s known counterparts, usually an observed [[amplitude]] (position space) and an assumed starting [[amplitude]] (k space). To find the correct [[phase (waves)|phase]] the [[algorithm]] uses error conversion, or the error between the desired and the theoretical [[intensity (physics)|intensities]]. The AA algorithm is currently being implemented by Dr. Wendell Hill III, Alex Robel, V. Kotlyar Soifer, and David G Grier.

==The algorithm==
===History===

The adaptive-additive algorithm was originally created to reconstruct the [[spatial frequency]] [[phase (waves)|phase]] of light intensity in the study of stellar [[interferometry]]. Since then, the AA algorithm has been adapted to work in the fields of [[Fourier Optics]] by Soifer and Dr. Hill, [[soft matter]] and [[optical tweezers]] by Dr. Grier, and [[sound synthesis]] by Robel.

===Pseudo-code algorithm===

1. Define input amplitude and random phase

2. Forward Fourier Transform

3. Separate transformed amplitude and phase

4. Compare transformed amplitude/intensity to desired output amplitude/intensity

5. Check convergence conditions

6. Mix transformed amplitude with desired output amplitude and combine with transformed phase

7. Inverse Fourier Transform

8. Separate new amplitude and new phase

9. Combine new phase with original input amplitude

10. Loop back to Forward Fourier Transform

===Example===

For the problem of reconstructing the [[spatial frequency]] phase (''k''-space) for a desired [[intensity (physics)|intensity]] in the image plane (''x''-space). Assume the [[amplitude]] and the starting phase of the wave in ''k''-space is a <math>A_0</math> and <math>\phi_n^{k}</math> respectively. [[Fourier transform]] the wave in ''k''-space to ''x'' space.

: <math>A_0e^{i\phi_n^{k}} \xrightarrow{FFT} A_n^fe^{i\phi_n^{f}}</math>

Then compare the transformed [[intensity (physics)|intensity]] <math>I_n^f</math> with the desired intensity <math>I_0^f</math>, where

: <math>
I_n^f = \left(A_n^f\right)^2,
</math>

: <math>
\varepsilon = \sqrt{\left(I_n^f\right)^2 - \left(I_0\right)^2}.
</math>

Check <math>\varepsilon</math> against the convergence requirements. If the requirements are not met then mix the transformed [[amplitude]] <math>A_n^f</math> with desired amplitude <math>A^f</math>.

: <math>\bar{A}^f_n = \left[a A^f + (1-a) A_n^f\right],</math>

where ''a'' is mixing ratio and

: <math>A^f = \sqrt{I_0}</math>.

''Note that ''a'' is a percentage, defined on the interval 0 = ''a'' = 1.

Combine mixed amplitude with the ''x''-space phase and [[inverse Fourier transform]].

: <math>\bar{A}^{f}e^{i\phi_n^f} \xrightarrow{iFFT} \bar{A}_n^ke^{i\phi_n^k}.</math>

Separate <math>\bar{A}_n^k</math> and <math>\phi^k_n</math> and combine <math>A_0</math> with <math>\phi^k_n</math>. Increase loop by one <math> n \to n + 1</math> and repeat.

====Limits====
* If <math>a = 1</math> then the AA algorithm becomes the [[Gerchberg–Saxton algorithm]].
* If <math>a = 0</math> then <math>\bar{A}^k_n = A_0</math>.

==See also==

* [[Gerchberg–Saxton algorithm]]
* [[Fourier optics]]
* [[Holography]]
* [[Interferometry]]
* [[Synthesizer|Sound Synthesis]]

==References==

* {{citation
| last=Dufresne
| first=Eric
| last2=Grier
| first2=David G
| last3=Spalding
| title=Computer-Generated Holographic Optical Tweezer Arrays
| journal=Review of Scientific Instruments
| volume=72 | issue=3
| month=December | year=2000}}.
* {{citation
| last=Grier
| first=David G
| title=Adaptive-Additive Algorithm
| date=October 10, 2000
| url=http://www.physics.nyu.edu/~dg86/cgh2b/node6.html}}.
* {{citation
| last=Robel
| first=Axel
| title=Adaptive Additive Modeling With Continuous Parameter Trajectories
| url=http://ieeexplore.ieee.org/iel5/10376/32978/101109TSA2005858529.pdf?arnumber=101109TSA2005858529}}.
* {{citation
| last=Robel
| first=Axel
| title=Adaptive-Additive Synthesis of Sound Technical
| place=University of Berlin Germany
| publisher=Einsteinufer 17, 10587
| location=Berlin, Germany.
| url=http://i2pi.com/PAPERS/music-dsp/adaptive-additive-synthesis-of.pdf
| format= }}{{dead link|date=April 2009}}
* {{Citation
| last=Soifer
| first=V. Kotlyar
| last2=Doskolovich,
| first2=L.
| title=Iterative Methods for Diffractive Optical Elements Computation
| year=1997
| publisher=Taylor & Francis
| location=Bristol, PA
| isbn=978-0-7484-0634-0}}

==External links==
* [http://staff.chess.cornell.edu/~shen/workshop2003/presentations/Talk_DiFabrizio.pdf A PDF/Power Point Presentation that describes the uses and variations of the AA algorithm] ''Berkeley, Ca''.
* [http://physics.nyu.edu/grierlab/cgh2b/node6.html David Grier's Lab] Presentation on optical tweezers and fabrication of AA algorithm.
* [http://www-ccrma.stanford.edu/~roebel/addsyn/index.html Adaptive Additive Synthesis for Non Stationary Sound] Dr. Axel Robel.
* [http://hillslab.umd.edu/ Hill Labs] ''University of Maryland College Park''.

{{DEFAULTSORT:Adaptive-Additive Algorithm}}
[[Category:Digital signal processing]]
[[Category:Physical optics]]</text>
</page>
<page>
<id>956</id>
<title>Adaptive Behavior</title>
<text>{{Infobox Journal
| title        = Adaptive Behavior
| cover        = 
| editor       = 
| discipline   = Adaptive behavior, ethology, cognitive science, robotics, neuroscience
| language     = English
| abbreviation = 
| publisher    = International Society for Adaptive Behavior
| country      = [[United States|USA]]
| frequency    = bi-monthly
| history      = 
| openaccess   = 
| impact       = 
| impact-year  = 
| website      = http://adb.sagepub.com/
| link1        = 
| link1-name   = 
| link2        = 
| link2-name   = 
| RSS          = 
| atom         = 
| JSTOR        = 
| OCLC         = 
| LCCN         = 
| CODEN        = 
| ISSN         = 1059-7123
| eISSN        = 
}}

'''''Adaptive Behavior''''' was founded in 1992 and is the official journal of the [[International Society for Adaptive Behavior]]. It specializes in research on adaptive behavior in both living and artificial systems.

The journal is interdisciplinary in scope and publishes research in [[biologically inspired computing]], [[computational neuroscience]], [[evolutionary robotics]], [[autonomous robotics]], the [[animat]] approach, and [[embodied cognition]].

''Adaptive Behavior'' is published online and in hard copy by [[SAGE Publications]].

== External links ==
*[http://adb.sagepub.com/ ''Adaptive Behavior'' on the SAGE website]
*[http://www.isab.org.uk/ International Society for Adaptive Behavior]


[[Category:ethology journals]]
[[Category:Neuroscience journals]]
[[Category:Computer science journals]]
[[Category:Robotics journals]]
[[Category:English-language journals]]
[[Category:Bimonthly journals]]</text>
</page>
<page>
<id>988</id>
<title>Adaptive sort</title>
<text>A [[sorting algorithm]] falls into the '''adaptive sort''' family if it takes advantage of existing order in its input.  It benefits from the presortedness in the input sequence – or a limited amount of [[randomness|disorder]] for various definitions of measures of disorder – and sorts faster.  Adaptive sorting is usually performed by modifying existing sorting algorithms.

== Motivation ==
[[Comparison sort|Comparison-based sorting algorithms]] have traditionally dealt with achieving an optimal bound of [[Big O notation|O]](n logn) when dealing with [[time complexity]].  Adaptive sort takes advantage of the existing order of the input to try to achieve better times, so that the time taken by the algorithm to sort is a smoothly growing function of the size of the sequence ''and'' the disorder in the sequence.  In other words, the more presorted the input is, the faster it should be sorted.

This is an attractive algorithm because nearly sorted sequences are common in practice.  Thus, the performance of existing sort algorithms can be improved by taking into account the existing order in the input.  

Note that the most worst-case sorting algorithms that do optimally well in the worst-case, notably [[heap sort]] and [[merge sort]], do not take existing order within their input into account, although this deficiency is easily rectified in the case of [[merge sort]] by checking if left.last_item = right.first_item, in which case a merge operation may be replaced by simple concatenation – a modification that is well within the scope of making an algorithm adaptive.

== Examples ==
A classic example of an adaptive sorting algorithm is ''Straight Insertion Sort''.  In this sorting algorithm, we scan the input from left to right, repeatedly finding the position of the current item, and insert it into an array of previously sorted items.

In [[pseudo-code]] form, the ''Straight Insertion Sort'' algorithm could look something like this:

  '''procedure''' ''Straight Insertion Sort (X, n)'':
  ''X[0]'' := - 8;
  '''for''' j := 2 '''to''' n '''do'''
  '''begin''' i := j - 1;
        t := ''X[j]'';
        '''while''' t < ''X[i]'' '''do'''
        '''begin''' ''X[i + 1]'' := ''X[i]'';
              i := i - 1
        '''end''';
        ''X[i + 1]'' := t;
  '''end;'''

The performance of this algorithm can be described in terms of the number of [[Inversion (discrete mathematics)|inversions]] in the input, and then T(n) will be roughly equal to I(A) + (n - 1), where I(A) is the number of Inversions.  Using this measure of presortedness – being relative to the number of inversions – ''Straight Insertion Sort'' takes less time to sort the closer it is to being sorted.

Other examples of adaptive sorting algorithms are [[Adaptive heap sort|Adaptive Heap-Sort]] and [[Adaptive Merge-Sort]].  Dijkstra’s [[Smoothsort]] algorithm is a variation on heap-sort that is also considered an adaptive sorting algorithm.

[[Timsort]], used as the generic sorting algorithm for several programming languages including Python, is adaptive.<ref>{{Cite web
|last=Peters
|first=Tim
|authorlink=Tim Peters (programmer)
|title=listsort.txt
|url=http://svn.python.org/projects/python/trunk/Objects/listsort.txt
|accessdate=2009-03-31
}}</ref>

== See also ==
* [[Sorting algorithms]]
* [[Smoothsort]]

== References ==
* {{cite book
  | last = Hagerup
  | first = Torben
  | coauthors = Jyrki Katjainen
  | title = Algorithm Theory – SWAT 2004
  | publisher = Springer-Verlag
  | year = 2004
  | location = Berlin Heidelberg
  | pages = 221–222
  | url = http://books.google.com/?id=2E-KNhKl3gEC&pg=PA221&lpg=PA221&dq=adaptive+sort
  | isbn = 3-540-22339-8}}
* {{cite book
  | last = Mehta
  | first = Dinesh P.
  | coauthors = Sartaj Sahni
  | title = Data Structures and Applications
  | publisher = Chapman & Hall/CRC
  | year = 2005
  | location = USA
  | pages = 11-8–11-9
  | url = http://books.google.com/?id=fQVZy1zcpJkC&pg=PT230&lpg=PT230&dq=adaptive+sort
  | isbn = 1-58488-435-5}}
* {{cite journal
  | doi = 10.1145/146370.146381
  | last = Estivill-Castro
  | first = Vladmir
  | coauthors = Derick Wood
  | title = A survey of adaptive sorting algorithms
  | journal = ACM
  | volume = 24
  | issue = 4
  | pages = 441–476
  | publisher = ACM
  | location = New York, NY, USA
  | date = December 1992
  | url = http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=D302DA5A589E5D23ED76279C88DCCCEB?doi=10.1.1.45.8017&rep=rep1&type=pdf
  | issn = 0360-0300
  | accessdate = February 22, 2009}}
* {{cite journal
  | last = Petersson
  | first = Ola
  | coauthors = Alistair Moffat
  | title = A framework for adaptive sorting
  | journal = Lecture Notes in Computer Science
  | volume = 621
  | pages = 422–433
  | publisher = Springer Berlin / Heidelberg
  | location = Berlin
  | year = 1992
  | url = http://www.springerlink.com/content/yv85w0u75777j021/
  | issn = 1611-3349
  | doi = 10.1007/3-540-55706-7_38
  | accessdate = February 23, 2009}}
<references />

{{sorting}}

[[Category:Sorting algorithms]]

[[it:Algoritmi di ordinamento adattivi]]
[[pt:Ordenação adaptativa]]</text>
</page>
<page>
<id>1007</id>
<title>Address Range Registers</title>
<text>{{About|computer hardware|other uses|ARR (disambiguation)}}
'''Address Range Registers''' (ARRs) are [[control register]]s of the [[Cyrix]] [[6x86]], [[6x86MX]] and [[Cyrix MII|MII]] processors that are used as a control mechanism which provides system software with control of how accesses to memory ranges by the CPU are cached, similar to what [[Memory Type Range Registers]] (MTRRs) provide on other implementations of the [[x86 architecture]]<ref name="Linux Kernel">{{cite web
 |url = http://cateee.net/lkddb/web-lkddb/MTRR.html
 |title = Linux Kernel Driver Database
 |accessdate = 2009-09-27
 |work = Linux Kernel Driver DataBase
 |publisher = Linux Kernel Driver DataBase
}}
</ref>.

== See also ==
* [[Write barrier]]
* [[Page Attribute Table]]
* [[Memory Type Range Registers]]

== References ==
{{reflist}}

[[Category:Digital registers]]

{{compu-hardware-stub}}</text>
</page>
<page>
<id>1009</id>
<title>Address bus</title>
<text>{{Unreferenced|date=June 2009}}

An '''address bus''' is a [[computer bus]] (a series of lines connecting two or more devices) that is used to specify a [[memory address|physical address]]. When a [[central processing unit|processor]] or [[direct memory access|DMA]]-enabled device needs to read or write to a memory location, it specifies that memory location on the address bus (the value to be read or written is sent on the [[data bus]]). The width of the address bus determines the amount of memory a system can address. For example, a system with a 32-bit address bus can address 2<sup>32</sup> (4,294,967,296) memory locations. If each memory address holds one bit, the addressable memory space is 4 GB.

==Implementation==
Early processors used a wire for each bit of the address width. For example, a 16-bit address bus had 16 physical wires making up the bus. As the buses became wider, this approach became expensive in terms of the number of chip pins and board traces.  Beginning with the [[Mostek]] 4096 DRAM, multiplexed addressing became common.  In a multiplexed address scheme, the address is sent in two equal parts. This halves the number of address bus signals required to connect to the memory. For example a 32-bit address bus can be implemented by using 16 wires and sending the first half of the memory address, immediately followed by the second half.

==Interesting examples==
Accessing an individual byte frequently requires reading or writing the full bus width (a ''[[word (computing)|word]]'') at once. In these instances the least significant bits of the address bus may not even be implemented - it is instead the responsibility of the controlling device to isolate the individual byte required from the complete word transmitted.  This is the case, for instance, with the [[VESA Local Bus]] which lacks the two least significant bits, limiting this bus to [[Data structure alignment|aligned]] 32-bit transfers.

Historically, there were also some examples of computers which were only able to address words.

== See also ==
* [[Memory address]]

{{Computer-bus}}

[[Category:Computer buses|*Address bus]]

[[bg:??????? ????]]
[[de:Bus (Datenverarbeitung)#Adressbus]]
[[et:Aadressisiin]]
[[es:Bus de direcciones]]
[[fr:Bus d'adresse]]
[[nl:Adresbus]]
[[ja:??????]]
[[pl:Szyna adresowa]]
[[pt:Barramento de endereços]]
[[ru:???? ??????]]
[[sv:Adressbuss]]
[[ta:???????? ??????]]
[[zh:?????]]</text>
</page>
<page>
<id>1015</id>
<title>Address space layout randomization</title>
<text>{{Original research|date=October 2008}}
{{Refimprove|date=October 2008}}

'''Address space layout randomization''' ('''ASLR''') is a [[Computer insecurity|computer security]] technique which involves randomly arranging the positions of key data areas, usually including the base of the [[executable]] and position of [[Library (computer science)|libraries]], [[Dynamic memory allocation|heap]], and [[Stack-based memory allocation|stack]], in a [[Process (computer science)|process]]'s [[address space]].

== Benefits ==
Address space randomization hinders some types of security attacks by making it more difficult for an attacker to predict target addresses.  For example, attackers trying to execute [[return-to-libc attack]]s must locate the code to be executed, while other attackers trying to execute [[shellcode]] injected on the stack have to find the stack first.  In both cases, the related memory addresses are obscured from the attackers. These values have to be guessed, and a mistaken guess is not usually recoverable due to the application crashing.

=== Effectiveness ===
Address space layout randomization relies on the low chance of an attacker guessing where randomly-placed areas are located. Security is increased by increasing the search space.  Thus, address space randomization is more effective when more [[Information entropy|entropy]] is present in the random offsets.  Entropy is increased by either raising the amount of [[virtual memory|virtual memory area]] space over which the randomization occurs or reducing the period over which the randomization occurs. The period is typically implemented as small as possible, so most systems must increase VMA space randomization.

To defeat the randomization, attackers must successfully guess the positions of all areas they wish to attack.  For data areas such as stack and heap, where custom code or useful data can be loaded, more than one state can be attacked by using [[NOP slide]]s for code or repeated copies of data. This allows an attack to succeed if the area is randomized to one of a handful of values.  In contrast, code areas such as library base and main executable need to be discovered exactly.  Often these areas are mixed, for example [[stack frame]]s are injected onto the stack and a library is returned into.

To begin, let us declare the following variables:

:<math>E_s = \mbox{entropy bits of stack top}\,</math>
:<math>E_m = \mbox{entropy bits of mmap() base}\,</math>
:<math>E_x = \mbox{entropy bits of main executable base}\,</math>
:<math>E_h = \mbox{entropy bits of heap base}\,</math>
:<math>A_s = \mbox{attacked bits per attempt of stack entropy}\,</math>
:<math>A_m = \mbox{attacked bits per attempt of mmap() base entropy}\,</math>
:<math>A_x = \mbox{attacked bits per attempt of main executable entropy}\,</math>
:<math>A_h = \mbox{attacked bits per attempt of heap base entropy}\,</math>
:<math>\alpha = \mbox{attempts made}\,</math>
:<math>N = E_s-A_s + E_m-A_m + E_x-A_x + E_h-A_h\,</math>

To calculate the probability of an attacker succeeding, we have to assume a number of attempts <math>\alpha</math> carried out without being interrupted by a signature-based IPS, law enforcement, or other factor; in the case of brute forcing, the daemon cannot be restarted.  We also have to figure out how many bits are relevant and how many are being attacked in each attempt, leaving however many bits the attacker has to defeat.

The following formulas represent the probability of success for a given set of <math>\alpha\,</math> attempts on <math>N</math> bits of entropy.

:<math>g \left ( \alpha\, \right ) = \mbox{isolated guessing; address space is re-randomized after each attempt}\,</math>
:<math>g \left ( \alpha\, \right ) = 1 - { \left ( 1 - {2^{-N}} \right ) ^ \alpha\,} : 0 \le \, \alpha\,</math>

:<math>b \left ( \alpha\, \right ) = \mbox{systematic brute forcing on copies of the program with the same address space}</math>
:<math>b \left ( \alpha\, \right ) = \frac{\alpha\,}{{2^N}} : 0 \le \, \alpha\, \le \, {2^N}</math>

In many systems, <math>2^N</math> can be in the thousands or millions; on {{as of | 2009 | alt = modern}} [[64-bit]] systems, these numbers typically reach the millions at least. For 32-bit systems at 2004 computer speeds which have 16 bits for address randomization, Shacham and co-workers state "… 16 bits of address randomization can be defeated by a [[brute force attack]] within minutes."<ref>On the Effectiveness of Address-Space Randomization,Shacham, H. and Page, M. and Pfaff, B. and Goh, E.J. and Modadugu, N. and Boneh, D,Proceedings of the 11th ACM conference on Computer and communications security,pp 298--307, 2004</ref>  It should be noted that the authors' statement depends on the ability to attack the same application multiple times without any delay.  Proper implementations of ASLR, like that included in [[grsecurity]], provide several methods to make such brute force attacks infeasible.  One method involves preventing an executable from executing for a configurable amount of time if it has crashed a certain number of times.

Some systems implement ''Library Load Order Randomization'', a form of ASLR which randomizes the order in which libraries are loaded.  This supplies very little entropy.  An approximation of the number of bits of entropy supplied per needed library is shown below; this does not yet account for varied library sizes, so the actual entropy gained is really somewhat higher.  Note that attackers usually need only one library; the math is more complex with multiple libraries, and shown below as well.  Note that the case of an attacker using only one library is a simplification of the more complex formula for <math>l = 1</math>.

:<math> l = \mbox{number of libraries loaded}</math>
:<math> \beta\, = \mbox{number of libraries used by the attacker}</math>

:<math>E_m = \log_2 \left (l \right ) : \beta\, = 1, l \ge \, 1</math>
:<math>E_m = \sum_{i=l}^{l - \left ( \beta\, - 1 \right )} \log_2 \left (i \right ) : \beta\, \ge \, 1, l \ge \, 1</math>

These values tend to be low even for large values of <math>l</math>, most importantly since attackers typically can use only the [[C standard library]] and thus one can often assume that <math>\beta\, = 1</math>.  Interestingly, however, even for a small number of libraries there are a few bits of entropy gained here; it is thus potentially interesting to combine library load order randomization with VMA address randomization to gain a few extra bits of entropy.  Note that these extra bits of entropy will not apply to other mmap() segments, only libraries.

==== Reducing entropy ====
Attackers may make use of several methods to reduce the entropy present in a randomized address space, ranging from simple information leaks to attacking multiple bits of entropy per attack (such as by [[heap spraying]]).  There is little that can be done about this.

It is possible to leak information about memory layout using [[format string vulnerability|format string vulnerabilities]].  Format string functions such as [[printf]]() use a [[variable argument list]] to do their job; format specifiers describe what the argument list looks like.  Because of the way arguments are typically passed, each format specifier moves closer to the top of the stack frame.  Eventually, the return pointer and stack frame pointer can be extracted, revealing the address of a vulnerable library and the address of a known stack frame; this can completely eliminate library and stack randomization as an obstacle to an attacker.

One can also decrease entropy in the stack or heap.  The stack typically must be aligned to 16 bytes, and so this is the smallest possible randomization interval; while the heap must be page-aligned, typically 4096 bytes.  When attempting an attack, it is possible to align duplicate attacks with these intervals; a [[NOP slide]] may be used with shellcode injection, and the string '/bin/sh' can be replaced with '////////bin/sh' for an arbitrary number of slashes when attempting to return to ''system()''.  The number of bits removed is exactly <math>log_2 \left (n \right )</math> for <math>n</math> intervals attacked.

Such decreases are limited due to the amount of data in the stack or heap.  The stack, for example, is typically limited to 8 [[Megabyte|MB]]<ref name=Prefix2>{{BDprefix|p=b}}</ref> and grows to much less; this allows for at most 19 bits, although a more conservative estimate would be around 8–10 bits corresponding to 4–16 [[Kilobyte|KB]]<ref name=Prefix2>{{BDprefix|p=b}}</ref> of stack stuffing.  The heap on the other hand is limited by the behavior of the memory allocator; in the case of [[glibc]], allocations above 128 KB are created using [[mmap]](), limiting attackers to 5 bits of reduction.  This is also a limiting factor when brute forcing; although the number of attacks to perform can be reduced, the size of the attacks is increased enough that the behavior could in some circumstances become analogous to [[intrusion detection systems]].

== History ==
The [[PaX]] project first coined the term "ASLR".  It published the first design and implementation of ASLR in July, 2001.  This remains the most complete implementation, providing also kernel stack randomization from October 2002 onward.  It also continues to provide the most entropy for each randomized layout compared to other implementations.<ref>Comparison of PaX to ExecShield and W^X</ref>

== Implementations ==
Several mainstream, general-purpose operating systems implement ASLR.

=== OpenBSD ===
[[OpenBSD]] became the first mainstream operating systems to support ASLR (and to activate it by default).<ref>{{cite web
|url=http://www.openbsd.org/papers/ven05-deraadt/index.html
|title=Exploit Mitigation Techniques (updated to include random malloc and mmap)  at OpenCON 2005
|author=Theo De Raadt
|year=2005
|accessdate=26 August 2009}}</ref>

=== Linux ===
[[Linux]] has enabled a weak<ref>http://www.tomshardware.com/reviews/pwn2own-mac-hack,2254-4.html</ref> form of ASLR by default since kernel version 2.6.12 (released June 2005). The [[PaX]] and [[ExecShield]] patchsets to the Linux kernel provide more complete implementations. Various Linux distributions including ''[[Adamantix]]'', ''[[Alpine Linux]]'', ''[[Hardened Gentoo]]'', and ''[[Hardened Linux From Scratch]]'' come with PaX's implementation of ASLR by default.

The [[Exec Shield]] patch for Linux supplies 19 bits of stack entropy on a period of 16 bytes; and 8 bits of mmap() base randomization on a period of 1 page of 4096 bytes.  This places the stack base in an area 8 MB wide containing 524 288 possible positions; and the mmap() base in an area 1 MB wide containing 256 possible positions.

[[Position-independent_code#Position-independent_executables|Position-independent executable (PIE)]] feature implements random base address for the main executable binary since 2003.  It provides the same address randomness to the main executable as being used for the shared libraries.  The PIE feature is in use only for the network facing daemons – the PIE feature cannot be used together with the [[prelink]] feature for the same executable.

The [[prelink]] tool implements randomization at prelink time rather than runtime, because by design prelink aims to handle relocating libraries before the dynamic linker has to, which allows the relocation to occur once for many runs of the program. As a result, real address space randomization would defeat the purpose of prelinking.

=== Microsoft Windows ===
Microsoft's [[Windows Vista]] (released January 2007), [[Windows Server 2008]], [[Windows 7]], and [[Windows Server 2008 R2]] have ASLR enabled by default, although only for those executables and [[dynamic link library|dynamic link libraries]] specifically linked to be ASLR-enabled.<ref>http://msdn.microsoft.com/en-us/library/bb430720.aspx</ref> This did not include [[Internet Explorer 7]] on Windows Vista prior to Service Pack 1; ASLR and [[Data Execution Prevention|DEP]] are both disabled for application compatibility purposes.<ref>{{cite web
|url=http://blogs.msdn.com/sdl/archive/2008/12/18/ms08-078-and-the-sdl.aspx
|title=MS08-078 and the SDL 
|date=December 18, 2008
|accessdate=2009-03-21
|work=The Security Development Lifecycle
|publisher=Microsoft
}}</ref> Newer versions, including [[Internet Explorer 8]] (released March 2009), enable these protections. A registry setting is available to forcibly enable or disable ASLR for all executables and libraries, found at "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\MoveImages".<ref>Windows Internals: Including Windows Server 2008 and Windows Vista, Fifth Edition (PRO-Developer) ISBN 978-0-735-62530-3</ref>

The locations of the [[Dynamic memory allocation|heap]], [[Call stack|stack]], Process Environment Block, and [[Win32 Thread Information Block|Thread Environment Block]] are also randomized. A security whitepaper from Symantec noted that ASLR in 32-bit Windows Vista may not be as robust as expected, and Microsoft has acknowledged a weakness in its implementation.<ref>{{cite web |url=http://www.symantec.com/avcenter/reference/Address_Space_Layout_Randomization.pdf |format=PDF |title=An Analysis of Address Space Layout Randomization on Windows Vista |author=Ollie Whitehouse |month=February |year=2007}}</ref>

Host-based [[Intrusion prevention system]]s such as ''WehnTrust''<ref>[http://www.codeplex.com/wehntrust WehnTrust]</ref> and ''Ozone''<ref>[http://www.securityarchitects.com/products.html Security Architects' Ozone]</ref> also offer ASLR for [[Windows XP]] and [[Windows Server 2003]] operating systems; however complete details of their implementation are not available.<ref>[http://seclab.cs.sunysb.edu/seclab/pubs/acsac06.pdf Address-Space Randomization for Windows Systems]</ref>

=== Mac OS X ===
Apple introduced randomization of some library offsets in [[Mac OS X v10.5]] (released October 2007).<ref>[http://www.apple.com/macosx/security/#sixtyfour Apple - Mac OS X - Security - Keeps safe from viruses and malware]</ref> Their implementation does not provide complete protection against attacks which ASLR is designed to defeat.<ref>[http://securosis.com/2007/10/29/quick-leopard-update/ Quick Leopard Update | securosis.com]</ref><ref>[http://www.matasano.com/log/981/a-roundup-of-leopard-security-features/ Matasano Chargen » A Roundup Of Leopard Security Features]</ref><ref>[http://www.matasano.com/log/986/what-weve-since-learned-about-leopard-security-features/ Matasano Chargen » What We’ve Since Learned About Leopard Security Features]</ref><ref>[http://dvlabs.tippingpoint.com/blog/2007/11/07/leopard-aslr TippingPoint | DVLabs | New Leopard Security Features - Part I: ASLR]</ref>

==See also==
* [[Buffer overflow]]
* [[Stack buffer overflow]]
* [[Stack-smashing protection]]
* [[NX bit]] 
* [[Information entropy]]
* [[heap spraying|Heap Spray]]

==References==
{{reflist}}

==External links==
*[http://pax.grsecurity.net/docs/aslr.txt PaX documentation on ASLR]
*[http://grsecurity.net/PaX-presentation_files/frame.htm Comparison of PaX to ExecShield and W^X]
*[http://blogs.msdn.com/michael_howard/archive/2006/05/26/608315.aspx ASLR for Windows Vista beta 2]
*[http://www.wehnus.com ASLR for Windows 2000/XP/2003 (WehnTrust)]
*[http://www.phrack.org/issues.html?issue=59&id=9#article Bypassing PaX ASLR protection]
*[http://portal.acm.org/citation.cfm?id=1030124&dl=ACM&coll=&CFID=15151515&CFTOKEN=6184618 On the effectiveness of address space layout randomization]
*[http://www.eweek.com/article2/0,1895,1969505,00.asp Microsoft Finds (Random) Way to Secure Vista]
*[http://www.eweek.com/article2/0,1895,2071746,00.asp Windows Vista Randomization Gets OEM Thumbs Up]
*[http://www.winitor.net/en/pestudio.html Test Applications (or libraries) for their ASLR and DEP support.]

{{DEFAULTSORT:Address Space Layout Randomization}}
[[Category:Operating system security]]
[[Category:Memory management algorithms]]

[[de:Address Space Layout Randomization]]
[[fr:Address space layout randomization]]
[[hy:?????? ??????? ????????????? ??????????????]]
[[it:ASLR]]
[[ja:??????????????]]
[[ru:Address Space Layout Randomization]]</text>
</page>
<page>
<id>1023</id>
<title>Adiabatic quantum computation</title>
<text>'''Adiabatic quantum computation''' relies on the [[adiabatic theorem]] to do calculations.<ref name="Farhi2000">
{{cite arXiv |author= [[Edward Farhi]], [[Jeffrey Goldstone]], [[Sam Gutmann]], [[Michael Sipser]] |eprint=quant-ph/0001106 |title=Quantum Computation by Adiabatic Evolution |year=2000 |version=v1 |accessdate=2007-11-26 }}</ref>  First, a complex [[Hamiltonian (quantum mechanics)|Hamiltonian]] is found whose ground state describes the solution to the problem of interest.  Next, a system with a simple Hamiltonian is prepared and initialized to the ground state.  Finally, the simple Hamiltonian is adiabatically evolved to the complex Hamiltonian.  By the adiabatic theorem, the system remains in the ground state, so at the end the state of the system describes the solution to the problem.

AQC is a possible method to get around the problem of [[Quantum_computer#Quantum_decoherence | quantum decoherence]]. Since the quantum system is in the ground state, interference with the outside world cannot make it move to a lower state. If the energy of the outside world (that is, the "temperature of the bath") is kept lower than the energy gap between the ground state and the next higher energy state, the system has a proportionally lower probability of going to a higher energy state. Thus the system can stay coherent as long as needed.

In practice, there are problems during a computation. As the Hamiltonian is gradually changed, the interesting parts (quantum behaviour as opposed to classical) occur when multiple [[qubit]]s are close to a tipping point. It is exactly at this point when the ground state (one set of qubit orientations) gets arbitrarily close to a first energy state (a different arrangement of orientations). Adding a slight amount of energy (from the external bath, or as a result of slowly changing the Hamiltonian) could take the system out of the ground state, and ruin the calculation. Trying to perform the calculation more quickly increases the external energy; scaling the number of qubits makes the energy gap at the tipping points smaller.

==Notes==
{{Reflist}}

{{Quantum computing}}
{{comp-sci-theory-stub}}
[[Category:Quantum mechanics]]
[[Category:Physics theorems]]</text>
</page>
<page>
<id>1029</id>
<title>Adjoint state method</title>
<text>{{primarysources|date=January 2010}}
The '''adjoint state method''' is a [[numerical method]] for computing the [[gradient]] of a [[Function (mathematics)|function]] or [[operator (mathematics)|operator]] in a numerical optimization problem.  It has applications in [[geophysics]] and [[seismic imaging]].

The adjoint state space is chosen to simplify the physical interpretation of equation constraints.<ref name='symes_tr94'>Alain Sei & William Symes. ''Gradient Calculation of the Traveltime Cost Function Without Ray-tracing.'' Expanded Abstracts, 65th Annual [[Society of Exploration Geophysicists]] (SEG) Meeting and Exposition, pages 1351–1354 ([http://www.caam.rice.edu/caam/trs/94/TR94-15.pdf Available online])</ref> It may take the form of a [[Hilbert space]].

Adjoint state techniques allow the use of [[integration by parts]], resulting in a form which explicitly contains the physically interesting quantity.  An adjoint state equation is introduced, including a new unknown variable.

== References ==
<references/>

[[Category:Numerical analysis]]


{{Math-stub}}</text>
</page>
<page>
<id>1030</id>
<title>Adjunction space</title>
<text>In [[mathematics]], an '''adjunction space''' is a common construction in [[topology]] where one [[topological space]] is attached or "glued" onto another. Specifically, let ''X'' and ''Y'' be a topological spaces with ''A'' a [[subspace (topology)|subspace]] of ''Y''. Let ''f'' : ''A'' ? ''X'' be a [[continuous (topology)|continuous map]] (called the '''attaching map'''). One forms the adjunction space ''X'' ?<sub>''f''</sub> ''Y'' by taking the [[disjoint union (topology)|disjoint union]] of ''X'' and ''Y'' and [[quotient space|identifying]] ''x'' with ''f''(''x'') for all ''x'' in ''A''. Schematically,

:<math>X\cup_f Y = (X\amalg Y) / \{f(A) \sim A\}.</math> 

Sometimes, the adjunction is written as <math>X+\!_f \,Y</math>. Intuitively, we think of ''Y'' as being glued onto ''X'' via the map ''f''.

As a set, ''X'' ?<sub>''f''</sub> ''Y'' consists of the disjoint union of ''X'' and (''Y'' - ''A''). The topology, however, is specified by the quotient construction. In the case where ''A'' is a [[closed set|closed]] subspace of ''Y'' one can show that the map ''X'' ? ''X'' ?<sub>''f''</sub> ''Y'' is a closed [[embedding]] and (''Y'' - ''A'') ? ''X'' ?<sub>''f''</sub> ''Y'' is an open embedding.

==Examples==
*A common example of an adjunction space is given when ''Y'' is a closed ''n''-[[ball (mathematics)|ball]] (or ''cell'') and ''A'' is the boundary of the ball, the (''n''-1)-[[sphere]]. Inductively attaching cells along their spherical boundaries to this space results in an example of a [[CW complex]].
*Adjunction spaces are also used to define [[connected sum]]s of [[manifold]]s. Here, one first removes open balls from ''X'' and ''Y'' before attaching the boundaries of the removed balls along an attaching map.
*If ''A'' is a space with one point then the adjunction is the [[wedge sum]] of ''X'' and ''Y''.
*If ''X'' is a space with one point then the adjunction is the quotient ''Y''/''A''.

==Categorical description==
The attaching construction is an example of a [[pushout (category theory)|pushout]] in the [[category of topological spaces]]. That is to say, the adjunction space is [[universal property|universal]] with respect to following [[commutative diagram]]:

<div style="text-align: center;">
[[Image:AdjunctionSpace-01.svg]]
</div>

Here ''i'' is the [[inclusion map]] and f<sub>''X''</sub>, f<sub>''Y''</sub> are the maps obtained by composing the quotient map with the canonical injections into the disjoint union of ''X'' and ''Y''. One can form a more general pushout by replacing ''i'' with an arbitrary continuous map ''g'' &mdash; the construction is similar. Conversely, if ''f'' is also an inclusion the attaching construction is to simply glue ''X'' and ''Y'' together along their common subspace.

==References==
* Stephen Willard, ''General Topology'', (1970) Addison-Wesley Publishing Company, Reading Massachusetts. ''(Provides a very brief introduction.)''
* {{planetmath reference|id=3992|title=Adjunction space}}

[[Category:Topology]]

[[pl:Suma spójna]]
[[zh:????]]</text>
</page>
<page>
<id>1034</id>
<title>Adjustment handles</title>
<text>{{Unreferenced|date=August 2008}}

<!-- Deleted image removed: [[Image:Button handles.png|thumb|right|The 8 white boxes are adjustment handles.]] -->'''Adjustment handles''' are the small boxes appearing on the corners and edges of a "selected control" that let you change the size and shape of the control. 

By [[dragging and dropping]] the control handle on an edge, you can make the control wider or narrower, taller or shorter. Corner handles let you move two edges at once.

[[Category:User interface techniques]]

{{comp-sci-stub}}

[[de:Anfasser]]</text>
</page>
<page>
<id>1036</id>
<title>Adminer</title>
<text>{{notability|Products|date=September 2009}}
{{refimprove|date=September 2009}}
{{Infobox Software
| name                   = Adminer
| logo                   = 
| screenshot             = [[Image:Adminer01.png|250px|Adminer screenshot]]
| caption                = Adminer main screen
| collapsible            = 
| developer              = Jakub Vrána
| released               = {{initial release|2007|07|25}}
| frequently updated     = yes<!-- Release version update? Don't edit this page, just click on the version number! -->
| programming language   = [[PHP]]
| operating system       = [[Cross-platform]]
| language               = [[#Current status|Multilingual]] (11)
| genre                  = Web Database Management
| license                = [[Apache license]]
| website                = [http://www.adminer.org/ www.adminer.org]
| latest preview version = 3.0.0
| latest preview date    = {{start date and age|2010|10|15}}
}}

'''Adminer''' is a tool for managing content in [[MySQL]] databases. Adminer is distributed under [[Apache license]] in a form of a single [[PHP]] file (currently approx. 160 KiB in size). Its author is Jakub Vrána who (during 2007) decided to develop such tool as an "light-weight" alternative to [[phpMyAdmin]]. Currently (August 2009), the tool is in version 2.0 and so far it exceeded phpMyAdmin in some of the features it offers. Also, first webhosting providers <!--flyweb.cz, webhosting-c4.cz, gtny.org...--> started to include Adminer as MySQL managing tool into their portfolio of services.

==Features==
* Users log in specifying the destination server and providing the user name and password (which is stored during whole session)
* Basic functions: select [[database]], select/edit tables, browse/insert/edit table rows
* Searching or sorting via multiple columns
* Editing of other database objects: [[view (database)|views]], [[trigger (database)|triggers]], [[event (computing)|event]]s, [[stored procedure]]s, processes, mysql variables, [[user permission]]s
* Text area for arbitrary SQL commands and storing these commands in command history
* Export of databases and tables (its structures and/or data) as a dump to output or a downloadable attachment
* [[User-friendly]] interface (extensive employment of [[JavaScript]])
* Multiple language support (English, German, Spanish, Dutch, French, Italian, Estonian, Chinese, Czech, Slovak, Russian)
* [[SQL]] [[syntax highlighting]]
* Visual database/[[E-R]] schema editing
* [[XHTML]] 1.1 validity in [[UTF-8]]
* Countermeasures against [[XSS]], [[CSRF]], [[SQL injection]], [[session stealing]], …
* "Light-weight" - released in a form of a single file, approx. 160 KiB in size, with support of [[CSS]] skins

The small single file is a result of compilation and minification of source codes. <ref>{{Citation
| last = Vrána
| first = Jakub
| title = Architecture of Adminer
| journal = php&#x7C;architect
| volume = 8
| issue = 8
| pages = 34–40
| date = August 2009
| year = 2009
}}</ref>

==See also==
* [[phpMyAdmin]]
* [[MySQL]]
* [[PHP]]

==References==
{{reflist}}

==External links==
*[http://www.adminer.org Project homepage]
*[http://www.linux.com/archive/feature/145334 Review at Linux.com]

[[Category:MySQL]]
[[Category:Database administration tools]]
[[Category:PHP programming language]]
[[Category:Cross-platform software]]

[[cs:Adminer]]
[[fr:Adminer]]
[[ru:Adminer]]</text>
</page>
<page>
<id>1043</id>
<title>Admissible heuristic</title>
<text>In [[computer science]], a [[heuristic function]] is said to be '''admissible''' if it is no more than the lowest-cost path to the goal. In other words, a heuristic is admissible if it never overestimates the cost of reaching the goal.<ref>{{cite book
 | author = Russell, S.J.
 | coauthors = Norvig, P.
 | year = 2002
 | title = [[Artificial Intelligence: A Modern Approach]]
 | publisher = Prentice Hall
 | isbn = 0137903952
}}</ref> An admissible heuristic is also known as an '''optimistic heuristic'''.

==Search Algorithm==
An admissible heuristic is used to estimate the cost of reaching the goal state in an [[informed search algorithm]]. In order for a heuristic to be admissible to the search problem, the estimated cost must always be lower than or equal to the actual cost of reaching the goal state. The search algorithm uses the admissible heuristic to find an estimated optimal path to the goal state from the current node. 
For example, in [[A* search]] the evaluation function (where <math>n</math> is the current node) is:

<math>f(n)</math> = <math>g(n)</math> + <math>h(n)</math>

where
:<math>f(n)</math> = the evaluation function.
:<math>g(n)</math> = the cost from the start node to the current node
:<math>h(n)</math> = estimated cost from current node to goal.

<math>h(n)</math> is calculated using the heuristic function. With a non-admissible heuristic, the A* algorithm would overlook the optimal solution to a search problem due to an overestimation in <math>f(n)</math>.

==Formulation==

: <math>n</math> is a node
: <math>h</math> is a heuristic
: <math>h(n)</math> is cost indicated by <math>h</math> to reach a goal from <math>n</math>
: <math>C(n)</math> is the actual cost to reach a goal from n

: <math>h</math> is admissible if

:: <math>\forall n, h(n) \leq C(n)</math>

==Construction==
An admissible heuristic can be derived from a relaxed
version of the problem, or by information from pattern databases that store exact solutions to subproblems of the problem, or by using [[Inductive transfer|inductive learning]] methods.

==Notes==
While all [[consistent heuristic]]s are admissible, not all admissible heuristics are consistent.

For tree search problems, if an admissible heuristic is used, the [[A* search algorithm]] will never return a suboptimal goal node.

==References==
{{reflist}}

==See also==
* [[Heuristic function]]
* [[Search Algorithm]]

[[Category:Heuristics]]
[[Category:Artificial intelligence]]


{{comp-sci-stub}}</text>
</page>
<page>
<id>1046</id>
<title>Admon</title>
<text>{{Orphan|date=January 2009}}
{{Unreferenced|date=March 2009}}
{{ infobox software
| name                   = Admon
| screenshot             = [[Image:Zabbix.png|200px]]
| caption                = Admon Original version Web interface
| developer              = Admon
| latest_release_version = 2.0
| latest_release_date    = Sep 2008
| operating_system       = [[Linux]]
| genre                  = [[Network monitoring]]
| license                = [[GNU General Public License]]
| website                = http://admon.org/
}}

__NOTOC__ <!-- this hides the "Table of Contents", remove this as soon as there is a lot of content or many paragraphs with headings -->

'''Admon''' is a [[Zabbix]]-based [[open-source]] [[computer system]] and [[network monitoring]] [[application software]]. It watches [[node (networking)|host]]s and services specified by users, alerting them via e-mail or short-message service when issues arise.

Created under [[Zabbix]] v1.1.1 beta, Admon was modified to run under [[Linux]] only, but it also runs on other [[Unix]] variants. Admon is [[free software]] licensed under a [[GNU General Public License]], version 2, as published by the [[Free Software Foundation]].

Compared to Zabbix, most of the original functions have been shrunk, including supports for windows, multiple databases, [[simple network management protocol]], and auto-discovery; and only some core functions are reserved. Its alerting subsystem has been rewritten for easier use in large-scale networks. Admon is a smart version of Zabbix, and more reliable. {{Fact|date=January 2009}}  It is maintained by [http://admon.org/ Admon.org].

== See also==
* [[Comparison of network monitoring systems]]

== External links ==
* [http://admon.org/ Admon Home]
* [http://www.zabbix.com www.zabbix.com]

[[Category:Network management]]
[[Category:Network-related software]]
[[Category:Open source network management software]]
[[Category:Multi-agent systems]]


{{free-software-stub}}</text>
</page>
<page>
<id>1055</id>
<title>Adobe Director</title>
<text>{{No footnotes|date=April 2009}}
{{Infobox Software
| name                   = Adobe Director
| logo                   = [[Image:Adobe Director Icon.png|center|Adobe Director Icon]]
| screenshot             = [[Image:Adobe Director Screenshot.png|220px|center|Adobe Director Screenshot]]
| caption                = Director 11.5 running on [[Windows 7]].
| developer              = [[Adobe Systems]], formerly [[Macromedia]]
| latest release version = 11.5
| latest release date    = {{release date|2009|03|23}}
| operating system       = [[Mac OS X]] and [[Microsoft Windows]]
| genre                  = Multimedia Content Creator
| license                = [[Proprietary software|Proprietary]]
| website                = [http://www.adobe.com/products/director/ Adobe Director Homepage]
}}
'''Adobe Director''' (formerly '''''Macromedia Director''''') is a multimedia application authoring platform created by [[Macromedia]]&mdash;now part of [[Adobe Systems]]. It allows users to build applications built on a movie [[interface metaphor|metaphor]], with the user as the "director" of the movie. Originally designed for creating animation sequences, the addition of a powerful scripting language called [[Lingo (programming language)|Lingo]] made it a popular choice for creating CD-ROMs and standalone kiosks and web content using Adobe [[Adobe Shockwave|Shockwave]]. Adobe Director supports both 2D and 3D multimedia projects.

== Comparing Director to Flash ==
The differences between these two products has been the subject of much discussion, especially in the Director development community. Extensibility is one of the main differences between the two, as are some of the sundry codecs that can be imported.  Director has tended to be the larger of the two, but that footprint has been part of its weakness. This weakness manifest into the erosion of Director's ubiquity as the leader of authoring tools, especially in the critical window of 1998 - 2000.  The download footprint of the Director Shockwave plugin was significantly larger than the Shockwave Flash download footprint.  Additionally, Macromedia partnered with distributors such as Dell, Apple, etc. to have the Flash plugin pre-installed on machines for users, so that they would not be prompted to install any additional software.  At that point in time (1998–2000), broadband internet access was not the norm for most users, and the fivefold difference in size was catastrophic.

==History==
Director started out as [[MacroMind]] "VideoWorks", an application for the original [[Apple Macintosh]]. Animations were initially limited to the black and white of early Macintosh screens.

The name was changed to "Director" in 1987, with the addition of new capabilities and the Lingo scripting language in 1988. A [[Microsoft Windows|Windows]] version was available in the early 1990s.

From 1995 to 1997 a competing multimedia authoring program appeared called mTropolis (from mFactory). In 1997 mTropolis was purchased and buried by Quark, who had its own plans into multimedia authoring with Quark Immedia.

===Product Timeline===
*'''[[1985]]''': VideoWorks
*'''[[1988]]''': Named Director 1.0
*'''[[1993]]''': Macromind Director became Macromedia Director (v 3.1.3)
*'''[[1994]]''': Macromedia Director 4 was released (Windows and Powermac support) 
*'''[[1996]]''': Macromedia Director 5 was released (Shockwave)
*'''[[1997]]''': Macromedia Director 6 was released (Behavior support)
*'''[[1997]]''': Macromedia Director 6.5 was also released later that year
*'''November 16, 1998''': Macromedia Director 7 was released
*'''[[2000]]''': Macromedia Director 8 was released
*'''[[2001]]''': Macromedia Director 8.5 was released (Shockwave3D)
*'''[[2002]]''': Macromedia Director MX was released (Also known as Director 9)
*'''January 5, 2004''': Macromedia Director MX 2004 was released (Also known as Director 10)
*'''March 25, 2008''': Adobe Director 11 was released
*'''March 23, 2009''': Adobe Director 11.5 was released
*'''September 6, 2010''': Adobe Director 11.5.8 was released

==Adobe Director 11.x==
The first Director release under the Adobe brand (v. 11) featured [[DirectX]] 9 and [[Unicode]] support and extended 3D capabilities based on the [[NVIDIA]] [[PhysX]] engine, as well as bitmap filters, enhanced video, audio and image file formats support, and [[Adobe Flash]] CS3 integration. [[Shockwave Player]] 11 was also released.

Version 11.5 added 5.1 channel surround sound audio capabilities, real-time mixing, audio effects and DSP filters. Also, there is added support for H.264-video integration for full-screen and high-definition playback. Other supported formats include: 3D importer for [[Google SketchUp]], streaming support using RTMP and ByteArray datatypes.

==External links==
* [http://www.adobe.com/products/director/ Official site of Adobe Director]
* [http://director-online.com/ Director Online]
* [http://www.directorforum.com Adobe Director User Group]
* [http://www.deansdirectortutorials.com/ Dean's Director Tutorials]
* [http://veerle.duoh.com/blog/comments/macromedias_history/ Macromedia History]
* [http://www.ieee.org/web/aboutus/history_center/biography/thompsonj.html  IEEE History Center: John Thompson, inventor of Lingo Programming Language]
* [http://www.deansdirectortutorials.com/survey/DirectorRoadmap/ Director Next Roadmap Survey]

==References==
{{reflist|2}}

{{Adobe Systems}}

[[Category:Adobe software|Director]]
[[Category:Macromedia software|Director]]
[[Category:Mac OS software]]
[[Category:Mac OS X software]]
[[Category:Multimedia software]]
[[Category:Windows software]]
[[Category:Authoring system]]

[[ar:????? ??????]]
[[de:Adobe Director]]
[[es:Adobe Director]]
[[fr:Adobe Director]]
[[id:Macromedia Director]]
[[it:Macromedia Director]]
[[ja:Adobe Director]]
[[pt:Adobe Director]]
[[sv:Macromedia Director]]
[[tr:Adobe Director]]
[[zh:Adobe Director]]</text>
</page>
<page>
<id>1059</id>
<title>Adobe Flash</title>
<text>'''Adobe Flash''' (formerly '''Macromedia Flash''') is a [[multimedia]] [[Platform (computing)|platform]] used to add [[animation]], video, and [[interactivity]] to web pages. Flash is frequently used for advertisements and games. More recently, it has been positioned as a tool for "[[Rich Internet Application]]s" ("RIAs").

Flash manipulates [[vector graphics|vector]] and [[raster graphics]] to provide animation of text, drawings, and still images. It supports bidirectional [[Streaming media|streaming]] of audio and video, and it can capture user input via mouse, keyboard, microphone, and camera. Flash contains an [[Object-oriented language]] called [[ActionScript]].

Flash content may be displayed on various computer systems and [[information appliance|devices]], using [[Adobe Flash Player]], which is available free of charge for common [[web browser]]s, some [[mobile phone]]s and a few other [[electronic device]]s (using [[Flash Lite]]).

Some users feel that Flash enriches their web experience, while others find the extensive use of Flash animation, particularly in advertising, intrusive and annoying, giving rise to a cottage industry that specializes in blocking Flash content.<ref>{{cite web|url=http://tnerd.com/2010/02/18/how-to-block-flash-on-chrome-firefox-opera-internet-explorer-8/ |title=How to Block Flash |accessdate=2011-01-04 }}</ref> Flash has also been criticized for adversely affecting the usability of web pages.<ref>{{cite web|url=http://www.useit.com/alertbox/20001029.html|title=Flash: 99% Bad |accessdate=2011-01-08 }}</ref>

==History==
Originally developed by [[Macromedia]], Flash was introduced in 1996, and is currently developed and distributed by [[Adobe Systems]]. The precursor to the Flash application was SmartSketch, a drawing application for pen computers running the [[PenPoint OS]] developed by [[Jonathan Gay]], who began working on it in college and extended the idea for [[Silicon Beach Software]] and its successors.<ref>{{cite web|url=http://www.flashmagazine.com/413.htm |title=The Flash History |accessdate=2001-06-18 |last=Waldron |first=Rick |authorlink= |coauthors= |date=2006-08-27 |work= |publisher=Flashmagazine |pages= |archiveurl= |archivedate= |quote= }}</ref><ref>{{cite web
 | last = Gay | first = Jonathan | authorlink = Jonathan Gay | title = The History of Flash
 | publisher = Adobe Systems Inc. | year = 2001
 | url = http://www.adobe.com/macromedia/events/john_gay/page02.html
 | accessdate = 2009-10-18}}</ref> When PenPoint failed in the marketplace, SmartSketch was ported to Microsoft Windows and Mac OS. With the [[Internet]] becoming more popular, SmartSketch was re-released as FutureSplash, a [[Vector graphics|vector]]-based [[web animation]] in competition with Macromedia [[Adobe Shockwave|Shockwave]]. In 1995, SmartSketch was further modified with frame-by-frame animation features and re-released as [[FutureSplash Animator]] on multiple platforms.<ref>{{cite web| url=http://coldhardflash.com/2008/02/grandmasters-of-flash-an-interview-with-the-creators-of-flash.html | title=Grandmasters of Flash: An Interview with the Creators of Flash | accessdate=2008-02-12 | publisher=ColdHardFlash.com}}</ref> The product was offered to Adobe and used by [[Microsoft]] in its early work with the Internet ([[MSN]]). In 1996, FutureSplash was acquired by Macromedia and released as '''Flash,''' contracting "Future" and "Splash".

===Recent developments===
<!-- Notice to editors: if possible, try to get third party references which are not simple copies of Adobe press releases. The section is also prone to original research and crystal balling which quickly becomes out of date -->

'''Adobe Labs''' (previously called ''Macromedia Labs'') is a source for news and pre-release versions of emerging products and technologies from Adobe. Most innovations, such as Flash 10, [[Macromedia Flex|Flex]] 3, and ActionScript 3.0 have all been discussed and/or trialled on the site.

One area Adobe is focusing on (as of February 2009) is the deployment of [[Rich Internet Applications]] (RIAs). To this end, they released [[Adobe Integrated Runtime]] (AIR), a [[cross-platform]] [[runtime environment]] which can be used to build, using Adobe Flash, rich Internet applications that can be deployed as [[application software|desktop applications]]. It surpassed 100 million installations worldwide in February 2009.<ref>{{cite web| url =http://blogs.adobe.com/air/2009/01/air_passes_100_million_install.html?sdid=EENCL | title = AIR passes 100 million installations | accessdate = 2009-02-03}}</ref> Flash is installed silently when Acrobat Reader is installed.<ref>{{cite web| url=http://kb2.adobe.com/cps/520/cpsid_52001.html | title = Adobe Download Manager FAQ &#124; Flash Player and Reader | accessdate = 2011-01-19}}</ref>{{verification failed|date=January 2011}}

Two additional components designed for large-scale implementation have been proposed by Adobe for future releases of Flash: first, the option to require an ad to be played in full before the main video piece is played; and second, the integration of [[digital rights management]] (DRM) capabilities. This way Adobe can give companies the option to link an advertisement with content and make sure that both are played and remain unchanged.<ref name="BBCVideoControl">{{cite news|url=http://news.bbc.co.uk/1/hi/business/6558979.stm |title=Adobe unveils Flash video control |accessdate=2007-06-18 |author= |authorlink= |coauthors= |date=2007-04-16 |work=[[BBC News]] |publisher=BBC |pages= |archiveurl= |archivedate= |quote= }}</ref>

Flash Player for smart phones is available to handset manufacturers at the end of 2009.<ref name="palmpr">{{cite web|url=http://www.adobe.com/aboutadobe/pressroom/pressreleases/200902/021609AdobePalmOSP.html|title=Palm Latest Mobile Industry Leader to Join Open Screen Project|accessdate=2009-02-20|date=2009-02-16}}</ref>

====Open Screen Project====
On May 1, 2008 Adobe announced ''Open Screen Project'', which hopes to provide a consistent application interface across devices such as [[personal computer]]s, [[mobile device]]s and [[consumer electronics]].<ref name="osppr">{{cite web|title=Adobe and Industry Leaders Establish Open Screen Project|url=http://www.adobe.com/aboutadobe/pressroom/pressreleases/200805/050108AdobeOSP.html|accessdate=2009-02-20|date=2008-05-01}}</ref> When the project was announced, several goals were outlined: the abolition of licensing fees for Adobe Flash Player and [[Adobe Integrated Runtime]], the removal of restrictions on the use of the [[Adobe Shockwave|Shockwave]] Flash (SWF) and Flash Video (FLV) [[file format]], the publishing of [[Application Programming Interface|application programming interfaces]] for porting Flash to new devices and the publishing of The Flash Cast protocol and Action Message Format (AMF), which let Flash applications receive information from remote databases.<ref name="osppr"/>

As of February 2009, the specifications removing the restrictions on the use of SWF and FLV/F4V specs have been published.<ref name="interview">{{cite web|url=http://www.uiresourcecenter.com/rich-internet-applications/articles/inside-the-open-screen-project.html?s=2_1 |title=Inside the Open Screen Project |first=Anup| last=Murarka|accessdate=2009-02-21}}</ref> The Flash Cast protocol—now known as the Mobile Content Delivery Protocol—and AMF protocols have also been made available,<ref name="interview"/> with AMF available as an open source implementation, [[BlazeDS]]. Work on the device porting layers is in the early stages. Adobe intends to remove the licensing fees for Flash Player and Adobe AIR for devices at their release for the Open Screen Project.

The list of mobile device providers who have joined the project includes [[Palm, Inc.|Palm]], Motorola and Nokia,<ref>{{cite web|url=http://www.openscreenproject.org/partners/current_partners.html| title=Open Screen Project partners|accessdate=2009-02-20}}</ref> who, together with Adobe, have announced a $10 million Open Screen Project fund.<ref>{{cite web|title=Adobe and Nokia Announce $10 Million Open Screen Project Fund|url =http://www.adobe.com/aboutadobe/pressroom/pressreleases/200902/021609AdobeNokia.html|date=2009-02-16|accessdate=2009-02-20}}</ref>

==Format==
{{main|SWF}}
Flash files are in the ''SWF'' format, traditionally called "'''S'''hock'''W'''ave '''F'''lash" movies, "Flash movies," or "Flash applications", usually have a .swf [[file extension]], and may be used in the form of a web page plug-in, strictly "played" in a [[standalone]] Flash Player, or incorporated into a self-executing Projector movie (with the .exe extension in [[Microsoft Windows]]). [[Flash Video]] files<ref group="spec">FLV and F4V [http://www.adobe.com/devnet/flv/pdf/video_file_format_spec_v9.pdf Video File Format Specification Version 9]<br />F4V is based on [[ISO base media file format]] standard:[http://standards.iso.org/ittf/PubliclyAvailableStandards/c051533_ISO_IEC_14496-12_2008.zip freely available ISO standards] , and also available via subscription [http://www.iso.org/iso/catalogue_detail?csnumber=41828]</ref> have a .flv file extension and are either used from within .[[swf]] files or played through a flv-aware player, such as [[VLC media player|VLC]], or [[QuickTime]] and [[Windows Media Player]] with external [[codec]]s added.

The use of vector graphics combined with program code allows Flash files to be smaller — and thus for streams to use less [[Bandwidth (computing)|bandwidth]] — than the corresponding bitmaps or video clips. For content in a single format (such as just text, video, or audio), other alternatives may provide better performance and consume less [[central processing unit|CPU]] power than the corresponding Flash movie, for example when using transparency or making large screen updates such as photographic or text fades.

In addition to a vector-rendering engine, the Flash Player includes a virtual machine called the ActionScript Virtual Machine (AVM) for scripting interactivity at run-time, support for video, MP3-based audio, and bitmap graphics. As of Flash Player 8, it offers two video codecs: [[On2 Technologies]] [[VP6]] and [[sorenson codec|Sorenson Spark]], and run-time support for [[JPEG]], Progressive JPEG, [[Portable Network Graphics|PNG]], and [[Graphics Interchange Format|GIF]]. In the next version, Flash is slated to use a [[Just-in-time compilation|just-in-time]] compiler for the ActionScript engine.

Flash Player is a browser plugin, and cannot run within a usual e-mail client, such as [[Microsoft Outlook|Outlook]]. Instead, a link must open a browser window. A [[Gmail]] labs feature allows playback of YouTube videos linked in emails.

===Flash Video===
{{Main|Flash Video}}
Virtually all browser plugins for video are [[Gratis#Software|free of charge]] and cross-platform, including Adobe's offering of Flash Video, which was first introduced with Flash version 6. Flash Video has been a popular choice for websites due to the large [[#Installed user base|installed user base]] and programmability of Flash. In 2010, Apple [[#Criticism|publicly criticized]] Adobe Flash, including its implementation of video playback for not taking advantage of hardware acceleration, one reason Flash is not to be found on Apple's mobile devices. Soon after Apple's criticism, Adobe demoed and released a beta version of Flash 10.1, which takes advantage of GPU hardware acceleration even on a Mac. Flash 10.2 beta, released December 2010, finally adds multicore CPU hardware acceleration for h.264, three years after most other decoders.

===Flash Audio===
Flash Audio is most commonly encoded in [[MP3]] or AAC ([[Advanced Audio Coding]]) however it does also support [[ADPCM]], Nellymoser ([[Nellymoser Asao Codec]]) and [[Speex]] audio codecs. Flash allows sample rates of 11, 22 and 44.1 kHz. It does not support 48 kHz audio sample rate which is the standard TV, DVD sample rate.

On August 20, 2007, Adobe announced on its blog that with Update 3 of Flash Player 9, Flash Video will also support some parts of the [[MPEG-4]] international standards.<ref name=MP4>{{cite web
|url=http://www.kaourantin.net/2007/08/what-just-happened-to-video-on-web_20.html
|title=What just happened to video on the web
|publisher=Adobe
}}</ref> Specifically, Flash Player will have support for video compressed in [[H.264]] (MPEG-4 Part 10), audio compressed using [[Advanced Audio Coding|AAC]] (MPEG-4 Part 3), the F4V, [[MP4]] (MPEG-4 Part 14), M4V, M4A, [[3GP]] and [[MOV]] multimedia [[Container format (digital)|container formats]], [[3GPP]] [[Timed Text]] specification (MPEG-4 Part 17) which is a standardized subtitle format and partial parsing support for the 'ilst' atom which is the [[ID3]] equivalent [[iTunes]] uses to store [[metadata]]. [[MPEG-4 Part 2]] and [[H.263]] will not be supported in F4V file format. Adobe also announced that they will be gradually moving away from the FLV format to the standard ISO base media file format ([[MPEG-4 Part 12]]) owing to functional limits with the FLV structure when streaming H.264. The final release of the Flash Player supporting some parts of MPEG-4 standards had become available in Fall 2007.<ref>{{cite web|url=http://www.adobe.com/aboutadobe/pressroom/pressreleases/200708/082107FlashPlayer.html |title=Adobe Press release on MPEG-4 support in Flash Player 9 |publisher=Adobe.com |date= |accessdate=2010-12-04}}</ref>

Adobe Flash Player 10.1 does not support acoustic echo cancellation, unlike the VoIP offerings of Skype and Google Voice. This makes Flash less suitable for group calling or meetings, as use of headphones for all participants is essential, or at least highly advised.

===Scripting language===
{{See|ActionScript}}

===Proprietary restrictions===
{{See also|Proprietary software}}

The [[Proprietary software|proprietary]] nature of Flash has been a concern to advocates of [[open standard]]s and [[free software]]. Its widespread use has, according to such observers, harmed the otherwise open nature of the [[World Wide Web]].<ref>{{cite web
|url=http://news.zdnet.com/2424-3515_22-199508.html
|title=Mozilla warns of Flash and Silverlight 'agenda'
|last=Meyer|first=David
|publisher=[[ZDNet]]
|date=2008-04-30
|accessdate=2009-01-11
|quote= ''Companies building websites should beware of proprietary rich-media technologies like Adobe's Flash and Microsoft's Silverlight, the founder of Mozilla Europe has warned.''}}</ref> A response may be seen in [[#Open Screen Project|Adobe's Open Screen Project]]: Adobe's restrictions on the use of the SWF/FLV specifications have been lifted.

Representing open standards, inventor of [[Cascading Style Sheets|CSS]] and co-author of [[HTML5]], [[Håkon Wium Lie]] explained in a [[AtGoogleTalks|Google tech talk]] entitled "the <video> element" the proposal of [[Theora]] as the format for [[HTML5 video]]:<ref>{{cite web
|url=http://video.google.com/videoplay?docid=5545573096553082541&ei=LV6hSaz0JpbA2AKh4OyPDg&hl=un
|title=Håkon Wium Lie on the video element in HTML 5
|accessdate=2009-02-22
|publisher=Google Video
|date=2007-03-29}}</ref>
<blockquote>I believe very strongly, that we need to agree on some kind of baseline video format if [the video element] is going to succeed. Flash is today the baseline format on the web. The problem with Flash is that it's not an open standard.</blockquote>

===Disclosure===
In October 1998, Macromedia disclosed the Flash Version 3 Specification to the world on its website. It did this in response to many new and often semi-open formats competing with SWF, such as Xara's [[Xara Flare|Flare]] and Sharp's [[Extended Vector Animation]] formats. Several developers quickly created a [[C (programming language)|C]] [[C library|library]] for producing SWF. In February 1999, the company introduced [[MorphInk]] 99, the first third-party program to create SWF files. Macromedia also hired [[Middlesoft]] to create a freely available [[development kit|developers' kit]] for the SWF file format versions 3 to 5.

Macromedia made the Flash Files specifications for versions 6 and later available only under a [[non-disclosure agreement]], but they are widely available from various sites.

In April 2006, the Flash SWF file format specification was released with details on the then newest version format (Flash 8). Although still lacking specific information on the incorporated video compression formats (On2, Sorenson Spark, etc.), this new documentation covered all the new features offered in Flash v8 including new ActionScript commands, expressive filter controls, and so on. The file format specification document is offered only to developers who agree to a license agreement that permits them to use the specifications only to develop programs that can export to the Flash file format. The license forbids the use of the specifications to create programs that can be used for playback of Flash files. The Flash 9 specification was made available under similar restrictions.<ref>{{cite web|url=http://www.adobe.com/licensing/developer/fileformat/faq/ |title=Adobe File Format Specification FAQ |accessdate=2007-11-15 |publisher=Adobe Systems |archiveurl = http://web.archive.org/web/20071111094129/http://www.adobe.com/licensing/developer/fileformat/faq/ <!-- Bot retrieved archive --> |archivedate = 2007-11-11}}</ref>

In June 2009, Adobe launched the [[Open Screen Project]] ([http://www.adobe.com/openscreenproject/faq/ Adobe link]), which made the SWF specification available without restrictions. Previously, developers could not use the specification for making SWF-compatible players, but only for making SWF-exporting authoring software. The specification still omits information on codecs such as [[Sorenson codec|Sorenson Spark]], however.<ref>{{cite web| title = Free Flash community reacts to Adobe Open Screen Project | url = http://www.openmedianow.org/?q=node/21 | accessdate = 2008-11-29 }}</ref>

==Authoring tools==
===Adobe Flash Professional===
<!-- Note: Several articles link to this section. Before changing the section heading, please makes sure those links do not break.
 You may do so by adding an {{anchor|Adobe Flash Professional}} to the new name, or simply by refraining to change the name.
-->
{{Infobox software
| name = Adobe Flash Professional
| logo = [[Image:Adobe Flash Pro CS5 icon.png|64px|Adobe Flash CS5 Icon]]
| caption = Adobe Flash CS5 Professional (11.0.2.489)
| screenshot = [[Image:Adobe Flash CS5.jpg|300px|Adobe Flash CS5 Professional under [[Windows 7]]|Adobe Flash CS5 Professional]]
| developer = [[Adobe Systems]] (formerly by [[Macromedia]])
| frequently updated = Yes
| programming language = [[C++]]
| operating system = [[Microsoft Windows]] and [[Mac OS X]]|
| genre = [[Multimedia]]
| license = [[Proprietary software|Proprietary]] [[commercial software]]
| website = {{URL|http://www.adobe.com/products/flash/flashpro/}}
}}
The Adobe Flash Professional multimedia authoring program is used to create content for the [[Adobe Engagement Platform]], such as web applications, games and movies, and content for mobile phones and other embedded devices.

====History====
Adobe Flash Professional is the successor of a software product known as '''FutureSplash Animator''', a [[vector graphics]] and vector animations program released in May 1996. FutureSplash Animator was developed by [[FutureWave Software]], a small software company whose first product, SmartSketch, was a vector-based drawing program for pen-based computers. In 1995, the company decided to add animation capabilities to their product and to create a vector-based animation platform for [[World Wide Web]]; hence FutureSplash Animator was created. Initially, the only way to deploy such animations on the web was through the use of [[Java platform]]; however, the Java platform was later replaced with the [[Netscape]]'s [[plug-in (computing)|plug-in]] architecture. The FutureSplash animation technology was used on several notable websites such as [[MSN]], the official ''[[The Simpsons]]'' website and ''Disney Daily Blast'' of [[The Walt Disney Company]].<ref name="SA-history-official">[http://www.adobe.com/macromedia/events/john_gay/ The History of Flash] by [[Jonathan Gay]]</ref>

In December 1996, [[Macromedia]] bought FutureWave and so re-branded and released FutureSplash Animator as ''Macromedia Flash'' v1.0. In 2005, Adobe Systems acquired Macromedia; subsequently, in 2007, ''Adobe Flash CS3 Professional'', the next version of Macromedia Flash was released.

{| class="wikitable"
|-
! style="width:150px;"| Release
! Year
! Description
|-
| '''FutureSplash Animator'''
| 1996
| Initial version of Flash with basic editing tools and a timeline
|-
| '''Macromedia Flash 1'''
| 1996
| A re-branded version of the FutureSplash Animator
|-
|'''Macromedia Flash 2'''
| 1997
|Released with Flash Player 2, new features included: the object [[Library (computer science)|library]]
|-
|'''Macromedia Flash 3'''
|1998
|Released with Flash Player 3, new features included: the movieclip element, [[JavaScript]] plug-in integration, [[transparency (graphic)|transparency]] and an external stand alone player
|-
|'''Macromedia Flash 4'''
|1999
|Released with Flash Player 4, new features included: internal [[Variable (programming)|variables]], an input field, advanced ActionScript, and [[Streaming media|streaming]] MP3
|-
|'''Macromedia Flash 5'''
|2000
|Released with Flash Player 5, new features included: ActionScript 1.0 (based on ECMAScript, making it very similar to JavaScript in syntax), [[XML]] support, Smartclips (the precursor to components in Flash), [[HTML]] text formatting added for dynamic text
|-
|'''Macromedia Flash MX(6)'''
|2002
|Released with Flash Player 6, new features included: a video [[codec]] (Sorenson Spark), [[Unicode]], v1 [[Widget engine|UI Components]], [[Data compression|compression]], ActionScript vector drawing API
|-
|'''Macromedia Flash MX 2004(7)'''
|2003
|Released with Flash Player 7, new features included: Actionscript 2.0 (which enabled an [[object-oriented programming]] model for Flash, although it lacked the Script assist function of other versions, meaning Actionscript could only be typed out manually), behaviors, extensibility layer (JSAPI), alias text support, timeline effects. Macromedia Flash MX Professional 2004 included all Flash MX 2004 features, plus: Screens (forms for non-linear state-based development and slides for organizing content in a linear slide format like [[Microsoft PowerPoint|PowerPoint]]), [[web service]]s integration, video import wizard, Media Playback components (which encapsulate a complete MP3 and/or FLV player in a component that may be placed in an SWF), Data components (DataSet, XMLConnector, WebServicesConnector, XUpdateResolver, etc.) and data binding APIs, the Project Panel, v2 UI components, and Transition class libraries.
|-
|'''Macromedia Flash 8'''
|2005
| Macromedia Flash Basic 8, a less [[feature-rich]] version of the Flash authoring tool {{Citation needed|reason=less than what? needs relative identification.|date=December 2010}} targeted at new users who only want to do basic drawing, animation and interactivity. Released with Flash Player 8, this version of the product has limited support for video and advanced graphical and animation effects. Macromedia Flash Professional 8 added features focused on expressiveness, quality, video, and mobile authoring. New features included Filters and blend modes, easing control for animation, enhanced stroke properties (caps and joins), object-based drawing mode, run-time bitmap caching, [[Saffron Type System|FlashType advanced anti-aliasing]] for text, [[On2 Technologies|On2]] VP6 advanced video codec, support for alpha transparency in video, a stand-alone encoder and advanced video importer, cue point support in FLV files, an advanced video playback component, and an interactive mobile device emulator.
|-
|'''Adobe Flash CS3(9) Professional'''
|2007
|Flash CS3 is the first version of Flash released under the Adobe name. CS3 features full support for ActionScript 3.0, allows entire applications to be converted into ActionScript, adds better integration with other Adobe products such as [[Adobe Photoshop]], and also provides better Vector drawing behavior, becoming more like [[Adobe Illustrator]] and [[Adobe Fireworks]].
|-
|'''Adobe Flash CS4(10) Professional'''
|2008
|Contains [[inverse kinematics]] (bones), basic [[Three-dimensional space|3D]] object manipulation, object-based animation, a text engine, and further expansions to ActionScript 3.0. CS4 allows the developer to create animations with many features absent in previous versions.
|-
|'''Adobe Flash Professional CS5(10.1)'''
|2010
|Flash CS5 was released on April 12, 2010 and launched for trialling and normal buying on April 30, 2010. Flash CS5 Professional includes support for publishing [[iPhone]] applications.<ref>{{cite web| url=http://labs.adobe.com/technologies/flashcs5/appsfor_iphone/ | title=Adobe Labs - Adobe Flash Professional CS5: Applications for iPhone | accessdate=2010-03-02 | publisher=Adobe}}</ref> However, on April 8, 2010 Apple changed the terms of its Developer License to effectively ban the use of the Flash-to-iPhone compiler<ref>{{cite web| url=http://daringfireball.net/2010/04/iphone_agreement_bans_flash_compiler | title=New iPhone Developer Agreement Bans the Use of Adobe’s Flash-to-iPhone Compiler | accessdate=2010-04-22 | publisher=Daring Fireball}}</ref> and on April 20, 2010 Adobe announced that they will be making no additional investments in targeting the iPhone and iPad in Flash CS5.<ref>{{cite web| url=http://www.mikechambers.com/blog/2010/04/20/on-adobe-flash-cs5-and-iphone-applications/ | title=On Adobe, Flash CS5 and iPhone Applications | accessdate=2010-04-22 | publisher=Mike Chambers}}</ref>
Other features of Flash CS5 are a new text engine (TLF), further improvement to [[inverse kinematics]], and the Code Snippets panel.
<ref>Apple Inc. modified terms & conditions for developers in the app store. Adobe is developing again for iPhone and iPad CS5</ref>
|}

===Third-party tools===
[[Open Source]] projects like [[Ajax framework|Ajax Animator]] and the (now defunct) [[UIRA]] aim to create a Flash development environment, complete with a graphical user environment. Alternatively, programs such as [[swfmill]], [[SWFTools]], and [[MTASC]] provide tools to create SWF files, but do so by compiling text, actionscript or XML files into [[Flash animation]]s. It is also possible to create SWF files programmatically using the [[Ming library]], which has interfaces for [[C (Programming Language)|C]], [[PHP]], [[C++]], [[Perl]], [[Python (programming language)|Python]], and [[Ruby (programming language)|Ruby]]. [[haXe]] is an open source, high-level object-oriented programming language geared towards web-content creation that can compile Flash files.

Many [[shareware]] developers produced Flash creation tools and sold them for under US$50 between 2000 and 2002. In 2003 competition and the emergence of free Flash creation tools had driven many third-party Flash-creation tool-makers out of the market, allowing the remaining developers to raise their prices, although many of the products still cost less than US$100 and support ActionScript. As for open source tools, [[KToon]] can edit vectors and generate SWF, but its interface is very different from Macromedia's. Another, more recent example of a Flash creation tool is [[SWiSH Max]] made by an ex-employee of Macromedia. [[ToonBoom|Toon Boom]] Technologies also sells a traditional animation tool, based on Flash.

In addition, several programs create [[.swf]]-compliant files as output from their programs. Among the most famous of these are [[Screencast]] tools, which leverage the ability to do lossless compression and playback of captured screen content in order to produce demos, tutorials, or software simulations of programs. These programs are typically designed for use by non-programmers, and create Flash content quickly and easily, but cannot actually edit the underlying Flash code (i.e. the tweening and transforms, etc.) [[Screencam]] is perhaps the oldest screencasting authoring tool to adopt Flash as the preferred output format, having been developed since the mid-90s. The fact that screencasting programs have adopted Flash as the preferred output is testament to Flash's presence as a ubiquitous cross-platform animation file format.

Other tools are focused on creating specific types of Flash content. [[Anime Studio]] is a 2D animation software package specialized for character animation which creates SWF files. [[Express Animator]] is similarly aimed specifically at animators. [[Question Writer]] publishes its quizzes to Flash file format.

Users who are not programmers or web designers will also find on-line tools that allow them to build full Flash-based websites. One of the oldest services available (1998) is [http://www.flashtogo.com/ FlashToGo]. Such companies provide a wide variety of pre-built models (templates) associated to a Content Management System that empowers users to easily build, edit and publish their websites. Other sites, that allows for greater customization and design flexibility are [[Wix.com]] and [[CirclePad]].

Adobe wrote a software package called [[Adobe LiveMotion]], designed to create interactive animation content and export it to a variety of formats, including SWF. LiveMotion went through two major releases, but failed to gain any notable user base.

In February 2003, Macromedia purchased Presedia, which had developed a Flash authoring tool that automatically converted PowerPoint files into Flash. Macromedia subsequently released the new product as Breeze, which included many new enhancements. In addition, (as of version 2) [[Apple Inc.|Apple]]'s [[Keynote (software)|Keynote]] presentation software also allows users to create interactive presentations and export to SWF.

{{anchor|Installed user base}}
==User experience==
Flash as a format has become widespread on the desktop market; one estimate is that 95% of PCs have it,<ref>{{cite web|url=http://statowl.com/plugin_overview.php |title=Web Browser Plugin Market Share |accessdate=2009-08-18 |publisher=StatOwl}}</ref> while Adobe claims that 98 percent of U.S. web users and 99.3 percent of all Internet desktop users have installed the Flash Player,<ref>98%: [[NPD Group|NPD]] [http://www.macromedia.com/software/player_census/npd/ study]</ref><ref name="Flash Player Statistics">99.3%: Millward Brown survey, conducted June 2009. {{cite web|url=http://www.adobe.com/products/player_census/flashplayer/ |title=Flash Player Statistics |accessdate=2009-06-04 |author= |authorlink= |date= |year= |month= |work= |publisher=Adobe Systems |pages= |archiveurl= |archivedate= |quote= }}</ref><ref name="turfwar">{{cite journal
|last=Shankland
|first=Stephen
|title=HTML vs. Flash: Can a turf war be avoided?
|publisher=[[CNET News]]
|url=http://news.cnet.com/8301-30685_3-20000037-264.html
|date=February 3, 2010
|accessdate=December 26, 2010
}}</ref> with 92 to 95% (depending on region) having the latest version.<ref name="versionpenetration">{{cite web|url=http://www.adobe.com/products/player_census/flashplayer/version_penetration.html |title=Adobe Flash Player Version Penetration |accessdate=2009-06-04|author= |authorlink= |date= |year= |month= |work= |publisher=Adobe Systems |pages= |archiveurl= |archivedate= |quote= }}</ref> Numbers vary depending on the detection scheme and research demographics.

The Adobe Flash Player exists for a variety of systems and devices: Windows, [[Mac OS 9]]/[[Mac OS X|X]], [[Linux]], [[Solaris (operating system)|Solaris]], [[HP-UX]], [[Pocket PC]]/[[Windows CE]], [[OS/2]], [[QNX]], [[Android (operating system)|Android]], [[Symbian]], [[Palm OS]], [[BeOS]], and [[IRIX]], although the performance is typically best on Windows (see [[#Performance|Performance]]). For compatibility with devices (embedded systems), see [[Macromedia Flash Lite]].

[[File:Noflash.png|thumb|Some websites rely on Flash so heavily that they are totally unusable without this plugin]]

Among mobile devices, Flash has less penetration because Apple does not bundle or allow third-party runtimes on its iPhone, which accounts for more than 60% of global smartphone web traffic, or the iPod touch, which makes up more than 95% of "mobile Internet device" traffic. This hurts Adobe's ability to market Flash as a ubiquitous mobile platform. However, Flash is enabled on competing mobile platforms, including the version 2.2 [[Android (operating system)|Android]]<ref>{{cite web|author=Posted on Tuesday, Apr 27, 2010 by Phil Nickinson <!----> |url=http://www.androidcentral.com/andy-rubin-says-flash-coming-froyo-version-android-operating-system |title=Andy Rubin says Flash is coming in Froyo version of Android operating system |publisher=Androidcentral.com |date=2010-04-27 |accessdate=2010-12-04}}</ref> while other O.S.s such as Symbian and Palm have versions coming.{{citation needed|date=January 2011}}

Downloading Flash is blocked in countries that are under U.S [[economic sanction|sanctions]] (such as Syria & Sudan). Users in these countries are blocked (by Adobe) from downloading Flash plug-ins for both Internet Explorer and Firefox browsers.{{Citation needed|date=November 2010}}

Flash content is usually embedded using the <object> [[html tag]], or the nonstandard <embed> tag<ref>http://validator.w3.org/docs/help.html#faq-flash</ref>. Software that does not support either of these tags, and users who cannot or will not install a plugin, will see the replacement text if this is supplied by the web page.

===Accessibility===
Using Flash tends to break conventions associated with normal HTML pages. Selecting text, scrolling,<ref>{{cite web|url=http://www.useit.com/alertbox/20050711.html |title=Scrolling and Scrollbars (Jakob Nielsen's Alertbox) |publisher=Useit.com |date=2005-07-11 |accessdate=2010-12-04}}</ref> form control and right-clicking act differently than with a regular HTML webpage. Many such interface unexpectancies are fixable by the designer. Usability expert [[Jakob Nielsen (usability consultant)|Jakob Nielsen]] published an Alertbox in 2000 entitled, ''Flash: 99% Bad'' which listed issues like these.<ref>{{cite web|url=http://www.useit.com/alertbox/20001029.html|title=Flash: 99% Bad|last=Nielsen|first=Jakob|date=2000-10-29 |accessdate=2009-02-21}}</ref> Some problems have been improved upon since Nielsen's complaints:
* Text size can be controlled using full page zoom, found in many modern browsers.
* It has been possible for authors to include alternative text in Flash since Flash Player 6. This [[Accessibility#Telecommunications and IT access|accessibility]] feature is compatible only with certain [[screen readers]] and only under Windows.<ref>{{cite web|url=http://www.skillsforaccess.org.uk/howto.php?id=101 |title=Provide text equivalents for graphics - in Flash |accessdate=2007-06-18 |author= |authorlink= |coauthors= |date= |year= |month= |work=Skills for Access – How To |publisher= |pages= |archiveurl= |archivedate= |quote= }}</ref>

===Performance===
* Any Flash player has to be able to animate on top of video renderings, which makes [[Hardware acceleration|hardware accelerated]] video rendering at least not as straightforward as with a purpose built [[Media player (application software)|multimedia player]].<ref>[http://blogs.adobe.com/penguin.swf/2010/01/solving_different_problems.html Solving Different Problems « Penguin.SWF]. Blogs.adobe.com. Retrieved on 2010-11-09.</ref> Therefore, even when only displaying video, Flash players are more resource intensive than dedicated video player software.
* Comparisons have shown Adobe Flash Player to perform better on [[Windows]] than [[Mac OSX]] and [[Linux]] with the same hardware.<ref>{{cite web|url=http://arstechnica.com/software/news/2008/10/benchmarking-flash-player-10.ars|title=Flash benchmarks on different operating systems}}</ref><ref>{{cite web|last=Paul |first=Ryan |url=http://arstechnica.com/media/news/2009/10/hands-on-hulu-desktop-for-linux-beta-a-big-resource-hog.ars |title=Hands-on: Hulu Desktop for Linux beta a big resource hog |publisher=Arstechnica.com |date=2009-10-16 |accessdate=2010-12-04}}</ref>

===Flash blocking in web browsers===
Some web browsers default to not play Flash content before the user clicks on it, e.g. [[Konqueror]], [[K-Meleon]]. Equivalent "Flash blocker" extensions also exist for many popular browsers: Firefox has [[NoScript]] and [[Flashblock]], and Opera versions since 10.5 feature native Flash blocking. Opera Turbo requires the user to click to play Flash content. Internet Explorer has Foxie, which contains a number of features, one of them also named Flashblock. WebKit-based browsers under Mac OS X, such as Apple's Safari, have ClickToFlash.<ref>{{cite web|url=http://rentzsch.github.com/clicktoflash/|title=ClickToFlash|accessdate=2009-10-18}} {{Dead link|date=September 2010|bot=H3llBot}}</ref>

{{anchor|Security}}

==Flash client security==
Flash's security record<ref>{{cite web|url=http://www.adobe.com/support/security/#flashplayer|title=Security bulletins and advisories|accessdate=2010-03-27}}</ref> has caused several security experts to recommend to not install Flash or to block it.<ref>{{cite web|url=http://news.cnet.com/8301-27080_3-10396326-245.html|title=Expert says Adobe Flash policy is risky|date=2009-11-12|accessdate=2010-03-27}}</ref> The [[United States Computer Emergency Readiness Team|US-CERT]] recommends to block Flash using [[NoScript]].<ref>{{cite web|url=http://www.us-cert.gov/reading_room/securing_browser/|title=Securing Your Web Browser|accessdate=2010-03-27}}</ref> [[Charlie Miller (security researcher)|Charlie Miller]] recommended "not to install Flash"<ref>{{cite web|url=http://www.oneitsecurity.it/01/03/2010/interview-with-charlie-miller-pwn2own/|title=Pwn2Own 2010: interview with Charlie Miller|date=2010-03-01|accessdate=2010-03-27}}</ref> at the [[computer security conference]] [[CanSecWest]]. As of October 31, 2010, The Flash Player has over 100 [[Common Vulnerabilities and Exposures|CVE]] entries,<ref>{{cite web|url=http://www.securityfocus.com/cgi-bin/index.cgi?o=0&l=100&c=12&op=display_list&vendor=Adobe&title=Flash%20Player|title=SecurityFocus search results for Adobe Flash Player Vulnerabilities|accessdate=2010-10-31}}</ref> 65 of which have been ranked with a high severity (leading to [[arbitrary code execution]]), and 40 ranked medium. In February 2010, Adobe officially apologized<ref>{{cite web|url=http://blogs.adobe.com/emmy/archives/2010/02/flash_bug_repor.html|title=Flash Bug Report|date=2010-02-06|accessdate=2010-03-27}} {{Dead link|date=September 2010|bot=H3llBot}}</ref> for not fixing a known vulnerability for over 1 year. In June 2010 Adobe announced a "critical vulnerability" in recent versions, saying there are reports that this vulnerability is being actively exploited in the wild against both Adobe Flash Player, and Adobe Reader and Acrobat.<ref>{{cite web|url=http://www.adobe.com/support/security/advisories/apsa10-01.html|publisher=[[Adobe Systems]]|title=Security Advisory for Flash Player, Adobe Reader and Acrobat |accessdate=2010-06-08}}</ref><ref>{{Cite news|url=http://news.bbc.co.uk/1/hi/technology/10257411.stm|title=Adobe acknowledges critical security flaw in software|publisher=[[BBC News Online]]|date=June 7, 2010}}</ref> Later, in October 2010, Adobe announced<ref>{{cite web|url=http://www.adobe.com/support/security/advisories/apsa10-05.html|publisher=[[Adobe Systems]]|title=Security Advisory for Adobe Flash Player, Adobe Reader and Acrobat|accessdate=2010-10-31}}</ref> another critical vulnerability, this time also affecting [[Android (operating system)|Android]]-based mobile devices. Android users have been recommended to disable Flash or make it only on demand.<ref>{{cite web|url=http://www.mobilecrunch.com/2010/10/29/flash-vulnerability-revealed-for-android-fix-coming-november-9th/|publisher=[[MobileCrunch]]|title=Flash vulnerability revealed for Android, fix coming November 9th|accessdate=2010-10-31}}</ref>

[[Symantec]]'s Internet Security Threat Report<ref>{{cite web|url=http://www4.symantec.com/Vrt/wl?tu_id=SUKX1271711282503126202|title=Internet Security Threat Report: Volume XV: April 2010|publisher=Symantec|pages=37, 40, 42|date=April 2010|accessdate=2010-05-09}}</ref> states that a [[remote code execution]] in [[Adobe Reader]] and Flash Player<ref>{{cite web|url=http://www.securityfocus.com/bid/35759|title=Adobe Acrobat, Reader, and Flash Player Remote Code Execution Vulnerability|date=2009-10-15|accessdate=2010-05-09}}</ref> was the second most attacked vulnerability in 2009. The same report also recommends to employ browser add-ons wherever possible to disable Adobe Flash Player when visiting untrusted sites. [[McAfee]] predicts that Adobe software, especially Reader and Flash, will be the primary target for attacks in 2010.<ref>{{cite web|url=http://mcafee.com/us/local_content/reports/7985rpt_labs_threat-predict_0110_fnl_lores.pdf|title=2010 Threat Predictions|publisher= McAfee Labs|page=2|date=December 2009|accessdate=2010-05-09}}</ref> Adobe applications had already become the most popular client-software targets for attackers during the last quarter of 2009.<ref>{{cite web|url=http://mcafee.com/us/local_content/reports/threats_2009Q4_final.pdf|title=McAfee Threats Report: Fourth Quarter 2009|publisher=McAfee Avert Labs|page=16|date=February 2010|accessdate=2010-05-09}}</ref>

===Local Shared Objects (“Flash cookies”)===
{{Main|Local Shared Object}}
Like the [[HTTP cookie]], a [[flash cookie]] (also known as a “[[Local Shared Object]]”) can be used to save application data. Flash cookies are not shared across [[Domain name|domains]]. An August 2009 study by the [[Social Science Research Network]] found that 50% of websites using Flash were also employing flash cookies, yet privacy policies rarely disclosed them, and user controls for privacy preferences were lacking.<ref>{{cite web|url=http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1446862|title=Soltani, Ashkan, Canty, Shannon, Mayo, Quentin, Thomas, Lauren and Hoofnagle, Chris Jay: Flash Cookies and Privacy|date=2009-08-10 |accessdate=2009-08-18}}</ref> Most browsers' cache and history suppress or delete functions do not affect Flash Player's writing Local Shared Objects to its own cache, and the user community is much less aware of the existence and function of Flash cookies than HTTP cookies.<ref>{{cite web|url=http://epic.org/privacy/cookies/flash.html|title=Local Shared Objects -- "Flash Cookies"|publisher=Electronic Privacy Information Center|date=2005-07-21|accessdate=2010-03-08}}</ref> Thus, users having deleted HTTP cookies and purged browser history files and caches may believe that they have purged all tracking data from their computers when in fact Flash browsing history remains. Adobe's own Flash [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager07.html Website Storage Settings panel], a submenu of Adobe's Flash [http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager.html Settings Manager web application], and other [[Local Shared Object#Editors and toolkits|editors and toolkits]] can manage settings for and delete Flash Local Shared Objects.<ref>{{cite web|url=http://kb2.adobe.com/cps/526/52697ee8.html|title=How to manage and disable Local Shared Objects|publisher=Adobe Systems Inc.|date=2005-09-09|accessdate=2010-03-08}}</ref>

==64-bit support==

Adobe's 64-bit Flash player is available as a preview2 release ("Square"), which was released in September 2010. The "Square" preview is available for [[Microsoft Windows|Windows]], [[MacOS X|Mac]] and [[Linux]].<ref>[http://labs.adobe.com/downloads/flashplayer10.html Adobe Labs - Downloads: Flash Player "Square" Preview Release]. Labs.adobe.com (2010-09-27). Retrieved on 2010-11-09.</ref> This new version can be downloaded at the Adobe lab site.<ref name="AdobeSquare">">[http://labs.adobe.com/downloads/flashplayer10.html Flash Player support on 64-bit operating systems]</ref>

The key new capabilities in the Flash Player "Square" preview are:
* 64-bit support — Native support for 64-bit operating systems and 64-bit web browsers on Linux, Mac OS, and Windows. (Hulu and Amazon which depends on RTMPE are not currently functioning because there are some 64-bit libs that need to be integrated into the branch{{cite web|url=http://forums.adobe.com/thread/738761?tstart=0|title=Adobe Forums: Flash Player "Square": 64-bit}})
* Internet Explorer 9 hardware accelerated rendering support — Enhanced support for Internet Explorer 9 Beta. It takes advantage of hardware accelerated graphics in Internet Explorer 9 Beta, utilizing hardware rendering surfaces to improve graphics performance and enable seamless composition.

The first experimental release of 64-bit builds of Adobe Flash Player was for the Linux platform,<ref name="Linux 64">{{cite web|url=http://weblogs.macromedia.com/emmy/archives/2008/11
/swf_10_spec_available_and_flash_player_alpha_for_64-bit_linux_on_labs.html|title=SWF 10 spec available AND Flash Player alpha for 64-bit Linux on Labs|last=Huang|first=Emmy|publisher=Adobe Systems|date=2008-11-17}}</ref> on November 11, 2008.<ref>[http://blogs.adobe.com/penguin.swf/2008/11/ November « 2008 « Penguin.SWF]. Blogs.adobe.com (2008-11-17). Retrieved on 2010-11-09.</ref>

The project was closed temporarily on June 15, 2010,<ref>Paul, Ryan. (2010-06-15) [http://arstechnica.com/open-source/news/2010/06/64-bit-flash-for-linux-dropped-as-adobe-preps-next-version.ars 64-bit Flash for Linux dropped as Adobe preps next version]. Arstechnica.com. Retrieved on 2010-11-09.</ref> while Adobe was preparing for the preview release on September 15, 2010.

The official 32-bit player is still distributed in 64-bit Linux distributions e.g. [[Ubuntu (operating system)|Ubuntu]], [[openSUSE]], of which some users have reported problems with the 32-bit player on some websites.<ref>{{cite web|url=http://adammichaelroach.com/blog/110309-installing-adobe-flash-64-bit-ubuntu-910-karmic-koala |title=Installing Adobe Flash 64 bit in Ubuntu 9.10 Karmic Koala |publisher=Adammichaelroach.com |date= |accessdate=2010-12-04}}</ref><ref>[http://nocturn.vsbnet.be/content/flash-problems-64-bit-linux Flash problems on 64-bit Linux | Guy Van Sanden's Home]. Nocturn.vsbnet.be. Retrieved on 2010-11-09.</ref><ref>[http://www.mat-wright.com/2010/02/flash-player-10-for-64-bit-linux.html Flash Player 10 for 64 bit Linux | Web Developer]. Mat Wright (2010-02-27). Retrieved on 2010-11-09.</ref> Affected users can install the 64-bit player manually<ref>[http://nxadm.wordpress.com/2009/04/26/install-64-bit-adobe-flash-player-on-ubuntu-904/ Install 64-bit Adobe Flash Player on Ubuntu (updated to 10.04 and closing of 64-bit beta) « *n*x]. Nxadm.wordpress.com. Retrieved on 2010-11-09.</ref> or through a special repository.<ref>[https://launchpad.net/~sevenmachines/+archive/flash Ubuntu Flash PPA]</ref>

Adobe expects to provide [[64-bit]] versions of its Flash Player for Windows, Macintosh and Linux with an upcoming major release of Adobe Flash Player.<ref name="labs.adobe.com">[http://labs.adobe.com/technologies/flashplayer10/faq.html Adobe Labs - Flash Player 10 for 64-bit Linux Frequently Asked Questions]. Labs.adobe.com. Retrieved on 2010-11-09.</ref><ref name="adobeTechNote64">{{cite web|url=http://kb2.adobe.com/cps/000/6b3af6c9.html |title=Flash Player support on 64-bit operating systems |publisher=Kb2.adobe.com |date=2009-07-14 |accessdate=2010-12-04}}</ref>

==Usage==
{{Unreferenced section|date=August 2008}}
One of the uses of Adobe Flash is to create a '''flash intro''', a piece of animated content displayed at the beginning of a [[website]]. Often, the main content is loading in the background, while the animated content is displayed in the foreground. The intent is to captivate the user's attention so that he or she does not stray from the site, although it may do the opposite as it slows the user from accessing the actual site and can be tedious for users with slow internet connections. Often a "skip" or "skip intro" button is prepared to allow more immediate access to the site's homepage.

==Alternatives to Flash==
===HTML5===
{{main|HTML5 vs. Flash}}

[[HTML 5]] is gaining ground as a competitor to Flash: the [[canvas element]] assists animation, and text can be more easily synchronized with audio and video element timeupdate events. In one example of this, [[Scribd]], a 50 million user a month document sharing website, announced in May 2010 that after three years of investment in Flash, it is changing from that platform to the HTML5 standard.<ref>{{cite web|last=Metz|first=Cade|title=50 million user Scribd scraps Flash for HTML5|url=http://www.theregister.co.uk/2010/05/06/scribd_ditches_flash_for_html5/|publisher=The Register|accessdate=2010-09-17}}</ref> Youtube introduced HTML5 support in January 2010<ref>http://www.youtube.com/html5</ref>, and on Jan 11 2011, the [[Google Chromium]] Project announced on their blog that support for closed codecs (particularly H.264) would be removed from future releases of Chrome. The Chromium announcement specifically mentioned that this was an effort to increase the use of license-free HTML5 and the <video> tag, and drive web-wide adoption of the open-source codecs [[VP8]] and [[Theora]].

===Microsoft Silverlight===
In recent years, [[Microsoft Silverlight]] has emerged as a strong competitor to Flash{{citation needed|date=January 2011}}. While not yet as prevalent on websites as Flash, Silverlight has been used to provide video streaming for many high profile events, including the [[2008 Summer Olympics]] in Beijing,<ref>{{cite web|url=http://techcrunch.com/2008/01/06/microsoft-silverlight-gets-a-high-profile-win-2008-bejing-olympics/ |title=Microsoft Silverlight Gets a High Profile Win: 2008 Beijing Olympics| accessdate=2010-02-23}}</ref> the [[2010 Winter Olympics]] in Vancouver,<ref>{{cite web|url=http://www.businessinsider.com/microsoft-wins-the-2010-olympics-for-silverlight-2009-3 |title=Microsoft Wins The 2010 Olympics For Silverlight| accessdate=2010-02-23}}</ref> and the 2008 conventions for both major political parties in the United States.<ref>{{cite web|url=http://www.microsoft.com/presspass/features/2008/aug08/08-19conventions.mspx | title = Microsoft Working to Make Political Conventions Unconventional|accessdate=2010-02-23}}</ref> Silverlight is also used by [[Netflix]] for its instant video streaming service.<ref>{{cite web|url=http://netflix.mediaroom.com/index.php?s=43&item=288 |title = Netflix Begins Roll-Out of 2nd Generation Media Player for Instant Streaming on Windows PCs and Intel Macs|accessdate=2010-02-23}}</ref>

===Java===
[[Java applet]]s are used both to create interactive visualisations and to present video, three dimensional objects and other media. Java applets are more appropriate for complex visualizations that require significant programming effort in high level language or communications between applet and originating server. Sun's new [[JavaFX]] is considered as another competitor for [[Rich Internet Applications]].

===Other open alternatives===
{{See also|Open format}}

There are equivalent open standards for many simple uses of Flash. Most notably the [[Scalable Vector Graphics|SVG]] and [[Synchronized Multimedia Integration Language|SMIL]] file formats, the ''canvas'', ''audio'' and ''video'' HTML elements, and the [[JavaScript]] programming language. More complex use cases can be achieved by combining these.

The [[World Wide Web Consortium|W3C]]'s [[Scalable Vector Graphics|SVG]] and [[Synchronized Multimedia Integration Language|SMIL]] standards are seen as the nearest equivalents of Flash.<ref>{{cite web|url=http://www.xml.com/pub/a/2001/09/12/svg.html |title=Picture Perfect |publisher=XML.com |date= |accessdate=2010-12-04}}</ref><ref>{{cite web|url=http://www.hofmanns.net/flash/AdobeFlash(formerlyMacromediaFlash)W3Cvalidandsearchmachine-friendlydetectingandembedding.pdf?attredirects=0&d=1 |title=xSWF: Flash W3C valid |publisher=Hofmanns.net |date= |accessdate=2010-12-04}}</ref> [[Opera (web browser)|Opera]] has supported SVG since version 8 and [[Safari (web browser)|Safari]] has since version 3,<ref>{{cite web|url=http://wiki.svg.org/Opera|title=Opera |accessdate=2007-06-18|date=2006-12-27|work=Svg wiki |publisher=Svg.org}}</ref> and [[Mozilla Firefox]]'s built-in support for SVG continues to grow.<ref>{{cite web|url=http://svg.org/story/2006/7/13/85643/0175|title=First Firefox 2.0 Beta Released|accessdate=2007-06-18 |last=Quint|first=Antoine|date=2006-07-13|publisher=Svg.org}}</ref><ref>{{cite web|url=https://developer.mozilla.org/en/docs/SVG_improvements_in_Firefox_3|title=SVG improvements in Firefox 3 |accessdate=2008-07-20|work=Mozilla Developer Center|publisher=[[Mozilla]]|date=2008-06-17}}</ref> Adobe formerly developed and distributed the 'Adobe SVG Viewer' client plug-in for MS Internet Explorer, but discontinued support and distribution on January 1, 2009.<ref>{{cite web|url=http://www.adobe.com/svg/eol.html|title=Adobe to Discontinue Adobe SVG Viewer|accessdate=2007-06-18|publisher=[[Adobe Systems]]}}</ref> This was in a time when Adobe went from competing with Macromedia's Flash to owning the technology itself.<ref>{{cite web|url=http://www.webstandards.org/2005/04/19/adobe-rich-internet-applications-and-standards/|title=Adobe, ‘Rich Internet Applications’ and Standards|accessdate=2010-02-25|date=April 19, 2005|publisher=[[Web Standards Project]]}}</ref>

[[UIRA]] was a [[free software]] project that intended to become a complete replacement for Adobe Flash. The project collapsed in mid 2007, though people are now discussing reviving or continuing it,<ref>{{cite web|url=http://www.unfreeze.net/?page_id=52|title=UIRA, Unfreeze |accessdate=2008-04-21|date=2008-04-20|publisher=unfreeze.net}}</ref> and a few other projects like [http://osflash.org/ajaxanimator Ajax Animator] still exist.

===Third-party players===

Since Flash files do not depend on an open standard such as SVG, this reduces the incentive for non-commercial software to support the format, although there are [[SWF#External links|several]] third party tools which use and generate the SWF file format. <!-- [[IrfanView]] is capable of playing SWF files. - Yes, but this uses the Flash plugin - as is mentioned in the about section of its swf player -->[[Flash Player]] cannot ship as part of a pure [[open source]], or completely free operating system, as its distribution is bound to the [http://www.macromedia.com/software/flash/open/licensing/ Macromedia Licensing Program] and subject to approval.

There is, as of late 2008, no complete free software replacement which offers all the functionality of the latest version of Adobe Flash Player.

Presenting the [[free software movement]], [[Richard Stallman]] stated in a speech in October 2004 that:<ref>{{cite web|url=http://video.google.com/videoplay?docid=-1647626314188526128&ei=LkqgSbfhIYva2gLUotGRDg&hl=un
|title=Richard Stallman on The free software movement and its challenges
|accessdate=2009-02-21
|publisher=Google Video
|location=Australian National University, Canberra, Australia}}</ref>
<blockquote>The use of Flash in websites is a major problem for our community.</blockquote>

Stallman's argument then was that no [[#Playback|free players]] were comparatively good enough. As of February 2010, [[Gnash]] and [[Swfdec]] have seen limited success in competing with Adobe's player. Many important and popular websites require users to have a Flash player, sometimes with no fallback for non-Flash web users. Therefore, the lack of a good free Flash player is arguably an obstacle to enjoying the web with free software, and the aforementioned ubiquity of Flash makes the problem very evident for anyone who tries. The continual high ranking of Gnash on the Free Software Foundation's list of high priority projects<ref>{{Cite document|url=http://www.fsf.org/campaigns/priority.html|publisher=Free Software Foundation|title=High Priority Free Software Projects|accessdate=2009-07-09|postscript=<!--None-->}}</ref> might indicate the severity of the problem, as judged by the free software community.

[[Gnash]] is an active project that aims to create a free player and browser plugin for the Adobe Flash file format and so provide a free alternative to the Adobe Flash Player under the GNU General Public License. Despite potential patent worries because of the proprietary nature of the files involved,<ref>{{Cite journal|last=Hudson |first=Paul |year=2008 |month=July |title=Quick as a Gnash |journal=Linux Format |issue=107 |pages=48–49 |accessdate=2008-07-20 |quote=What happened is this little thing called "software patents". When you use MP3 or FLV, they're proprietary. And although we use FFMPEG and Gstreamer - we actually support all these codecs - we can't distribute Gnash that way. ...of course the OLPC project cannot legally redistribute the codecs. ...Gnash fully supports patent-free codecs such as [[Ogg Vorbis]] and [[Theora]] and [[Direc]] and stuff — Rob Savoye. }}</ref> Gnash supports most SWF v7 features and some SWF v8 and v9.<ref>{{cite web|url=http://www.gnu.org/software/gnash/ |title=Gnash Introduction |accessdate=2008-07-20 |publisher=Free Software Foundation, Inc. |date=2008-06-26 }}</ref><ref>
{{cite web|url=http://www.gnu.org/software/gnash/manual/gnash.html#flashsupport |title=Gnash Manual version 0.4.0 |accessdate=2007-08-15 |author=Rob Savoye, Ann Barcomb |authorlink= |date= |year=2007 |month=June |work= |publisher=Free Software Foundation |pages= |archiveurl = http://web.archive.org/web/20070702101629/http://www.gnu.org/software/gnash/manual/gnash.html#flashsupport <!-- Bot retrieved archive --> |archivedate = 2007-07-02 |quote= }}</ref> Gnash runs on Windows, Linux and other operating systems on 32-bit, 64-bit and other architectures.

[[Swfdec]] is another open-source flash player available for Linux, [[FreeBSD]] and [[OpenBSD]]. See also SWFOpener.

[[Lightspark]] is a new implementation aiming to create a more modern and fast player. Besides hardware-accelerated rendering, it exploits [[Thread (computer science)|multithreading]] and [[JIT compilation]]. It supports only the new [[ActionScript#ActionScript 3.0|ActionScript 3]] [[Virtual Machine|VM]] introduced in Flash 9.

[[Scaleform]] GFx is a commercial alternative Flash player that features full [[hardware acceleration]] using the [[Graphics processing unit|GPU]] and has high conformance with both Flash 10 [[ActionScript 3]]<ref name="ActionScript 3">{{cite web|author=Kris Graft|publisher=[[Gamasutra]]|url=http://www.gamasutra.com/view/news/30745/New_Scaleform_GFx_40_Supports_ActionScript_3_Flash_10.php|title=Scaleform GFx 4 Supports Flash 10 AS3|accessdate=2010-10-01}}</ref> and Flash 8 AS2. Scaleform GFx is licensed as a [[game middleware]] solution and used by many PC and console 3D games for user interfaces, [[HUD (video gaming)|HUDs]], [[minigame|mini games]], and video playback.

[http://rtmpdump.mplayerhq.hu/ rtmpdump] is an open source software implementation of an RTMP client, Flash's own streaming protocol. rtmpdump was removed from [[Sourceforge]] on request by Adobe.<ref name="chillingeffects.org">{{cite web|url=http://www.chillingeffects.org/anticircumvention/notice.cgi?NoticeID=25159 |title=Adobe requests rtmpdump removed from Sourceforge |accessdate=2009-11-20 |date=2009-05-08 }}</ref>

[http://savannah.nongnu.org/projects/flvstreamer flvstreamer] is an open source software implementation of an RTMP client, Flash's own streaming protocol. It is a fork of rtmpdump which has all the cryptographic support (i.e. RTMPE and SWF verification) removed from the code.

[http://smokescreen.us Smokescreen] allows playback of Flash files using javascript in the webpage.

==See also==
;Adobe Flash
* [[SWF]] file format, the files generated by the Flash application and played by Flash Player.
* [[ActionScript]]
* [[ActionScript code protection]]
* [[Adobe Flash Player]], the runtime that executes and plays back Flash movies.
* [[Adobe Flash Lite]], a lightweight version of Flash Player for devices that lack the resources to run regular Flash movies such as mobile phones, some laptop computers and other portable devices.
* [[List of 2D animation software]]
* [[Flash Video]]
* [[Flash emulator]]
* [[Saffron Type System]], the [[Anti-aliasing|anti-aliased]] text-rendering engine used in version 8 onwards.
* [[Local Shared Object]]
* [[SWFObject]], a JavaScript library used to embed Flash content into webpages.
* [[Flash CMS]], content management for Flash content.
;Other
* [[Gnash]]
* [[HTML5 video]]
* [[Microsoft Silverlight]]
* [[JavaFX]]
* [[OpenLaszlo]]
* [[Synfig]]
* [[Lightspark]]

==Footnotes==
{{Reflist|group="spec"}}

==References==
{{Reflist|colwidth=30em}}

==External links==
<!--======================== {{No more links}} ============================
 | PLEASE BE CAUTIOUS IN ADDING MORE LINKS TO THIS ARTICLE. Wikipedia |
 | is not a collection of links nor should it be used for advertising. |
 | |
 | Excessive or inappropriate links WILL BE DELETED. |
 | See [[Wikipedia:External links]] & [[Wikipedia:Spam]] for details. |
 | |
 | If there are already plentiful links, please propose additions or |
 | replacements on this article's discussion page, or submit your link |
 | to the relevant category at the Open Directory Project (dmoz.org) |
 | and link back to that category using the {{dmoz}} template. |
 ======================= {{No more links}} =============================-->
* [http://blogs.adobe.com/flashplatform/ Adobe Flash Platform Blog] - official news channel about Adobe Flash
* [http://www.adobe.com/products/flash/ Adobe Flash for MS WinXP/Vista and Mac OS X]
* [http://kb2.adobe.com/cps/406/kb406791.html Flash plug-in for MS Windows 9x / Macintosh OSX 10.1-10.3 / Red Hat Enterprise Linux 3 and 4]
* [http://wiki.benjaminwolsey.de/FLA_Format FLA format specification]
* [http://ipaddress.net16.net Detect if Flash Player is installed]
;Communities:
* [http://forums.adobe.com/community/flash Adobe's Flash Forum]
* [http://www.flexflashforum.com FlexFlashForum.com - Flash Forum]
* [http://www.actionscript.org Actionscript.org - Community Resource / Tutorials]
* [http://www.flashcomponents.net/community/ Flash Forum / Questions and Answers]

{{Flash builders}}
{{Animation editors}}
{{Adobe Flash}}
{{AdobeCS}}
{{Adobe eLearning Suite}}
{{Adobe Systems}}

[[Category:Animation software]]
[[Category:Cross-platform software]]
[[Category:C++ software]]
[[Category:Graphics file formats]]
[[Category:Mac OS software]]
[[Category:Mac OS X software]]
[[Category:Macromedia software|Flash]]
[[Category:Adobe software|Flash]]
[[Category:Adobe Creative Suite]]
[[Category:Vector graphics editors]]
[[Category:Web development software]]
[[Category:Adobe Flash| ]]
[[Category:2D Animation software]]
[[Category:American inventions]]
[[Category:Windows software]]
[[Category:1996 software]]

[[ar:????? ????]]
[[az:Adobe Flash]]
[[bn:???????? ???????]]
[[zh-min-nan:Macromedia Flash]]
[[bg:Adobe Flash]]
[[ca:Adobe Flash]]
[[cs:Adobe Flash]]
[[da:Adobe Flash]]
[[de:Adobe Flash]]
[[et:Flash]]
[[es:Adobe Flash]]
[[eu:Adobe Flash]]
[[fa:????? ???]]
[[fr:Adobe Flash]]
[[gu:???? ?????]]
[[ko:??? ???]]
[[hi:???? ?????]]
[[id:Adobe Flash]]
[[is:Adobe Flash]]
[[it:Adobe Flash]]
[[he:????? ????]]
[[kn:????? ????????]]
[[ka:Adobe Flash]]
[[lt:Adobe Flash]]
[[hu:Adobe Flash]]
[[mk:Adobe Flash]]
[[mr:??????? ?????]]
[[ms:Adobe Flash]]
[[nl:Adobe Flash]]
[[ja:Adobe Flash]]
[[no:Adobe Flash]]
[[pl:Adobe Flash]]
[[pt:Adobe Flash]]
[[ro:Adobe Flash]]
[[ru:Adobe Flash]]
[[si:?????? (?????????)]]
[[simple:Adobe Flash]]
[[fi:Adobe Flash]]
[[sv:Adobe Flash]]
[[ta:????? ???????]]
[[th:?????? ????]]
[[tr:Adobe Flash]]
[[uk:Adobe Flash]]
[[vi:Adobe Flash]]
[[diq:Adobe Flash]]
[[zh:Adobe Flash]]</text>
</page>
<page>
<id>1060</id>
<title>Adobe GoLive</title>
<text>{{Infobox software
| name                   = Adobe GoLive
| logo                   = [[Image:GoLive 9 icon.png|64px]]
| screenshot             = [[Image:GoLive 9.png|280px]]
| caption                = Adobe GoLive 9 running under [[Mac OS X]]
| developer              = [[Adobe Systems]]
| latest release version = 9.0
| latest release date    = {{release_date|2007|06|01}}
| operating system       = [[Mac OS X]] and [[Microsoft Windows]]
| programming language   = [[C++]]
| genre                  = [[HTML editor]]
| status                 = Discontinued
| license                = [[Proprietary software|Proprietary]]
| website                = [http://www.adobe.com/products/golive/main.html www.adobe.com/products/golive/]
}}
'''Adobe GoLive''' is an [[HTML editor]] and web site management application from [[Adobe Systems]]. It replaced [[Adobe PageMill]] as Adobe's primary HTML editor.  The latest version of Adobe GoLive is version 9, which is not integrated as part of [[Adobe Creative Suite]] 3.  GoLive was discontinued in April 2008.

'''Adobe GoLive''' originated as '''CyberStudio''', the flagship product of a company named '''GoLive Systems, Inc.''' then based in Hamburg, Germany. Adobe purchased GoLive in 1999 and re-branded the '''GoLive CyberStudio''' product to what is now '''Adobe GoLive'''. The first versions of Dreamweaver and Cyberstudio were released in a similar timeframe. However, [[Dreamweaver]] eventually became the dominant HTML editor in both [[marketshare|market]] and [[mindshare]].

Adobe CS2 Premium contains GoLive CS2. While Creative Suite 3 integrates [[Dreamweaver]] as a replacement for GoLive, Adobe released GoLive 9 as a standalone product.<ref>[http://www.adobe.com/aboutadobe/pressroom/pressreleases/200609/091806CreativeSuite.html Adobe PressRoom]</ref> On April 2008, Adobe announced that sales and development of GoLive had ceased in favor of Dreamweaver.<ref>{{cite web |url=http://www.macworld.com/article/133181/2008/04/golivedead.html |author=Cohen, Peter |title=Adobe discontinues GoLive |publisher=Macworld |date=27 April 2008 |accessdate=28 April 2008}}</ref>

==General description and distinctive aspects==
GoLive incorporates a largely [[modeless]] workflow that relies heavily on [[drag-and-drop]]. Most user interaction is done via a contextual [[Inspector window|inspector]] rather than the modal workflow found in [[Dreamweaver]]. Among its features are a separate editor for tables that supports nesting, and a two-dimensional panel for applying [[CSS]] styles to elements. GoLive supports [[drag-and-drop]] of native [[Adobe Photoshop]] and [[Adobe Illustrator]] files via what the company calls "Smart Objects", which then automatically guide the user through saving those files in web-supported formats. Updates to the original Photoshop or Illustrator assets are automatically tracked by GoLive. As a web site management tool, GoLive allows users to transfer and publish content directly from within the application, and allows individual files to be excluded from uploading.

==Language and framework structure==
Adobe GoLive is [[Source code|coded]] in the [[C++]] [[programming language]]<ref>[[Bjarne Stroustrup]]. [http://www.research.att.com/~bs/applications.html C++ applications], 25 May 2007. Retrieved on 19 June 2007.</ref>. It is unusual in that instead of using a standard C++ framework such as [[PowerPlant]] or [[Microsoft Foundation Class Library|MFC]], GoLive uses a custom C++ framework called SCL (Simple Class Library) which was initially built from scratch by the engineers at GoLive Systems Inc. The SCL framework was also used in the short-lived [[Adobe Atmosphere]] 3D software.

==Features==
GoLive has a powerful set of extensibility [[Application programming interface|APIs]] which can be used to add additional functionality to the product. The GoLive [[Software development kit|SDK]] provides interfaces which allow developers to use a combination of [[XML]], [[JavaScript]] and [[C (programming language)|C]]/[[C++]] to create plugins for the product.<ref>[http://www.adobe.com/devnet/golive/ Adobe GoLive SDK]</ref> Unusually, the extensibility API allows developers access to custom drawing and [[event handling]] using JavaScript, as well as a full JavaScript [[debugger]] and [[command line interpreter]]. This allows intermediate-level developers using [[Interpreted language|interpreted]] [[JavaScript]] to create sophisticated [[user interfaces]], the creation of which is normally reserved for developers using [[compiled languages]] such as [[C (programming language)|C]].{{Citation needed|date=July 2010}}

==Release history==
{| class="wikitable"
|-
! Version
! Code Name
! Supported Platforms
! Release Date
|-
| Gonet GoLive Pro 1.0
|
| Classic Mac OS
| August 1996
|-
| GoLive CyberStudio 1.0
|
| Classic Mac OS
| April 1997
|-
| GoLive CyberStudio 2.0
|
| Classic Mac OS
| September 1997
|-
| GoLive CyberStudio 3.0
|
| Classic Mac OS
| April 1998
|-
| Adobe GoLive 4.0
|
| Classic Mac OS
| January 1999
|-
| Adobe GoLive 4.0
|
| Microsoft Windows
| May 1999
|-
| Adobe GoLive 5.0
|
| Classic Mac OS, Microsoft Windows
| August 2000
|-
| Adobe GoLive 6.0
| The 6th Day
| Classic Mac OS, Mac OS X, Microsoft Windows
| February 2002
|-
| Adobe GoLive CS
| Se7en
| Mac OS X, Microsoft Windows
| October 2003
|-
| Adobe GoLive CS2
| Reloaded
| Mac OS X, Microsoft Windows
| April 2005
|-
| Adobe GoLive 9.0
| Vicious
| Universal Mac OS X, Microsoft Windows
| June 2007
|}

==See also==
*[[Comparison of HTML editors]]
*[[List of HTML editors]]

==References==
<references/>

==External links==
{{Wikibooks|Adobe GoLive Guide}}
*[http://www.adobe.com/products/golive/ Adobe GoLive homepage]
*[http://www.oreillynet.com/pub/a/javascript/2002/04/26/golive_history.html OReilly Article with GoLive History]
*[http://www.mprove.de/script/99/pointshoot/index.html mprove: Adobe GoLive’s Point & Shoot - an interface technique for creating hyperlinks]
*[http://www.futurastudios.com/golive911/ Adobe GoLive Tutorials & Resource Site]
*[http://www.technologytutorials.org/ GoLive CS2 Tutorials and Reference]
*[http://www.golivecentral.com/ GoLiveCentral - Tutorials & Resources]
*[http://www.transmitmedia.com/golive/paypal/ PayPal eCommerce Extension for Adobe GoLive]

{{HTML editors}}
{{Adobe Systems}}

{{DEFAULTSORT:Adobe Golive}}
[[Category:Adobe software|GoLive]]
[[Category:Adobe Creative Suite]]
[[Category:C++ software]]
[[Category:Discontinued software]]
[[Category:1996 software]]
[[Category:HTML editors]]
[[Category:Graphics software]]

[[ar:????? ?? ????]]
[[de:Adobe GoLive]]
[[fr:Adobe GoLive]]
[[it:Adobe GoLive]]
[[nl:Adobe GoLive]]
[[ja:Adobe GoLive]]
[[pt:Adobe GoLive]]
[[ru:Adobe GoLive]]
[[sv:Adobe GoLive]]
[[uk:Adobe GoLive]]
[[zh:Adobe GoLive]]</text>
</page>
<page>
<id>1062</id>
<title>Adobe Illustrator Artwork</title>
<text>{{Infobox file format
| name = Adobe Illustrator Artwork (AI)
| icon = 
| extension = <tt>.ai</tt>
| mime = 
| owner = [[Adobe Systems]]
| typecode = 
| genre = 
| container for = 
| contained by = 
| extended from = 
| extended to = 
}}
'''Adobe Illustrator Artwork''' ('''AI''') is a [[Proprietary software|proprietary]] [[file format]] developed by [[Adobe Systems]] for representing single-page [[vector graphics|vector-based drawings]] in either the [[Encapsulated_PostScript|EPS]] or [[PDF]] formats.  The '''.ai''' [[filename extension]] is used by [[Adobe Illustrator]].

Early versions of the AI file format are true [[Encapsulated PostScript|EPS]] files with a restricted, compact syntax, with additional semantics represented by Illustrator-specific [[Document Structuring Conventions|DSC comments]] that conform to DSC's Open Structuring Conventions. These files are identical to their corresponding Illustrator EPS counterparts, but with the EPS procsets ([[library (computing)|procedure sets]]) omitted from the file and instead externally referenced using %%Include [[directive]]s.

{{Expert-subject||paragraph (below)|talk=What is the PGF that AI is supposed to be based on?}}
Recent versions of the AI file format, including the PDF-based formats and recent EPS formats, are based on a native format called [[Progressive Graphics File|PGF]] that is unrelated to both EPS and PDF. PDF compatibility is achieved not by extending the PDF format, but by embedding a complete copy of the native [[Progressive Graphics File|PGF]] data within the PDF file. The same kind of “dual path” approach is also used when recent versions of Illustrator are saving EPS-compatible files.

==Programs that support AI files==
Aside from Adobe Illustrator, the following applications can edit .ai files:
*[[CorelDRAW]] (another proprietary program) can natively edit this file format with some limitations.<ref>{{cite web |url=http://corel.custhelp.com/app/answers/detail/a_id/762365/related/1 |title=CorelDRAW - Supported file formats : Adobe Illustrator (AI) |accessdate=2010-12-01}}</ref><ref name="x3formats">{{cite web |url=http://corel.custhelp.com/app/answers/detail/a_id/759188/~/coreldraw%E2%AE-graphics-suite-x3-supported-file-formats |title=CorelDRAW® Graphics Suite X3 Supported File Formats |accessdate=2010-12-01}}</ref>
*[[Corel Paint Shop Pro]] (another proprietary program) can natively edit this file format.
*[[Ghostscript]] (another GPL-licensed program) can convert AI postscript files into various formats, and also allows programs that use Ghostscript such as [[GIMP]] to import AI files.
*[[Inkscape]] (a free, GPL-licensed program) can import the old Postscript-based Adobe Illustrator format (up to AI ver.8) and AI files based on PDF (AI 9.0 and above).<ref>{{cite web |url=http://wiki.inkscape.org/wiki/index.php/Current_PDF_Support#Current_Adobe_Illustrator_support |title=Inkscape - Current Adobe Illustrator support |accessdate=2010-12-01}}</ref><ref>{{cite web |url=http://wiki.inkscape.org/wiki/index.php/FAQ#What_formats_can_Inkscape_import.2Fexport.3F |title=Inkscape - What formats can Inkscape import/export?  |accessdate=2010-12-01}}</ref>
*[[Skencil]] (another GPL-licensed program) also claims to have some AI support.
*[[sK1 (program)|sK1]] (a free, GPL-licensed vector graphics editor) supports PostScript-based AI files up to AI ver. 9.<ref name="uniconvertor">{{cite web |url=http://sk1project.org/modules.php?name=Products&product=uniconvertor |title=sK1 - UniConvertor - universal vector graphics translator |accessdate=2010-12-01}}</ref>
*[[UniConvertor]] (a free, GPL-licensed vector graphics translator) supports PostScript-based AI files up to AI ver. 9.<ref name="uniconvertor" />
*[[Xara Xtreme]] has support for the format that is described as "working". Xara Xtreme for Linux has similar support.<ref>{{cite web |url=http://www.xaraxtreme.org/Developers/what-can-xara-xtreme-for-linux-do-now.html  |title=What can Xara Xtreme for Linux do now? |accessdate=2010-12-01}}</ref>
*[[XnView]], a freeware graphics format converter, claims to be able to read AI file formats<ref>{{cite web |url=http://www.xnview.com/en/formats.html |title=XnView  - supported formats |accessdate=2010-12-01}}</ref>, if the AI file was saved with the PDF compatibility option. It does not support all AI subformats.<ref>{{cite web |url=http://newsgroup.xnview.com/viewtopic.php?t=1228 |title=XnView - How to display vector formats like PDF, AI,...? GhostScript! |accessdate=2010-12-01}}</ref>
*[[FlexiSign]] (Vector Program used in Signmaking) Can read AI files.
*[[EnRoute]] (Vector program for routers) Can read AI files.
Viewers:
* [[Adobe Reader]] can open .ai files for viewing if they are saved with the PDF compatibility option
* [[Preview (software)|Preview]] can view .ai files

==References==
{{reflist}}

==External links==
*[http://partners.adobe.com/public/developer/en/illustrator/sdk/AI7FileFormat.pdf Adobe Illustrator File Format Specification]—the official specification for the original EPS-based formats
*[http://www.koders.com/perl/fid6748E9100B245543903F2BB4549A23E39A0BDAF6.aspx Ill2SVG.pl source]
*[http://www.xaraxtreme.org/Developers/what-can-xara-xtreme-for-linux-do-now.html Xara Xtreme]
*[http://www.skencil.org/features.html Skencil]
*[http://www.xnview.com/en/formats.html XNView supported formats]

{{Graphics file formats}}

[[Category:Computer file formats]]
[[Category:Graphics file formats]]
[[Category:Vector graphics]]
[[Category:Adobe Systems|Illustrator Artwork]]

{{graphics-software-stub}}

[[pl:AI (format)]]
[[fr:Adobe_Illustrator_Artwork]]
[[uk:AI (?????? ??????)]]</text>
</page>